
D0003E-lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800100  0000218e  00002222  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000218e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000035b  00800136  00800136  00002258  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002258  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002288  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000298  00000000  00000000  000022c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002ec9  00000000  00000000  00002560  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001219  00000000  00000000  00005429  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016d8  00000000  00000000  00006642  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d8c  00000000  00000000  00007d1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a02  00000000  00000000  00008aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000029ad  00000000  00000000  000094aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000248  00000000  00000000  0000be57  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 67 05 	jmp	0xace	; 0xace <__vector_1>
       8:	0c 94 d6 05 	jmp	0xbac	; 0xbac <__vector_2>
       c:	0c 94 45 06 	jmp	0xc8a	; 0xc8a <__vector_3>
      10:	0c 94 b4 06 	jmp	0xd68	; 0xd68 <__vector_4>
      14:	0c 94 23 07 	jmp	0xe46	; 0xe46 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 8e 0d 	jmp	0x1b1c	; 0x1b1c <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 3c 0d 	jmp	0x1a78	; 0x1a78 <__vector_9>
      28:	0c 94 92 07 	jmp	0xf24	; 0xf24 <__vector_10>
      2c:	0c 94 01 08 	jmp	0x1002	; 0x1002 <__vector_11>
      30:	0c 94 70 08 	jmp	0x10e0	; 0x10e0 <__vector_12>
      34:	0c 94 df 08 	jmp	0x11be	; 0x11be <__vector_13>
      38:	0c 94 4e 09 	jmp	0x129c	; 0x129c <__vector_14>
      3c:	0c 94 bd 09 	jmp	0x137a	; 0x137a <__vector_15>
      40:	0c 94 2c 0a 	jmp	0x1458	; 0x1458 <__vector_16>
      44:	0c 94 9b 0a 	jmp	0x1536	; 0x1536 <__vector_17>
      48:	0c 94 0a 0b 	jmp	0x1614	; 0x1614 <__vector_18>
      4c:	0c 94 79 0b 	jmp	0x16f2	; 0x16f2 <__vector_19>
      50:	0c 94 e8 0b 	jmp	0x17d0	; 0x17d0 <__vector_20>
      54:	0c 94 57 0c 	jmp	0x18ae	; 0x18ae <__vector_21>
      58:	0c 94 c6 0c 	jmp	0x198c	; 0x198c <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ee e8       	ldi	r30, 0x8E	; 142
      70:	f1 e2       	ldi	r31, 0x21	; 33
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a6 33       	cpi	r26, 0x36	; 54
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a6 e3       	ldi	r26, 0x36	; 54
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a1 39       	cpi	r26, 0x91	; 145
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 83 03 	call	0x706	; 0x706 <main>
      92:	0c 94 c5 10 	jmp	0x218a	; 0x218a <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <increase>:
#include "Lcd.h"

long currentFreq = 0;
long storedFreq;

void increase(Generators *self) {
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
    currentFreq++;
      a6:	c0 90 36 01 	lds	r12, 0x0136	; 0x800136 <__data_end>
      aa:	d0 90 37 01 	lds	r13, 0x0137	; 0x800137 <__data_end+0x1>
      ae:	e0 90 38 01 	lds	r14, 0x0138	; 0x800138 <__data_end+0x2>
      b2:	f0 90 39 01 	lds	r15, 0x0139	; 0x800139 <__data_end+0x3>
      b6:	2f ef       	ldi	r18, 0xFF	; 255
      b8:	c2 1a       	sub	r12, r18
      ba:	d2 0a       	sbc	r13, r18
      bc:	e2 0a       	sbc	r14, r18
      be:	f2 0a       	sbc	r15, r18
      c0:	c0 92 36 01 	sts	0x0136, r12	; 0x800136 <__data_end>
      c4:	d0 92 37 01 	sts	0x0137, r13	; 0x800137 <__data_end+0x1>
      c8:	e0 92 38 01 	sts	0x0138, r14	; 0x800138 <__data_end+0x2>
      cc:	f0 92 39 01 	sts	0x0139, r15	; 0x800139 <__data_end+0x3>
    // Uppdatera frekvens fÃ¶r actual pulsgenerering
    
    ASYNC(self->lcd, printAt, currentFreq);
      d0:	fc 01       	movw	r30, r24
      d2:	00 81       	ld	r16, Z
      d4:	11 81       	ldd	r17, Z+1	; 0x01
      d6:	0f 2e       	mov	r0, r31
      d8:	f5 e4       	ldi	r31, 0x45	; 69
      da:	ef 2e       	mov	r14, r31
      dc:	f3 e0       	ldi	r31, 0x03	; 3
      de:	ff 2e       	mov	r15, r31
      e0:	f0 2d       	mov	r31, r0
      e2:	20 e0       	ldi	r18, 0x00	; 0
      e4:	30 e0       	ldi	r19, 0x00	; 0
      e6:	a9 01       	movw	r20, r18
      e8:	60 e0       	ldi	r22, 0x00	; 0
      ea:	70 e0       	ldi	r23, 0x00	; 0
      ec:	cb 01       	movw	r24, r22
      ee:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
}
      f2:	1f 91       	pop	r17
      f4:	0f 91       	pop	r16
      f6:	ff 90       	pop	r15
      f8:	ef 90       	pop	r14
      fa:	df 90       	pop	r13
      fc:	cf 90       	pop	r12
      fe:	08 95       	ret

00000100 <decrease>:

void decrease(Generators *self) {
     100:	cf 92       	push	r12
     102:	df 92       	push	r13
     104:	ef 92       	push	r14
     106:	ff 92       	push	r15
     108:	0f 93       	push	r16
     10a:	1f 93       	push	r17
    if (currentFreq > 0) {
     10c:	c0 90 36 01 	lds	r12, 0x0136	; 0x800136 <__data_end>
     110:	d0 90 37 01 	lds	r13, 0x0137	; 0x800137 <__data_end+0x1>
     114:	e0 90 38 01 	lds	r14, 0x0138	; 0x800138 <__data_end+0x2>
     118:	f0 90 39 01 	lds	r15, 0x0139	; 0x800139 <__data_end+0x3>
     11c:	1c 14       	cp	r1, r12
     11e:	1d 04       	cpc	r1, r13
     120:	1e 04       	cpc	r1, r14
     122:	1f 04       	cpc	r1, r15
     124:	f4 f4       	brge	.+60     	; 0x162 <decrease+0x62>
     126:	fc 01       	movw	r30, r24
        currentFreq--;
     128:	81 e0       	ldi	r24, 0x01	; 1
     12a:	c8 1a       	sub	r12, r24
     12c:	d1 08       	sbc	r13, r1
     12e:	e1 08       	sbc	r14, r1
     130:	f1 08       	sbc	r15, r1
     132:	c0 92 36 01 	sts	0x0136, r12	; 0x800136 <__data_end>
     136:	d0 92 37 01 	sts	0x0137, r13	; 0x800137 <__data_end+0x1>
     13a:	e0 92 38 01 	sts	0x0138, r14	; 0x800138 <__data_end+0x2>
     13e:	f0 92 39 01 	sts	0x0139, r15	; 0x800139 <__data_end+0x3>
        // Uppdatara frekvens
        ASYNC(self->lcd, printAt, currentFreq);
     142:	00 81       	ld	r16, Z
     144:	11 81       	ldd	r17, Z+1	; 0x01
     146:	0f 2e       	mov	r0, r31
     148:	f5 e4       	ldi	r31, 0x45	; 69
     14a:	ef 2e       	mov	r14, r31
     14c:	f3 e0       	ldi	r31, 0x03	; 3
     14e:	ff 2e       	mov	r15, r31
     150:	f0 2d       	mov	r31, r0
     152:	20 e0       	ldi	r18, 0x00	; 0
     154:	30 e0       	ldi	r19, 0x00	; 0
     156:	a9 01       	movw	r20, r18
     158:	60 e0       	ldi	r22, 0x00	; 0
     15a:	70 e0       	ldi	r23, 0x00	; 0
     15c:	cb 01       	movw	r24, r22
     15e:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
    }
}
     162:	1f 91       	pop	r17
     164:	0f 91       	pop	r16
     166:	ff 90       	pop	r15
     168:	ef 90       	pop	r14
     16a:	df 90       	pop	r13
     16c:	cf 90       	pop	r12
     16e:	08 95       	ret

00000170 <press>:

// Basically reset
void press(Generators *self) {
    if (currentFreq != 0) {
     170:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__data_end>
     174:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <__data_end+0x1>
     178:	a0 91 38 01 	lds	r26, 0x0138	; 0x800138 <__data_end+0x2>
     17c:	b0 91 39 01 	lds	r27, 0x0139	; 0x800139 <__data_end+0x3>
     180:	00 97       	sbiw	r24, 0x00	; 0
     182:	a1 05       	cpc	r26, r1
     184:	b1 05       	cpc	r27, r1
     186:	89 f0       	breq	.+34     	; 0x1aa <press+0x3a>
        storedFreq = currentFreq;
     188:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <storedFreq>
     18c:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <storedFreq+0x1>
     190:	a0 93 46 01 	sts	0x0146, r26	; 0x800146 <storedFreq+0x2>
     194:	b0 93 47 01 	sts	0x0147, r27	; 0x800147 <storedFreq+0x3>
        currentFreq = 0;
     198:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <__data_end>
     19c:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <__data_end+0x1>
     1a0:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <__data_end+0x2>
     1a4:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <__data_end+0x3>
     1a8:	08 95       	ret
    }
    else {
        currentFreq = storedFreq;
     1aa:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <storedFreq>
     1ae:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <storedFreq+0x1>
     1b2:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <storedFreq+0x2>
     1b6:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <storedFreq+0x3>
     1ba:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__data_end>
     1be:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <__data_end+0x1>
     1c2:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <__data_end+0x2>
     1c6:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <__data_end+0x3>
     1ca:	08 95       	ret

000001cc <increaseGui>:
}

void switchGeneratorGui(Gui *self) {
    ASYNC(self->lcd, switchSegment, NULL);
    isRight = !(isRight);
}
     1cc:	cf 92       	push	r12
     1ce:	df 92       	push	r13
     1d0:	ef 92       	push	r14
     1d2:	ff 92       	push	r15
     1d4:	0f 93       	push	r16
     1d6:	1f 93       	push	r17
     1d8:	cf 93       	push	r28
     1da:	df 93       	push	r29
     1dc:	ec 01       	movw	r28, r24
     1de:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1e2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     1e6:	89 2b       	or	r24, r25
     1e8:	91 f0       	breq	.+36     	; 0x20e <__EEPROM_REGION_LENGTH__+0xe>
     1ea:	0a 81       	ldd	r16, Y+2	; 0x02
     1ec:	1b 81       	ldd	r17, Y+3	; 0x03
     1ee:	c1 2c       	mov	r12, r1
     1f0:	d1 2c       	mov	r13, r1
     1f2:	0f 2e       	mov	r0, r31
     1f4:	fd e4       	ldi	r31, 0x4D	; 77
     1f6:	ef 2e       	mov	r14, r31
     1f8:	f0 e0       	ldi	r31, 0x00	; 0
     1fa:	ff 2e       	mov	r15, r31
     1fc:	f0 2d       	mov	r31, r0
     1fe:	20 e0       	ldi	r18, 0x00	; 0
     200:	30 e0       	ldi	r19, 0x00	; 0
     202:	a9 01       	movw	r20, r18
     204:	60 e0       	ldi	r22, 0x00	; 0
     206:	70 e0       	ldi	r23, 0x00	; 0
     208:	cb 01       	movw	r24, r22
     20a:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
     20e:	08 81       	ld	r16, Y
     210:	19 81       	ldd	r17, Y+1	; 0x01
     212:	c1 2c       	mov	r12, r1
     214:	d1 2c       	mov	r13, r1
     216:	0f 2e       	mov	r0, r31
     218:	fd e4       	ldi	r31, 0x4D	; 77
     21a:	ef 2e       	mov	r14, r31
     21c:	f0 e0       	ldi	r31, 0x00	; 0
     21e:	ff 2e       	mov	r15, r31
     220:	f0 2d       	mov	r31, r0
     222:	20 e0       	ldi	r18, 0x00	; 0
     224:	30 e0       	ldi	r19, 0x00	; 0
     226:	a9 01       	movw	r20, r18
     228:	60 e0       	ldi	r22, 0x00	; 0
     22a:	70 e0       	ldi	r23, 0x00	; 0
     22c:	cb 01       	movw	r24, r22
     22e:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
     232:	df 91       	pop	r29
     234:	cf 91       	pop	r28
     236:	1f 91       	pop	r17
     238:	0f 91       	pop	r16
     23a:	ff 90       	pop	r15
     23c:	ef 90       	pop	r14
     23e:	df 90       	pop	r13
     240:	cf 90       	pop	r12
     242:	08 95       	ret

00000244 <decreaseGui>:
     244:	cf 92       	push	r12
     246:	df 92       	push	r13
     248:	ef 92       	push	r14
     24a:	ff 92       	push	r15
     24c:	0f 93       	push	r16
     24e:	1f 93       	push	r17
     250:	cf 93       	push	r28
     252:	df 93       	push	r29
     254:	ec 01       	movw	r28, r24
     256:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     25a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     25e:	89 2b       	or	r24, r25
     260:	91 f0       	breq	.+36     	; 0x286 <decreaseGui+0x42>
     262:	0a 81       	ldd	r16, Y+2	; 0x02
     264:	1b 81       	ldd	r17, Y+3	; 0x03
     266:	c1 2c       	mov	r12, r1
     268:	d1 2c       	mov	r13, r1
     26a:	0f 2e       	mov	r0, r31
     26c:	f0 e8       	ldi	r31, 0x80	; 128
     26e:	ef 2e       	mov	r14, r31
     270:	f0 e0       	ldi	r31, 0x00	; 0
     272:	ff 2e       	mov	r15, r31
     274:	f0 2d       	mov	r31, r0
     276:	20 e0       	ldi	r18, 0x00	; 0
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	a9 01       	movw	r20, r18
     27c:	60 e0       	ldi	r22, 0x00	; 0
     27e:	70 e0       	ldi	r23, 0x00	; 0
     280:	cb 01       	movw	r24, r22
     282:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
     286:	08 81       	ld	r16, Y
     288:	19 81       	ldd	r17, Y+1	; 0x01
     28a:	c1 2c       	mov	r12, r1
     28c:	d1 2c       	mov	r13, r1
     28e:	0f 2e       	mov	r0, r31
     290:	f5 e4       	ldi	r31, 0x45	; 69
     292:	ef 2e       	mov	r14, r31
     294:	f3 e0       	ldi	r31, 0x03	; 3
     296:	ff 2e       	mov	r15, r31
     298:	f0 2d       	mov	r31, r0
     29a:	20 e0       	ldi	r18, 0x00	; 0
     29c:	30 e0       	ldi	r19, 0x00	; 0
     29e:	a9 01       	movw	r20, r18
     2a0:	60 e0       	ldi	r22, 0x00	; 0
     2a2:	70 e0       	ldi	r23, 0x00	; 0
     2a4:	cb 01       	movw	r24, r22
     2a6:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
     2aa:	df 91       	pop	r29
     2ac:	cf 91       	pop	r28
     2ae:	1f 91       	pop	r17
     2b0:	0f 91       	pop	r16
     2b2:	ff 90       	pop	r15
     2b4:	ef 90       	pop	r14
     2b6:	df 90       	pop	r13
     2b8:	cf 90       	pop	r12
     2ba:	08 95       	ret

000002bc <pressGui>:

void pressGui(Gui *self) {
     2bc:	cf 92       	push	r12
     2be:	df 92       	push	r13
     2c0:	ef 92       	push	r14
     2c2:	ff 92       	push	r15
     2c4:	0f 93       	push	r16
     2c6:	1f 93       	push	r17
     2c8:	cf 93       	push	r28
     2ca:	df 93       	push	r29
     2cc:	ec 01       	movw	r28, r24
    if (isRight) {
     2ce:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     2d2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     2d6:	89 2b       	or	r24, r25
     2d8:	91 f0       	breq	.+36     	; 0x2fe <pressGui+0x42>
        ASYNC(self->genR, press, NULL);
     2da:	0a 81       	ldd	r16, Y+2	; 0x02
     2dc:	1b 81       	ldd	r17, Y+3	; 0x03
     2de:	c1 2c       	mov	r12, r1
     2e0:	d1 2c       	mov	r13, r1
     2e2:	0f 2e       	mov	r0, r31
     2e4:	f8 eb       	ldi	r31, 0xB8	; 184
     2e6:	ef 2e       	mov	r14, r31
     2e8:	f0 e0       	ldi	r31, 0x00	; 0
     2ea:	ff 2e       	mov	r15, r31
     2ec:	f0 2d       	mov	r31, r0
     2ee:	20 e0       	ldi	r18, 0x00	; 0
     2f0:	30 e0       	ldi	r19, 0x00	; 0
     2f2:	a9 01       	movw	r20, r18
     2f4:	60 e0       	ldi	r22, 0x00	; 0
     2f6:	70 e0       	ldi	r23, 0x00	; 0
     2f8:	cb 01       	movw	r24, r22
     2fa:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
    }
    ASYNC(self->genL, press, NULL);
     2fe:	08 81       	ld	r16, Y
     300:	19 81       	ldd	r17, Y+1	; 0x01
     302:	c1 2c       	mov	r12, r1
     304:	d1 2c       	mov	r13, r1
     306:	0f 2e       	mov	r0, r31
     308:	f8 eb       	ldi	r31, 0xB8	; 184
     30a:	ef 2e       	mov	r14, r31
     30c:	f0 e0       	ldi	r31, 0x00	; 0
     30e:	ff 2e       	mov	r15, r31
     310:	f0 2d       	mov	r31, r0
     312:	20 e0       	ldi	r18, 0x00	; 0
     314:	30 e0       	ldi	r19, 0x00	; 0
     316:	a9 01       	movw	r20, r18
     318:	60 e0       	ldi	r22, 0x00	; 0
     31a:	70 e0       	ldi	r23, 0x00	; 0
     31c:	cb 01       	movw	r24, r22
     31e:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
}
     322:	df 91       	pop	r29
     324:	cf 91       	pop	r28
     326:	1f 91       	pop	r17
     328:	0f 91       	pop	r16
     32a:	ff 90       	pop	r15
     32c:	ef 90       	pop	r14
     32e:	df 90       	pop	r13
     330:	cf 90       	pop	r12
     332:	08 95       	ret

00000334 <Init>:
 */ 
#include <avr/io.h>
#include "Init.h"

void Init(void) {
	CLKPR = 0x80;    // Fix clock speed
     334:	e1 e6       	ldi	r30, 0x61	; 97
     336:	f0 e0       	ldi	r31, 0x00	; 0
     338:	80 e8       	ldi	r24, 0x80	; 128
     33a:	80 83       	st	Z, r24
	CLKPR = 0x00;
     33c:	10 82       	st	Z, r1
	
	// LCD init
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     33e:	9f e0       	ldi	r25, 0x0F	; 15
     340:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	//       (                      Voltage                              )
	LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     344:	97 eb       	ldi	r25, 0xB7	; 183
     346:	90 93 e5 00 	sts	0x00E5, r25	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	//       (asynch ext)   (        duty cycle           )   (                  segments                 )
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     34a:	97 e0       	ldi	r25, 0x07	; 7
     34c:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	//       (            Delen med D                    )
	LCDCRA = (1 << LCDAB) | (1 << LCDEN);
     350:	90 ec       	ldi	r25, 0xC0	; 192
     352:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	//       (low power )   (enable lcd)
	
	// Stuffs for the joystick and interrupt
	PORTB = SET(PB7) | SET(PB6) | SET(PB4);					// Set corresponding Output pin for up, down and in
     356:	90 ed       	ldi	r25, 0xD0	; 208
     358:	95 b9       	out	0x05, r25	; 5
	DDRB = SET(DDB7);										// Unsure
     35a:	84 b9       	out	0x04, r24	; 4

	PORTE = SET(PE2) | SET(PE3);							// Set corresponding Output pin for Left and Right
     35c:	8c e0       	ldi	r24, 0x0C	; 12
     35e:	8e b9       	out	0x0e, r24	; 14
	DDRE = SET(DDE2) | SET(DDE3);						
     360:	8d b9       	out	0x0d, r24	; 13
	PCMSK1 |= SET(PCINT15) | SET(PCINT14) | SET(PCINT12);	// Pin change interrupt 1
     362:	ec e6       	ldi	r30, 0x6C	; 108
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	80 81       	ld	r24, Z
     368:	80 6d       	ori	r24, 0xD0	; 208
     36a:	80 83       	st	Z, r24
	PCMSK0 |= SET(PCINT2) | SET(PCINT3);
     36c:	eb e6       	ldi	r30, 0x6B	; 107
     36e:	f0 e0       	ldi	r31, 0x00	; 0
     370:	80 81       	ld	r24, Z
     372:	8c 60       	ori	r24, 0x0C	; 12
     374:	80 83       	st	Z, r24
	EIMSK |= SET(PCIE1) | SET(PCIE0);						// Enalbe pin change on I/O pin 7
     376:	8d b3       	in	r24, 0x1d	; 29
     378:	80 6c       	ori	r24, 0xC0	; 192
     37a:	8d bb       	out	0x1d, r24	; 29
     37c:	08 95       	ret

0000037e <FreqChange>:
#include <avr/io.h>
#include "InteruptHandler.h"
#include "TinyTimber.h"
#include "Joystick.h"

void FreqChange(InteruptHandler *self){
     37e:	cf 92       	push	r12
     380:	df 92       	push	r13
     382:	ef 92       	push	r14
     384:	ff 92       	push	r15
     386:	0f 93       	push	r16
     388:	1f 93       	push	r17
    ASYNC(self->Joystick, joystickVert, NULL);
     38a:	fc 01       	movw	r30, r24
     38c:	00 81       	ld	r16, Z
     38e:	11 81       	ldd	r17, Z+1	; 0x01
     390:	c1 2c       	mov	r12, r1
     392:	d1 2c       	mov	r13, r1
     394:	0f 2e       	mov	r0, r31
     396:	f7 e0       	ldi	r31, 0x07	; 7
     398:	ef 2e       	mov	r14, r31
     39a:	f2 e0       	ldi	r31, 0x02	; 2
     39c:	ff 2e       	mov	r15, r31
     39e:	f0 2d       	mov	r31, r0
     3a0:	20 e0       	ldi	r18, 0x00	; 0
     3a2:	30 e0       	ldi	r19, 0x00	; 0
     3a4:	a9 01       	movw	r20, r18
     3a6:	60 e0       	ldi	r22, 0x00	; 0
     3a8:	70 e0       	ldi	r23, 0x00	; 0
     3aa:	cb 01       	movw	r24, r22
     3ac:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
}
     3b0:	1f 91       	pop	r17
     3b2:	0f 91       	pop	r16
     3b4:	ff 90       	pop	r15
     3b6:	ef 90       	pop	r14
     3b8:	df 90       	pop	r13
     3ba:	cf 90       	pop	r12
     3bc:	08 95       	ret

000003be <genSwitch>:

void genSwitch(InteruptHandler *self) {
     3be:	cf 92       	push	r12
     3c0:	df 92       	push	r13
     3c2:	ef 92       	push	r14
     3c4:	ff 92       	push	r15
     3c6:	0f 93       	push	r16
     3c8:	1f 93       	push	r17
	if (self->risingEdge) {
     3ca:	fc 01       	movw	r30, r24
     3cc:	24 81       	ldd	r18, Z+4	; 0x04
     3ce:	22 23       	and	r18, r18
     3d0:	a1 f0       	breq	.+40     	; 0x3fa <genSwitch+0x3c>
		self->risingEdge = false;
     3d2:	14 82       	std	Z+4, r1	; 0x04
		ASYNC(self->gui, pressGui, NULL);
     3d4:	02 81       	ldd	r16, Z+2	; 0x02
     3d6:	13 81       	ldd	r17, Z+3	; 0x03
     3d8:	c1 2c       	mov	r12, r1
     3da:	d1 2c       	mov	r13, r1
     3dc:	0f 2e       	mov	r0, r31
     3de:	fe e5       	ldi	r31, 0x5E	; 94
     3e0:	ef 2e       	mov	r14, r31
     3e2:	f1 e0       	ldi	r31, 0x01	; 1
     3e4:	ff 2e       	mov	r15, r31
     3e6:	f0 2d       	mov	r31, r0
     3e8:	20 e0       	ldi	r18, 0x00	; 0
     3ea:	30 e0       	ldi	r19, 0x00	; 0
     3ec:	a9 01       	movw	r20, r18
     3ee:	60 e0       	ldi	r22, 0x00	; 0
     3f0:	70 e0       	ldi	r23, 0x00	; 0
     3f2:	cb 01       	movw	r24, r22
     3f4:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
     3f8:	03 c0       	rjmp	.+6      	; 0x400 <__DATA_REGION_LENGTH__>
	}
	else{
		self->risingEdge = true;
     3fa:	21 e0       	ldi	r18, 0x01	; 1
     3fc:	fc 01       	movw	r30, r24
     3fe:	24 83       	std	Z+4, r18	; 0x04
	}
}
     400:	1f 91       	pop	r17
     402:	0f 91       	pop	r16
     404:	ff 90       	pop	r15
     406:	ef 90       	pop	r14
     408:	df 90       	pop	r13
     40a:	cf 90       	pop	r12
     40c:	08 95       	ret

0000040e <joystickVert>:
#include <stdbool.h>
#include <avr/io.h>
#include "Joystick.h"


int joystickVert(Joystick *self){
     40e:	cf 92       	push	r12
     410:	df 92       	push	r13
     412:	ef 92       	push	r14
     414:	ff 92       	push	r15
     416:	0f 93       	push	r16
     418:	1f 93       	push	r17
     41a:	cf 93       	push	r28
     41c:	df 93       	push	r29
     41e:	ec 01       	movw	r28, r24
	if (!(PINB & (1 << PB7))) { //ner klickning
     420:	1f 99       	sbic	0x03, 7	; 3
     422:	22 c0       	rjmp	.+68     	; 0x468 <joystickVert+0x5a>
		ASYNC(self->gui, decreaseGui, NULL); // Kalla pï¿½ GUI fï¿½r att sï¿½nka frekvensen
     424:	08 81       	ld	r16, Y
     426:	19 81       	ldd	r17, Y+1	; 0x01
     428:	c1 2c       	mov	r12, r1
     42a:	d1 2c       	mov	r13, r1
     42c:	0f 2e       	mov	r0, r31
     42e:	f2 e2       	ldi	r31, 0x22	; 34
     430:	ef 2e       	mov	r14, r31
     432:	f1 e0       	ldi	r31, 0x01	; 1
     434:	ff 2e       	mov	r15, r31
     436:	f0 2d       	mov	r31, r0
     438:	20 e0       	ldi	r18, 0x00	; 0
     43a:	30 e0       	ldi	r19, 0x00	; 0
     43c:	a9 01       	movw	r20, r18
     43e:	60 e0       	ldi	r22, 0x00	; 0
     440:	70 e0       	ldi	r23, 0x00	; 0
     442:	cb 01       	movw	r24, r22
     444:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
		AFTER(MSEC(100), self, joystickVert, NULL);	// Kalla pï¿½ sig sjï¿½lv igen (loop)
     448:	0f 2e       	mov	r0, r31
     44a:	f7 e0       	ldi	r31, 0x07	; 7
     44c:	ef 2e       	mov	r14, r31
     44e:	f2 e0       	ldi	r31, 0x02	; 2
     450:	ff 2e       	mov	r15, r31
     452:	f0 2d       	mov	r31, r0
     454:	8e 01       	movw	r16, r28
     456:	20 e0       	ldi	r18, 0x00	; 0
     458:	30 e0       	ldi	r19, 0x00	; 0
     45a:	a9 01       	movw	r20, r18
     45c:	65 e3       	ldi	r22, 0x35	; 53
     45e:	7c e0       	ldi	r23, 0x0C	; 12
     460:	80 e0       	ldi	r24, 0x00	; 0
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
	}
	if (!(PINB & (1 << PB6))) {
     468:	1e 99       	sbic	0x03, 6	; 3
     46a:	22 c0       	rjmp	.+68     	; 0x4b0 <joystickVert+0xa2>
		ASYNC(self->gui, increaseGui, NULL);
     46c:	08 81       	ld	r16, Y
     46e:	19 81       	ldd	r17, Y+1	; 0x01
     470:	c1 2c       	mov	r12, r1
     472:	d1 2c       	mov	r13, r1
     474:	0f 2e       	mov	r0, r31
     476:	f6 ee       	ldi	r31, 0xE6	; 230
     478:	ef 2e       	mov	r14, r31
     47a:	f0 e0       	ldi	r31, 0x00	; 0
     47c:	ff 2e       	mov	r15, r31
     47e:	f0 2d       	mov	r31, r0
     480:	20 e0       	ldi	r18, 0x00	; 0
     482:	30 e0       	ldi	r19, 0x00	; 0
     484:	a9 01       	movw	r20, r18
     486:	60 e0       	ldi	r22, 0x00	; 0
     488:	70 e0       	ldi	r23, 0x00	; 0
     48a:	cb 01       	movw	r24, r22
     48c:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
		AFTER(MSEC(100), self, joystickVert, NULL);
     490:	0f 2e       	mov	r0, r31
     492:	f7 e0       	ldi	r31, 0x07	; 7
     494:	ef 2e       	mov	r14, r31
     496:	f2 e0       	ldi	r31, 0x02	; 2
     498:	ff 2e       	mov	r15, r31
     49a:	f0 2d       	mov	r31, r0
     49c:	8e 01       	movw	r16, r28
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	30 e0       	ldi	r19, 0x00	; 0
     4a2:	a9 01       	movw	r20, r18
     4a4:	65 e3       	ldi	r22, 0x35	; 53
     4a6:	7c e0       	ldi	r23, 0x0C	; 12
     4a8:	80 e0       	ldi	r24, 0x00	; 0
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
	}
	if (!(PINB & (1 << PB4))) { // press
     4b0:	1c 99       	sbic	0x03, 4	; 3
     4b2:	19 c0       	rjmp	.+50     	; 0x4e6 <joystickVert+0xd8>
		if (self->risingEdge) {
     4b4:	8a 81       	ldd	r24, Y+2	; 0x02
     4b6:	88 23       	and	r24, r24
     4b8:	a1 f0       	breq	.+40     	; 0x4e2 <joystickVert+0xd4>
			self->risingEdge = false;
     4ba:	1a 82       	std	Y+2, r1	; 0x02
			ASYNC(self->gui, pressGui, NULL);
     4bc:	08 81       	ld	r16, Y
     4be:	19 81       	ldd	r17, Y+1	; 0x01
     4c0:	c1 2c       	mov	r12, r1
     4c2:	d1 2c       	mov	r13, r1
     4c4:	0f 2e       	mov	r0, r31
     4c6:	fe e5       	ldi	r31, 0x5E	; 94
     4c8:	ef 2e       	mov	r14, r31
     4ca:	f1 e0       	ldi	r31, 0x01	; 1
     4cc:	ff 2e       	mov	r15, r31
     4ce:	f0 2d       	mov	r31, r0
     4d0:	20 e0       	ldi	r18, 0x00	; 0
     4d2:	30 e0       	ldi	r19, 0x00	; 0
     4d4:	a9 01       	movw	r20, r18
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	cb 01       	movw	r24, r22
     4dc:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
     4e0:	02 c0       	rjmp	.+4      	; 0x4e6 <joystickVert+0xd8>
		}
		else{
			self->risingEdge = true;
     4e2:	81 e0       	ldi	r24, 0x01	; 1
     4e4:	8a 83       	std	Y+2, r24	; 0x02
		}
	}
	return 0;
}
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	df 91       	pop	r29
     4ec:	cf 91       	pop	r28
     4ee:	1f 91       	pop	r17
     4f0:	0f 91       	pop	r16
     4f2:	ff 90       	pop	r15
     4f4:	ef 90       	pop	r14
     4f6:	df 90       	pop	r13
     4f8:	cf 90       	pop	r12
     4fa:	08 95       	ret

000004fc <displayChar>:
 };

// Switches between two segments 
void switchSegment() {
    LCDDR13 = !(LCDDR13 & 1);
    LCDDR18 = !(LCDDR18 & 1);
     4fc:	cf 93       	push	r28
     4fe:	df 93       	push	r29
     500:	00 d0       	rcall	.+0      	; 0x502 <__stack+0x3>
     502:	00 d0       	rcall	.+0      	; 0x504 <__stack+0x5>
     504:	cd b7       	in	r28, 0x3d	; 61
     506:	de b7       	in	r29, 0x3e	; 62
     508:	da 01       	movw	r26, r20
     50a:	90 ed       	ldi	r25, 0xD0	; 208
     50c:	98 0f       	add	r25, r24
     50e:	9a 30       	cpi	r25, 0x0A	; 10
     510:	80 f4       	brcc	.+32     	; 0x532 <__stack+0x33>
     512:	20 e0       	ldi	r18, 0x00	; 0
     514:	30 e0       	ldi	r19, 0x00	; 0
     516:	28 c0       	rjmp	.+80     	; 0x568 <__stack+0x69>
     518:	fc 01       	movw	r30, r24
     51a:	e6 5f       	subi	r30, 0xF6	; 246
     51c:	fe 4f       	sbci	r31, 0xFE	; 254
     51e:	20 a5       	ldd	r18, Z+40	; 0x28
     520:	e1 e0       	ldi	r30, 0x01	; 1
     522:	f0 e0       	ldi	r31, 0x00	; 0
     524:	ec 0f       	add	r30, r28
     526:	fd 1f       	adc	r31, r29
     528:	e8 0f       	add	r30, r24
     52a:	f9 1f       	adc	r31, r25
     52c:	20 83       	st	Z, r18
     52e:	01 96       	adiw	r24, 0x01	; 1
     530:	02 c0       	rjmp	.+4      	; 0x536 <__stack+0x37>
     532:	80 e0       	ldi	r24, 0x00	; 0
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	84 30       	cpi	r24, 0x04	; 4
     538:	91 05       	cpc	r25, r1
     53a:	74 f3       	brlt	.-36     	; 0x518 <__stack+0x19>
     53c:	18 c0       	rjmp	.+48     	; 0x56e <__stack+0x6f>
     53e:	e8 2f       	mov	r30, r24
     540:	f0 e0       	ldi	r31, 0x00	; 0
     542:	f0 97       	sbiw	r30, 0x30	; 48
     544:	ee 0f       	add	r30, r30
     546:	ff 1f       	adc	r31, r31
     548:	ee 0f       	add	r30, r30
     54a:	ff 1f       	adc	r31, r31
     54c:	e6 5f       	subi	r30, 0xF6	; 246
     54e:	fe 4f       	sbci	r31, 0xFE	; 254
     550:	e2 0f       	add	r30, r18
     552:	f3 1f       	adc	r31, r19
     554:	90 81       	ld	r25, Z
     556:	e1 e0       	ldi	r30, 0x01	; 1
     558:	f0 e0       	ldi	r31, 0x00	; 0
     55a:	ec 0f       	add	r30, r28
     55c:	fd 1f       	adc	r31, r29
     55e:	e2 0f       	add	r30, r18
     560:	f3 1f       	adc	r31, r19
     562:	90 83       	st	Z, r25
     564:	2f 5f       	subi	r18, 0xFF	; 255
     566:	3f 4f       	sbci	r19, 0xFF	; 255
     568:	24 30       	cpi	r18, 0x04	; 4
     56a:	31 05       	cpc	r19, r1
     56c:	44 f3       	brlt	.-48     	; 0x53e <__stack+0x3f>
     56e:	61 11       	cpse	r22, r1
     570:	0d c0       	rjmp	.+26     	; 0x58c <__stack+0x8d>
     572:	11 c0       	rjmp	.+34     	; 0x596 <__stack+0x97>
     574:	e1 e0       	ldi	r30, 0x01	; 1
     576:	f0 e0       	ldi	r31, 0x00	; 0
     578:	ec 0f       	add	r30, r28
     57a:	fd 1f       	adc	r31, r29
     57c:	e8 0f       	add	r30, r24
     57e:	f9 1f       	adc	r31, r25
     580:	20 81       	ld	r18, Z
     582:	22 95       	swap	r18
     584:	20 7f       	andi	r18, 0xF0	; 240
     586:	20 83       	st	Z, r18
     588:	01 96       	adiw	r24, 0x01	; 1
     58a:	02 c0       	rjmp	.+4      	; 0x590 <__stack+0x91>
     58c:	80 e0       	ldi	r24, 0x00	; 0
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	84 30       	cpi	r24, 0x04	; 4
     592:	91 05       	cpc	r25, r1
     594:	7c f3       	brlt	.-34     	; 0x574 <__stack+0x75>
     596:	9c 91       	ld	r25, X
     598:	89 81       	ldd	r24, Y+1	; 0x01
     59a:	89 2b       	or	r24, r25
     59c:	8c 93       	st	X, r24
     59e:	15 96       	adiw	r26, 0x05	; 5
     5a0:	9c 91       	ld	r25, X
     5a2:	15 97       	sbiw	r26, 0x05	; 5
     5a4:	8a 81       	ldd	r24, Y+2	; 0x02
     5a6:	89 2b       	or	r24, r25
     5a8:	15 96       	adiw	r26, 0x05	; 5
     5aa:	8c 93       	st	X, r24
     5ac:	15 97       	sbiw	r26, 0x05	; 5
     5ae:	1a 96       	adiw	r26, 0x0a	; 10
     5b0:	9c 91       	ld	r25, X
     5b2:	1a 97       	sbiw	r26, 0x0a	; 10
     5b4:	8b 81       	ldd	r24, Y+3	; 0x03
     5b6:	89 2b       	or	r24, r25
     5b8:	1a 96       	adiw	r26, 0x0a	; 10
     5ba:	8c 93       	st	X, r24
     5bc:	1a 97       	sbiw	r26, 0x0a	; 10
     5be:	1f 96       	adiw	r26, 0x0f	; 15
     5c0:	9c 91       	ld	r25, X
     5c2:	1f 97       	sbiw	r26, 0x0f	; 15
     5c4:	8c 81       	ldd	r24, Y+4	; 0x04
     5c6:	89 2b       	or	r24, r25
     5c8:	1f 96       	adiw	r26, 0x0f	; 15
     5ca:	8c 93       	st	X, r24
     5cc:	0f 90       	pop	r0
     5ce:	0f 90       	pop	r0
     5d0:	0f 90       	pop	r0
     5d2:	0f 90       	pop	r0
     5d4:	df 91       	pop	r29
     5d6:	cf 91       	pop	r28
     5d8:	08 95       	ret

000005da <removeOldChar>:
     5da:	88 23       	and	r24, r24
     5dc:	91 f0       	breq	.+36     	; 0x602 <removeOldChar+0x28>
     5de:	fb 01       	movw	r30, r22
     5e0:	80 81       	ld	r24, Z
     5e2:	89 70       	andi	r24, 0x09	; 9
     5e4:	80 83       	st	Z, r24
     5e6:	85 e0       	ldi	r24, 0x05	; 5
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	07 c0       	rjmp	.+14     	; 0x5fa <removeOldChar+0x20>
     5ec:	fb 01       	movw	r30, r22
     5ee:	e8 0f       	add	r30, r24
     5f0:	f9 1f       	adc	r31, r25
     5f2:	20 81       	ld	r18, Z
     5f4:	2f 70       	andi	r18, 0x0F	; 15
     5f6:	20 83       	st	Z, r18
     5f8:	05 96       	adiw	r24, 0x05	; 5
     5fa:	84 31       	cpi	r24, 0x14	; 20
     5fc:	91 05       	cpc	r25, r1
     5fe:	b4 f3       	brlt	.-20     	; 0x5ec <removeOldChar+0x12>
     600:	08 95       	ret
     602:	fb 01       	movw	r30, r22
     604:	80 81       	ld	r24, Z
     606:	80 79       	andi	r24, 0x90	; 144
     608:	80 83       	st	Z, r24
     60a:	85 e0       	ldi	r24, 0x05	; 5
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	07 c0       	rjmp	.+14     	; 0x61e <removeOldChar+0x44>
     610:	fb 01       	movw	r30, r22
     612:	e8 0f       	add	r30, r24
     614:	f9 1f       	adc	r31, r25
     616:	20 81       	ld	r18, Z
     618:	20 7f       	andi	r18, 0xF0	; 240
     61a:	20 83       	st	Z, r18
     61c:	05 96       	adiw	r24, 0x05	; 5
     61e:	84 31       	cpi	r24, 0x14	; 20
     620:	91 05       	cpc	r25, r1
     622:	b4 f3       	brlt	.-20     	; 0x610 <removeOldChar+0x36>
     624:	08 95       	ret

00000626 <writeChar>:
     626:	1f 93       	push	r17
     628:	cf 93       	push	r28
     62a:	df 93       	push	r29
     62c:	18 2f       	mov	r17, r24
     62e:	60 fd       	sbrc	r22, 0
     630:	14 c0       	rjmp	.+40     	; 0x65a <writeChar+0x34>
     632:	ab 01       	movw	r20, r22
     634:	77 23       	and	r23, r23
     636:	14 f4       	brge	.+4      	; 0x63c <writeChar+0x16>
     638:	4f 5f       	subi	r20, 0xFF	; 255
     63a:	5f 4f       	sbci	r21, 0xFF	; 255
     63c:	55 95       	asr	r21
     63e:	47 95       	ror	r20
     640:	ea 01       	movw	r28, r20
     642:	c4 51       	subi	r28, 0x14	; 20
     644:	df 4f       	sbci	r29, 0xFF	; 255
     646:	be 01       	movw	r22, r28
     648:	80 e0       	ldi	r24, 0x00	; 0
     64a:	0e 94 ed 02 	call	0x5da	; 0x5da <removeOldChar>
     64e:	ae 01       	movw	r20, r28
     650:	60 e0       	ldi	r22, 0x00	; 0
     652:	81 2f       	mov	r24, r17
     654:	0e 94 7e 02 	call	0x4fc	; 0x4fc <displayChar>
     658:	14 c0       	rjmp	.+40     	; 0x682 <writeChar+0x5c>
     65a:	61 50       	subi	r22, 0x01	; 1
     65c:	71 09       	sbc	r23, r1
     65e:	ab 01       	movw	r20, r22
     660:	12 f4       	brpl	.+4      	; 0x666 <writeChar+0x40>
     662:	4f 5f       	subi	r20, 0xFF	; 255
     664:	5f 4f       	sbci	r21, 0xFF	; 255
     666:	55 95       	asr	r21
     668:	47 95       	ror	r20
     66a:	ea 01       	movw	r28, r20
     66c:	c4 51       	subi	r28, 0x14	; 20
     66e:	df 4f       	sbci	r29, 0xFF	; 255
     670:	be 01       	movw	r22, r28
     672:	81 e0       	ldi	r24, 0x01	; 1
     674:	0e 94 ed 02 	call	0x5da	; 0x5da <removeOldChar>
     678:	ae 01       	movw	r20, r28
     67a:	61 e0       	ldi	r22, 0x01	; 1
     67c:	81 2f       	mov	r24, r17
     67e:	0e 94 7e 02 	call	0x4fc	; 0x4fc <displayChar>
     682:	df 91       	pop	r29
     684:	cf 91       	pop	r28
     686:	1f 91       	pop	r17
     688:	08 95       	ret

0000068a <printAt>:
}
 
 // Displays last two digits of num in pos and pos+1
void printAt(Lcd *self, long num) {
     68a:	8f 92       	push	r8
     68c:	9f 92       	push	r9
     68e:	af 92       	push	r10
     690:	bf 92       	push	r11
     692:	cf 92       	push	r12
     694:	df 92       	push	r13
     696:	ef 92       	push	r14
     698:	ff 92       	push	r15
     69a:	cf 93       	push	r28
     69c:	df 93       	push	r29
     69e:	4a 01       	movw	r8, r20
     6a0:	5b 01       	movw	r10, r22
	int pp = self->pos;
     6a2:	fc 01       	movw	r30, r24
     6a4:	c4 81       	ldd	r28, Z+4	; 0x04
     6a6:	d5 81       	ldd	r29, Z+5	; 0x05
    writeChar( (num % 100) / 10 + '0', pp);
     6a8:	cb 01       	movw	r24, r22
     6aa:	ba 01       	movw	r22, r20
     6ac:	24 e6       	ldi	r18, 0x64	; 100
     6ae:	30 e0       	ldi	r19, 0x00	; 0
     6b0:	40 e0       	ldi	r20, 0x00	; 0
     6b2:	50 e0       	ldi	r21, 0x00	; 0
     6b4:	0e 94 43 10 	call	0x2086	; 0x2086 <__divmodsi4>
     6b8:	0f 2e       	mov	r0, r31
     6ba:	fa e0       	ldi	r31, 0x0A	; 10
     6bc:	cf 2e       	mov	r12, r31
     6be:	d1 2c       	mov	r13, r1
     6c0:	e1 2c       	mov	r14, r1
     6c2:	f1 2c       	mov	r15, r1
     6c4:	f0 2d       	mov	r31, r0
     6c6:	a7 01       	movw	r20, r14
     6c8:	96 01       	movw	r18, r12
     6ca:	0e 94 43 10 	call	0x2086	; 0x2086 <__divmodsi4>
     6ce:	be 01       	movw	r22, r28
     6d0:	80 e3       	ldi	r24, 0x30	; 48
     6d2:	82 0f       	add	r24, r18
     6d4:	0e 94 13 03 	call	0x626	; 0x626 <writeChar>
    pp++;
     6d8:	21 96       	adiw	r28, 0x01	; 1
    writeChar( num % 10 + '0', pp);
     6da:	c5 01       	movw	r24, r10
     6dc:	b4 01       	movw	r22, r8
     6de:	a7 01       	movw	r20, r14
     6e0:	96 01       	movw	r18, r12
     6e2:	0e 94 43 10 	call	0x2086	; 0x2086 <__divmodsi4>
     6e6:	86 2f       	mov	r24, r22
     6e8:	be 01       	movw	r22, r28
     6ea:	80 5d       	subi	r24, 0xD0	; 208
     6ec:	0e 94 13 03 	call	0x626	; 0x626 <writeChar>
 }
     6f0:	df 91       	pop	r29
     6f2:	cf 91       	pop	r28
     6f4:	ff 90       	pop	r15
     6f6:	ef 90       	pop	r14
     6f8:	df 90       	pop	r13
     6fa:	cf 90       	pop	r12
     6fc:	bf 90       	pop	r11
     6fe:	af 90       	pop	r10
     700:	9f 90       	pop	r9
     702:	8f 90       	pop	r8
     704:	08 95       	ret

00000706 <main>:
#include "Joystick.h"
#include "Lcd.h"
#include "TinyTimber.h"


int main() {
     706:	cf 93       	push	r28
     708:	df 93       	push	r29
     70a:	cd b7       	in	r28, 0x3d	; 61
     70c:	de b7       	in	r29, 0x3e	; 62
     70e:	6e 97       	sbiw	r28, 0x1e	; 30
     710:	0f b6       	in	r0, 0x3f	; 63
     712:	f8 94       	cli
     714:	de bf       	out	0x3e, r29	; 62
     716:	0f be       	out	0x3f, r0	; 63
     718:	cd bf       	out	0x3d, r28	; 61
	Init();
     71a:	0e 94 9a 01 	call	0x334	; 0x334 <Init>
	Lcd displayL = initLcd(0);
     71e:	86 e0       	ldi	r24, 0x06	; 6
     720:	de 01       	movw	r26, r28
     722:	11 96       	adiw	r26, 0x01	; 1
     724:	fd 01       	movw	r30, r26
     726:	98 2f       	mov	r25, r24
     728:	11 92       	st	Z+, r1
     72a:	9a 95       	dec	r25
     72c:	e9 f7       	brne	.-6      	; 0x728 <main+0x22>
	Lcd displayR = initLcd(4);
     72e:	ae 01       	movw	r20, r28
     730:	49 5f       	subi	r20, 0xF9	; 249
     732:	5f 4f       	sbci	r21, 0xFF	; 255
     734:	fa 01       	movw	r30, r20
     736:	98 2f       	mov	r25, r24
     738:	11 92       	st	Z+, r1
     73a:	9a 95       	dec	r25
     73c:	e9 f7       	brne	.-6      	; 0x738 <main+0x32>
     73e:	24 e0       	ldi	r18, 0x04	; 4
     740:	30 e0       	ldi	r19, 0x00	; 0
     742:	38 87       	std	Y+8, r19	; 0x08
     744:	2f 83       	std	Y+7, r18	; 0x07
	Generators genL = initGenerator(&displayL);
     746:	be 87       	std	Y+14, r27	; 0x0e
     748:	ad 87       	std	Y+13, r26	; 0x0d
	Generators genR = initGenerator(&displayR);
     74a:	58 8b       	std	Y+16, r21	; 0x10
     74c:	4f 87       	std	Y+15, r20	; 0x0f
	Gui gui = initGui(&genL, &genR);
     74e:	fe 01       	movw	r30, r28
     750:	71 96       	adiw	r30, 0x11	; 17
     752:	df 01       	movw	r26, r30
     754:	1d 92       	st	X+, r1
     756:	8a 95       	dec	r24
     758:	e9 f7       	brne	.-6      	; 0x754 <main+0x4e>
     75a:	ce 01       	movw	r24, r28
     75c:	0d 96       	adiw	r24, 0x0d	; 13
     75e:	9a 8b       	std	Y+18, r25	; 0x12
     760:	89 8b       	std	Y+17, r24	; 0x11
     762:	02 96       	adiw	r24, 0x02	; 2
     764:	9c 8b       	std	Y+20, r25	; 0x14
     766:	8b 8b       	std	Y+19, r24	; 0x13
	Joystick joy = initJoystick(&gui);
     768:	1f 8a       	std	Y+23, r1	; 0x17
     76a:	18 8e       	std	Y+24, r1	; 0x18
     76c:	19 8e       	std	Y+25, r1	; 0x19
     76e:	f8 8f       	std	Y+24, r31	; 0x18
     770:	ef 8b       	std	Y+23, r30	; 0x17
	InteruptHandler inter = initInteruptHandler(&joy);
     772:	1b 8e       	std	Y+27, r1	; 0x1b
     774:	1a 8e       	std	Y+26, r1	; 0x1a
     776:	08 96       	adiw	r24, 0x08	; 8
     778:	9d 8f       	std	Y+29, r25	; 0x1d
     77a:	8c 8f       	std	Y+28, r24	; 0x1c
     77c:	1e 8e       	std	Y+30, r1	; 0x1e
	INSTALL(&inter, FreqChange, IRQ_PCINT1);
     77e:	42 e0       	ldi	r20, 0x02	; 2
     780:	6f eb       	ldi	r22, 0xBF	; 191
     782:	71 e0       	ldi	r23, 0x01	; 1
     784:	03 96       	adiw	r24, 0x03	; 3
     786:	0e 94 11 10 	call	0x2022	; 0x2022 <install>
	INSTALL(&inter, genSwitch, IRQ_PCINT0);
     78a:	41 e0       	ldi	r20, 0x01	; 1
     78c:	6f ed       	ldi	r22, 0xDF	; 223
     78e:	71 e0       	ldi	r23, 0x01	; 1
     790:	ce 01       	movw	r24, r28
     792:	4a 96       	adiw	r24, 0x1a	; 26
     794:	0e 94 11 10 	call	0x2022	; 0x2022 <install>
	return tinytimber(NULL,NULL,NULL);		
     798:	40 e0       	ldi	r20, 0x00	; 0
     79a:	50 e0       	ldi	r21, 0x00	; 0
     79c:	60 e0       	ldi	r22, 0x00	; 0
     79e:	70 e0       	ldi	r23, 0x00	; 0
     7a0:	80 e0       	ldi	r24, 0x00	; 0
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	0e 94 2c 10 	call	0x2058	; 0x2058 <tinytimber>
     7a8:	6e 96       	adiw	r28, 0x1e	; 30
     7aa:	0f b6       	in	r0, 0x3f	; 63
     7ac:	f8 94       	cli
     7ae:	de bf       	out	0x3e, r29	; 62
     7b0:	0f be       	out	0x3f, r0	; 63
     7b2:	cd bf       	out	0x3d, r28	; 61
     7b4:	df 91       	pop	r29
     7b6:	cf 91       	pop	r28
     7b8:	08 95       	ret

000007ba <initialize>:
     7ba:	cf 93       	push	r28
     7bc:	df 93       	push	r29
     7be:	00 d0       	rcall	.+0      	; 0x7c0 <initialize+0x6>
     7c0:	00 d0       	rcall	.+0      	; 0x7c2 <initialize+0x8>
     7c2:	cd b7       	in	r28, 0x3d	; 61
     7c4:	de b7       	in	r29, 0x3e	; 62
     7c6:	80 e0       	ldi	r24, 0x00	; 0
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	18 c0       	rjmp	.+48     	; 0x7fc <initialize+0x42>
     7cc:	ac 01       	movw	r20, r24
     7ce:	4f 5f       	subi	r20, 0xFF	; 255
     7d0:	5f 4f       	sbci	r21, 0xFF	; 255
     7d2:	9a 01       	movw	r18, r20
     7d4:	22 95       	swap	r18
     7d6:	32 95       	swap	r19
     7d8:	30 7f       	andi	r19, 0xF0	; 240
     7da:	32 27       	eor	r19, r18
     7dc:	20 7f       	andi	r18, 0xF0	; 240
     7de:	32 27       	eor	r19, r18
     7e0:	2f 5d       	subi	r18, 0xDF	; 223
     7e2:	3d 4f       	sbci	r19, 0xFD	; 253
     7e4:	82 95       	swap	r24
     7e6:	92 95       	swap	r25
     7e8:	90 7f       	andi	r25, 0xF0	; 240
     7ea:	98 27       	eor	r25, r24
     7ec:	80 7f       	andi	r24, 0xF0	; 240
     7ee:	98 27       	eor	r25, r24
     7f0:	fc 01       	movw	r30, r24
     7f2:	ef 5d       	subi	r30, 0xDF	; 223
     7f4:	fd 4f       	sbci	r31, 0xFD	; 253
     7f6:	31 83       	std	Z+1, r19	; 0x01
     7f8:	20 83       	st	Z, r18
     7fa:	ca 01       	movw	r24, r20
     7fc:	8e 30       	cpi	r24, 0x0E	; 14
     7fe:	91 05       	cpc	r25, r1
     800:	2c f3       	brlt	.-54     	; 0x7cc <initialize+0x12>
     802:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <messages+0xe1>
     806:	10 92 01 03 	sts	0x0301, r1	; 0x800301 <messages+0xe0>
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	15 c0       	rjmp	.+42     	; 0x83a <initialize+0x80>
     810:	ac 01       	movw	r20, r24
     812:	4f 5f       	subi	r20, 0xFF	; 255
     814:	5f 4f       	sbci	r21, 0xFF	; 255
     816:	6d e1       	ldi	r22, 0x1D	; 29
     818:	64 9f       	mul	r22, r20
     81a:	90 01       	movw	r18, r0
     81c:	65 9f       	mul	r22, r21
     81e:	30 0d       	add	r19, r0
     820:	11 24       	eor	r1, r1
     822:	24 59       	subi	r18, 0x94	; 148
     824:	3e 4f       	sbci	r19, 0xFE	; 254
     826:	68 9f       	mul	r22, r24
     828:	f0 01       	movw	r30, r0
     82a:	69 9f       	mul	r22, r25
     82c:	f0 0d       	add	r31, r0
     82e:	11 24       	eor	r1, r1
     830:	e4 59       	subi	r30, 0x94	; 148
     832:	fe 4f       	sbci	r31, 0xFE	; 254
     834:	31 83       	std	Z+1, r19	; 0x01
     836:	20 83       	st	Z, r18
     838:	ca 01       	movw	r24, r20
     83a:	83 30       	cpi	r24, 0x03	; 3
     83c:	91 05       	cpc	r25, r1
     83e:	44 f3       	brlt	.-48     	; 0x810 <initialize+0x56>
     840:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <threads+0x58>
     844:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <threads+0x57>
     848:	1a 82       	std	Y+2, r1	; 0x02
     84a:	19 82       	std	Y+1, r1	; 0x01
     84c:	32 c0       	rjmp	.+100    	; 0x8b2 <initialize+0xf8>
     84e:	2d e1       	ldi	r18, 0x1D	; 29
     850:	49 81       	ldd	r20, Y+1	; 0x01
     852:	5a 81       	ldd	r21, Y+2	; 0x02
     854:	24 9f       	mul	r18, r20
     856:	c0 01       	movw	r24, r0
     858:	25 9f       	mul	r18, r21
     85a:	90 0d       	add	r25, r0
     85c:	11 24       	eor	r1, r1
     85e:	fc 01       	movw	r30, r24
     860:	ee 58       	subi	r30, 0x8E	; 142
     862:	fe 4f       	sbci	r31, 0xFE	; 254
     864:	fc 83       	std	Y+4, r31	; 0x04
     866:	eb 83       	std	Y+3, r30	; 0x03
     868:	cf 01       	movw	r24, r30
     86a:	0e 94 84 10 	call	0x2108	; 0x2108 <setjmp>
     86e:	20 e6       	ldi	r18, 0x60	; 96
     870:	49 81       	ldd	r20, Y+1	; 0x01
     872:	5a 81       	ldd	r21, Y+2	; 0x02
     874:	24 9f       	mul	r18, r20
     876:	c0 01       	movw	r24, r0
     878:	25 9f       	mul	r18, r21
     87a:	90 0d       	add	r25, r0
     87c:	11 24       	eor	r1, r1
     87e:	83 59       	subi	r24, 0x93	; 147
     880:	9c 4f       	sbci	r25, 0xFC	; 252
     882:	eb 81       	ldd	r30, Y+3	; 0x03
     884:	fc 81       	ldd	r31, Y+4	; 0x04
     886:	91 8b       	std	Z+17, r25	; 0x11
     888:	80 8b       	std	Z+16, r24	; 0x10
     88a:	93 8b       	std	Z+19, r25	; 0x13
     88c:	82 8b       	std	Z+18, r24	; 0x12
     88e:	89 eb       	ldi	r24, 0xB9	; 185
     890:	9f e0       	ldi	r25, 0x0F	; 15
     892:	96 8b       	std	Z+22, r25	; 0x16
     894:	85 8b       	std	Z+21, r24	; 0x15
     896:	8d e1       	ldi	r24, 0x1D	; 29
     898:	84 9f       	mul	r24, r20
     89a:	f0 01       	movw	r30, r0
     89c:	85 9f       	mul	r24, r21
     89e:	f0 0d       	add	r31, r0
     8a0:	11 24       	eor	r1, r1
     8a2:	e4 59       	subi	r30, 0x94	; 148
     8a4:	fe 4f       	sbci	r31, 0xFE	; 254
     8a6:	15 82       	std	Z+5, r1	; 0x05
     8a8:	14 82       	std	Z+4, r1	; 0x04
     8aa:	4f 5f       	subi	r20, 0xFF	; 255
     8ac:	5f 4f       	sbci	r21, 0xFF	; 255
     8ae:	5a 83       	std	Y+2, r21	; 0x02
     8b0:	49 83       	std	Y+1, r20	; 0x01
     8b2:	29 81       	ldd	r18, Y+1	; 0x01
     8b4:	3a 81       	ldd	r19, Y+2	; 0x02
     8b6:	24 30       	cpi	r18, 0x04	; 4
     8b8:	31 05       	cpc	r19, r1
     8ba:	4c f2       	brlt	.-110    	; 0x84e <initialize+0x94>
     8bc:	e4 e0       	ldi	r30, 0x04	; 4
     8be:	f2 e0       	ldi	r31, 0x02	; 2
     8c0:	11 82       	std	Z+1, r1	; 0x01
     8c2:	10 82       	st	Z, r1
     8c4:	15 82       	std	Z+5, r1	; 0x05
     8c6:	14 82       	std	Z+4, r1	; 0x04
     8c8:	13 82       	std	Z+3, r1	; 0x03
     8ca:	12 82       	std	Z+2, r1	; 0x02
     8cc:	e1 e6       	ldi	r30, 0x61	; 97
     8ce:	f0 e0       	ldi	r31, 0x00	; 0
     8d0:	80 e8       	ldi	r24, 0x80	; 128
     8d2:	80 83       	st	Z, r24
     8d4:	10 82       	st	Z, r1
     8d6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8da:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8de:	84 e0       	ldi	r24, 0x04	; 4
     8e0:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     8e4:	81 e0       	ldi	r24, 0x01	; 1
     8e6:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     8ea:	0f 90       	pop	r0
     8ec:	0f 90       	pop	r0
     8ee:	0f 90       	pop	r0
     8f0:	0f 90       	pop	r0
     8f2:	df 91       	pop	r29
     8f4:	cf 91       	pop	r28
     8f6:	08 95       	ret

000008f8 <dispatch>:
     8f8:	cf 93       	push	r28
     8fa:	df 93       	push	r29
     8fc:	00 d0       	rcall	.+0      	; 0x8fe <dispatch+0x6>
     8fe:	cd b7       	in	r28, 0x3d	; 61
     900:	de b7       	in	r29, 0x3e	; 62
     902:	9a 83       	std	Y+2, r25	; 0x02
     904:	89 83       	std	Y+1, r24	; 0x01
     906:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <current>
     90a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <current+0x1>
     90e:	06 96       	adiw	r24, 0x06	; 6
     910:	0e 94 84 10 	call	0x2108	; 0x2108 <setjmp>
     914:	89 2b       	or	r24, r25
     916:	59 f4       	brne	.+22     	; 0x92e <dispatch+0x36>
     918:	89 81       	ldd	r24, Y+1	; 0x01
     91a:	9a 81       	ldd	r25, Y+2	; 0x02
     91c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <current+0x1>
     920:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <current>
     924:	61 e0       	ldi	r22, 0x01	; 1
     926:	70 e0       	ldi	r23, 0x00	; 0
     928:	06 96       	adiw	r24, 0x06	; 6
     92a:	0e 94 a4 10 	call	0x2148	; 0x2148 <longjmp>
     92e:	0f 90       	pop	r0
     930:	0f 90       	pop	r0
     932:	df 91       	pop	r29
     934:	cf 91       	pop	r28
     936:	08 95       	ret

00000938 <enqueueByDeadline>:
     938:	0f 93       	push	r16
     93a:	1f 93       	push	r17
     93c:	cf 93       	push	r28
     93e:	df 93       	push	r29
     940:	dc 01       	movw	r26, r24
     942:	cb 01       	movw	r24, r22
     944:	eb 01       	movw	r28, r22
     946:	e8 81       	ld	r30, Y
     948:	f9 81       	ldd	r31, Y+1	; 0x01
     94a:	c0 e0       	ldi	r28, 0x00	; 0
     94c:	d0 e0       	ldi	r29, 0x00	; 0
     94e:	04 c0       	rjmp	.+8      	; 0x958 <enqueueByDeadline+0x20>
     950:	ef 01       	movw	r28, r30
     952:	01 90       	ld	r0, Z+
     954:	f0 81       	ld	r31, Z
     956:	e0 2d       	mov	r30, r0
     958:	30 97       	sbiw	r30, 0x00	; 0
     95a:	79 f0       	breq	.+30     	; 0x97a <enqueueByDeadline+0x42>
     95c:	06 81       	ldd	r16, Z+6	; 0x06
     95e:	17 81       	ldd	r17, Z+7	; 0x07
     960:	20 85       	ldd	r18, Z+8	; 0x08
     962:	31 85       	ldd	r19, Z+9	; 0x09
     964:	16 96       	adiw	r26, 0x06	; 6
     966:	4d 91       	ld	r20, X+
     968:	5d 91       	ld	r21, X+
     96a:	6d 91       	ld	r22, X+
     96c:	7c 91       	ld	r23, X
     96e:	19 97       	sbiw	r26, 0x09	; 9
     970:	40 17       	cp	r20, r16
     972:	51 07       	cpc	r21, r17
     974:	62 07       	cpc	r22, r18
     976:	73 07       	cpc	r23, r19
     978:	5c f7       	brge	.-42     	; 0x950 <enqueueByDeadline+0x18>
     97a:	11 96       	adiw	r26, 0x01	; 1
     97c:	fc 93       	st	X, r31
     97e:	ee 93       	st	-X, r30
     980:	20 97       	sbiw	r28, 0x00	; 0
     982:	21 f4       	brne	.+8      	; 0x98c <enqueueByDeadline+0x54>
     984:	fc 01       	movw	r30, r24
     986:	b1 83       	std	Z+1, r27	; 0x01
     988:	a0 83       	st	Z, r26
     98a:	02 c0       	rjmp	.+4      	; 0x990 <enqueueByDeadline+0x58>
     98c:	b9 83       	std	Y+1, r27	; 0x01
     98e:	a8 83       	st	Y, r26
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	1f 91       	pop	r17
     996:	0f 91       	pop	r16
     998:	08 95       	ret

0000099a <enqueueByBaseline>:
     99a:	0f 93       	push	r16
     99c:	1f 93       	push	r17
     99e:	cf 93       	push	r28
     9a0:	df 93       	push	r29
     9a2:	dc 01       	movw	r26, r24
     9a4:	cb 01       	movw	r24, r22
     9a6:	eb 01       	movw	r28, r22
     9a8:	e8 81       	ld	r30, Y
     9aa:	f9 81       	ldd	r31, Y+1	; 0x01
     9ac:	c0 e0       	ldi	r28, 0x00	; 0
     9ae:	d0 e0       	ldi	r29, 0x00	; 0
     9b0:	04 c0       	rjmp	.+8      	; 0x9ba <enqueueByBaseline+0x20>
     9b2:	ef 01       	movw	r28, r30
     9b4:	01 90       	ld	r0, Z+
     9b6:	f0 81       	ld	r31, Z
     9b8:	e0 2d       	mov	r30, r0
     9ba:	30 97       	sbiw	r30, 0x00	; 0
     9bc:	79 f0       	breq	.+30     	; 0x9dc <enqueueByBaseline+0x42>
     9be:	02 81       	ldd	r16, Z+2	; 0x02
     9c0:	13 81       	ldd	r17, Z+3	; 0x03
     9c2:	24 81       	ldd	r18, Z+4	; 0x04
     9c4:	35 81       	ldd	r19, Z+5	; 0x05
     9c6:	12 96       	adiw	r26, 0x02	; 2
     9c8:	4d 91       	ld	r20, X+
     9ca:	5d 91       	ld	r21, X+
     9cc:	6d 91       	ld	r22, X+
     9ce:	7c 91       	ld	r23, X
     9d0:	15 97       	sbiw	r26, 0x05	; 5
     9d2:	40 17       	cp	r20, r16
     9d4:	51 07       	cpc	r21, r17
     9d6:	62 07       	cpc	r22, r18
     9d8:	73 07       	cpc	r23, r19
     9da:	5c f7       	brge	.-42     	; 0x9b2 <enqueueByBaseline+0x18>
     9dc:	11 96       	adiw	r26, 0x01	; 1
     9de:	fc 93       	st	X, r31
     9e0:	ee 93       	st	-X, r30
     9e2:	20 97       	sbiw	r28, 0x00	; 0
     9e4:	21 f4       	brne	.+8      	; 0x9ee <enqueueByBaseline+0x54>
     9e6:	fc 01       	movw	r30, r24
     9e8:	b1 83       	std	Z+1, r27	; 0x01
     9ea:	a0 83       	st	Z, r26
     9ec:	02 c0       	rjmp	.+4      	; 0x9f2 <enqueueByBaseline+0x58>
     9ee:	b9 83       	std	Y+1, r27	; 0x01
     9f0:	a8 83       	st	Y, r26
     9f2:	df 91       	pop	r29
     9f4:	cf 91       	pop	r28
     9f6:	1f 91       	pop	r17
     9f8:	0f 91       	pop	r16
     9fa:	08 95       	ret

000009fc <dequeue>:
     9fc:	dc 01       	movw	r26, r24
     9fe:	ed 91       	ld	r30, X+
     a00:	fc 91       	ld	r31, X
     a02:	11 97       	sbiw	r26, 0x01	; 1
     a04:	30 97       	sbiw	r30, 0x00	; 0
     a06:	59 f4       	brne	.+22     	; 0xa1e <dequeue+0x22>
     a08:	8f ef       	ldi	r24, 0xFF	; 255
     a0a:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     a0e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     a12:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     a16:	81 e0       	ldi	r24, 0x01	; 1
     a18:	83 bf       	out	0x33, r24	; 51
     a1a:	88 95       	sleep
     a1c:	fc cf       	rjmp	.-8      	; 0xa16 <dequeue+0x1a>
     a1e:	20 81       	ld	r18, Z
     a20:	31 81       	ldd	r19, Z+1	; 0x01
     a22:	2d 93       	st	X+, r18
     a24:	3c 93       	st	X, r19
     a26:	cf 01       	movw	r24, r30
     a28:	08 95       	ret

00000a2a <insert>:
     a2a:	fb 01       	movw	r30, r22
     a2c:	20 81       	ld	r18, Z
     a2e:	31 81       	ldd	r19, Z+1	; 0x01
     a30:	fc 01       	movw	r30, r24
     a32:	31 83       	std	Z+1, r19	; 0x01
     a34:	20 83       	st	Z, r18
     a36:	fb 01       	movw	r30, r22
     a38:	91 83       	std	Z+1, r25	; 0x01
     a3a:	80 83       	st	Z, r24
     a3c:	08 95       	ret

00000a3e <push>:
     a3e:	fb 01       	movw	r30, r22
     a40:	20 81       	ld	r18, Z
     a42:	31 81       	ldd	r19, Z+1	; 0x01
     a44:	fc 01       	movw	r30, r24
     a46:	31 83       	std	Z+1, r19	; 0x01
     a48:	20 83       	st	Z, r18
     a4a:	fb 01       	movw	r30, r22
     a4c:	91 83       	std	Z+1, r25	; 0x01
     a4e:	80 83       	st	Z, r24
     a50:	08 95       	ret

00000a52 <pop>:
     a52:	dc 01       	movw	r26, r24
     a54:	ed 91       	ld	r30, X+
     a56:	fc 91       	ld	r31, X
     a58:	11 97       	sbiw	r26, 0x01	; 1
     a5a:	20 81       	ld	r18, Z
     a5c:	31 81       	ldd	r19, Z+1	; 0x01
     a5e:	2d 93       	st	X+, r18
     a60:	3c 93       	st	X, r19
     a62:	cf 01       	movw	r24, r30
     a64:	08 95       	ret

00000a66 <schedule>:
     a66:	cf 93       	push	r28
     a68:	df 93       	push	r29
     a6a:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
     a6e:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
     a72:	c2 81       	ldd	r28, Z+2	; 0x02
     a74:	d3 81       	ldd	r29, Z+3	; 0x03
     a76:	e0 91 42 01 	lds	r30, 0x0142	; 0x800142 <msgQ>
     a7a:	f0 91 43 01 	lds	r31, 0x0143	; 0x800143 <msgQ+0x1>
     a7e:	30 97       	sbiw	r30, 0x00	; 0
     a80:	19 f1       	breq	.+70     	; 0xac8 <schedule+0x62>
     a82:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
     a86:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
     a8a:	89 2b       	or	r24, r25
     a8c:	e9 f0       	breq	.+58     	; 0xac8 <schedule+0x62>
     a8e:	20 97       	sbiw	r28, 0x00	; 0
     a90:	69 f0       	breq	.+26     	; 0xaac <schedule+0x46>
     a92:	86 81       	ldd	r24, Z+6	; 0x06
     a94:	97 81       	ldd	r25, Z+7	; 0x07
     a96:	a0 85       	ldd	r26, Z+8	; 0x08
     a98:	b1 85       	ldd	r27, Z+9	; 0x09
     a9a:	4e 81       	ldd	r20, Y+6	; 0x06
     a9c:	5f 81       	ldd	r21, Y+7	; 0x07
     a9e:	68 85       	ldd	r22, Y+8	; 0x08
     aa0:	79 85       	ldd	r23, Y+9	; 0x09
     aa2:	84 1b       	sub	r24, r20
     aa4:	95 0b       	sbc	r25, r21
     aa6:	a6 0b       	sbc	r26, r22
     aa8:	b7 0b       	sbc	r27, r23
     aaa:	72 f4       	brpl	.+28     	; 0xac8 <schedule+0x62>
     aac:	86 e0       	ldi	r24, 0x06	; 6
     aae:	91 e0       	ldi	r25, 0x01	; 1
     ab0:	0e 94 29 05 	call	0xa52	; 0xa52 <pop>
     ab4:	64 e0       	ldi	r22, 0x04	; 4
     ab6:	71 e0       	ldi	r23, 0x01	; 1
     ab8:	0e 94 1f 05 	call	0xa3e	; 0xa3e <push>
     abc:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <activeStack>
     ac0:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <activeStack+0x1>
     ac4:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <dispatch>
     ac8:	df 91       	pop	r29
     aca:	cf 91       	pop	r28
     acc:	08 95       	ret

00000ace <__vector_1>:
     ace:	1f 92       	push	r1
     ad0:	0f 92       	push	r0
     ad2:	0f b6       	in	r0, 0x3f	; 63
     ad4:	0f 92       	push	r0
     ad6:	11 24       	eor	r1, r1
     ad8:	0f 93       	push	r16
     ada:	1f 93       	push	r17
     adc:	2f 93       	push	r18
     ade:	3f 93       	push	r19
     ae0:	4f 93       	push	r20
     ae2:	5f 93       	push	r21
     ae4:	6f 93       	push	r22
     ae6:	7f 93       	push	r23
     ae8:	8f 93       	push	r24
     aea:	9f 93       	push	r25
     aec:	af 93       	push	r26
     aee:	bf 93       	push	r27
     af0:	ef 93       	push	r30
     af2:	ff 93       	push	r31
     af4:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
     af8:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
     afc:	ac 01       	movw	r20, r24
     afe:	09 2e       	mov	r0, r25
     b00:	00 0c       	add	r0, r0
     b02:	66 0b       	sbc	r22, r22
     b04:	77 0b       	sbc	r23, r23
     b06:	9a 01       	movw	r18, r20
     b08:	11 27       	eor	r17, r17
     b0a:	00 27       	eor	r16, r16
     b0c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b10:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b14:	60 e0       	ldi	r22, 0x00	; 0
     b16:	70 e0       	ldi	r23, 0x00	; 0
     b18:	40 2b       	or	r20, r16
     b1a:	51 2b       	or	r21, r17
     b1c:	62 2b       	or	r22, r18
     b1e:	73 2b       	or	r23, r19
     b20:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
     b24:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
     b28:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
     b2c:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
     b30:	b0 9b       	sbis	0x16, 0	; 22
     b32:	1a c0       	rjmp	.+52     	; 0xb68 <__vector_1+0x9a>
     b34:	01 96       	adiw	r24, 0x01	; 1
     b36:	09 2e       	mov	r0, r25
     b38:	00 0c       	add	r0, r0
     b3a:	aa 0b       	sbc	r26, r26
     b3c:	bb 0b       	sbc	r27, r27
     b3e:	bc 01       	movw	r22, r24
     b40:	55 27       	eor	r21, r21
     b42:	44 27       	eor	r20, r20
     b44:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b48:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b4c:	a0 e0       	ldi	r26, 0x00	; 0
     b4e:	b0 e0       	ldi	r27, 0x00	; 0
     b50:	84 2b       	or	r24, r20
     b52:	95 2b       	or	r25, r21
     b54:	a6 2b       	or	r26, r22
     b56:	b7 2b       	or	r27, r23
     b58:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     b5c:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     b60:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     b64:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     b68:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable>
     b6c:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x1>
     b70:	30 97       	sbiw	r30, 0x00	; 0
     b72:	39 f0       	breq	.+14     	; 0xb82 <__vector_1+0xb4>
     b74:	60 e0       	ldi	r22, 0x00	; 0
     b76:	70 e0       	ldi	r23, 0x00	; 0
     b78:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable>
     b7c:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x1>
     b80:	09 95       	icall
     b82:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
     b86:	ff 91       	pop	r31
     b88:	ef 91       	pop	r30
     b8a:	bf 91       	pop	r27
     b8c:	af 91       	pop	r26
     b8e:	9f 91       	pop	r25
     b90:	8f 91       	pop	r24
     b92:	7f 91       	pop	r23
     b94:	6f 91       	pop	r22
     b96:	5f 91       	pop	r21
     b98:	4f 91       	pop	r20
     b9a:	3f 91       	pop	r19
     b9c:	2f 91       	pop	r18
     b9e:	1f 91       	pop	r17
     ba0:	0f 91       	pop	r16
     ba2:	0f 90       	pop	r0
     ba4:	0f be       	out	0x3f, r0	; 63
     ba6:	0f 90       	pop	r0
     ba8:	1f 90       	pop	r1
     baa:	18 95       	reti

00000bac <__vector_2>:
     bac:	1f 92       	push	r1
     bae:	0f 92       	push	r0
     bb0:	0f b6       	in	r0, 0x3f	; 63
     bb2:	0f 92       	push	r0
     bb4:	11 24       	eor	r1, r1
     bb6:	0f 93       	push	r16
     bb8:	1f 93       	push	r17
     bba:	2f 93       	push	r18
     bbc:	3f 93       	push	r19
     bbe:	4f 93       	push	r20
     bc0:	5f 93       	push	r21
     bc2:	6f 93       	push	r22
     bc4:	7f 93       	push	r23
     bc6:	8f 93       	push	r24
     bc8:	9f 93       	push	r25
     bca:	af 93       	push	r26
     bcc:	bf 93       	push	r27
     bce:	ef 93       	push	r30
     bd0:	ff 93       	push	r31
     bd2:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
     bd6:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
     bda:	ac 01       	movw	r20, r24
     bdc:	09 2e       	mov	r0, r25
     bde:	00 0c       	add	r0, r0
     be0:	66 0b       	sbc	r22, r22
     be2:	77 0b       	sbc	r23, r23
     be4:	9a 01       	movw	r18, r20
     be6:	11 27       	eor	r17, r17
     be8:	00 27       	eor	r16, r16
     bea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bf2:	60 e0       	ldi	r22, 0x00	; 0
     bf4:	70 e0       	ldi	r23, 0x00	; 0
     bf6:	40 2b       	or	r20, r16
     bf8:	51 2b       	or	r21, r17
     bfa:	62 2b       	or	r22, r18
     bfc:	73 2b       	or	r23, r19
     bfe:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
     c02:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
     c06:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
     c0a:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
     c0e:	b0 9b       	sbis	0x16, 0	; 22
     c10:	1a c0       	rjmp	.+52     	; 0xc46 <__vector_2+0x9a>
     c12:	01 96       	adiw	r24, 0x01	; 1
     c14:	09 2e       	mov	r0, r25
     c16:	00 0c       	add	r0, r0
     c18:	aa 0b       	sbc	r26, r26
     c1a:	bb 0b       	sbc	r27, r27
     c1c:	bc 01       	movw	r22, r24
     c1e:	55 27       	eor	r21, r21
     c20:	44 27       	eor	r20, r20
     c22:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c26:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c2a:	a0 e0       	ldi	r26, 0x00	; 0
     c2c:	b0 e0       	ldi	r27, 0x00	; 0
     c2e:	84 2b       	or	r24, r20
     c30:	95 2b       	or	r25, r21
     c32:	a6 2b       	or	r26, r22
     c34:	b7 2b       	or	r27, r23
     c36:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     c3a:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     c3e:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     c42:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     c46:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x2>
     c4a:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x3>
     c4e:	30 97       	sbiw	r30, 0x00	; 0
     c50:	39 f0       	breq	.+14     	; 0xc60 <__vector_2+0xb4>
     c52:	61 e0       	ldi	r22, 0x01	; 1
     c54:	70 e0       	ldi	r23, 0x00	; 0
     c56:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x2>
     c5a:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x3>
     c5e:	09 95       	icall
     c60:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
     c64:	ff 91       	pop	r31
     c66:	ef 91       	pop	r30
     c68:	bf 91       	pop	r27
     c6a:	af 91       	pop	r26
     c6c:	9f 91       	pop	r25
     c6e:	8f 91       	pop	r24
     c70:	7f 91       	pop	r23
     c72:	6f 91       	pop	r22
     c74:	5f 91       	pop	r21
     c76:	4f 91       	pop	r20
     c78:	3f 91       	pop	r19
     c7a:	2f 91       	pop	r18
     c7c:	1f 91       	pop	r17
     c7e:	0f 91       	pop	r16
     c80:	0f 90       	pop	r0
     c82:	0f be       	out	0x3f, r0	; 63
     c84:	0f 90       	pop	r0
     c86:	1f 90       	pop	r1
     c88:	18 95       	reti

00000c8a <__vector_3>:
     c8a:	1f 92       	push	r1
     c8c:	0f 92       	push	r0
     c8e:	0f b6       	in	r0, 0x3f	; 63
     c90:	0f 92       	push	r0
     c92:	11 24       	eor	r1, r1
     c94:	0f 93       	push	r16
     c96:	1f 93       	push	r17
     c98:	2f 93       	push	r18
     c9a:	3f 93       	push	r19
     c9c:	4f 93       	push	r20
     c9e:	5f 93       	push	r21
     ca0:	6f 93       	push	r22
     ca2:	7f 93       	push	r23
     ca4:	8f 93       	push	r24
     ca6:	9f 93       	push	r25
     ca8:	af 93       	push	r26
     caa:	bf 93       	push	r27
     cac:	ef 93       	push	r30
     cae:	ff 93       	push	r31
     cb0:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
     cb4:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
     cb8:	ac 01       	movw	r20, r24
     cba:	09 2e       	mov	r0, r25
     cbc:	00 0c       	add	r0, r0
     cbe:	66 0b       	sbc	r22, r22
     cc0:	77 0b       	sbc	r23, r23
     cc2:	9a 01       	movw	r18, r20
     cc4:	11 27       	eor	r17, r17
     cc6:	00 27       	eor	r16, r16
     cc8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ccc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cd0:	60 e0       	ldi	r22, 0x00	; 0
     cd2:	70 e0       	ldi	r23, 0x00	; 0
     cd4:	40 2b       	or	r20, r16
     cd6:	51 2b       	or	r21, r17
     cd8:	62 2b       	or	r22, r18
     cda:	73 2b       	or	r23, r19
     cdc:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
     ce0:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
     ce4:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
     ce8:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
     cec:	b0 9b       	sbis	0x16, 0	; 22
     cee:	1a c0       	rjmp	.+52     	; 0xd24 <__vector_3+0x9a>
     cf0:	01 96       	adiw	r24, 0x01	; 1
     cf2:	09 2e       	mov	r0, r25
     cf4:	00 0c       	add	r0, r0
     cf6:	aa 0b       	sbc	r26, r26
     cf8:	bb 0b       	sbc	r27, r27
     cfa:	bc 01       	movw	r22, r24
     cfc:	55 27       	eor	r21, r21
     cfe:	44 27       	eor	r20, r20
     d00:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d04:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d08:	a0 e0       	ldi	r26, 0x00	; 0
     d0a:	b0 e0       	ldi	r27, 0x00	; 0
     d0c:	84 2b       	or	r24, r20
     d0e:	95 2b       	or	r25, r21
     d10:	a6 2b       	or	r26, r22
     d12:	b7 2b       	or	r27, r23
     d14:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     d18:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     d1c:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     d20:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     d24:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0x4>
     d28:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0x5>
     d2c:	30 97       	sbiw	r30, 0x00	; 0
     d2e:	39 f0       	breq	.+14     	; 0xd3e <__vector_3+0xb4>
     d30:	62 e0       	ldi	r22, 0x02	; 2
     d32:	70 e0       	ldi	r23, 0x00	; 0
     d34:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0x4>
     d38:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0x5>
     d3c:	09 95       	icall
     d3e:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
     d42:	ff 91       	pop	r31
     d44:	ef 91       	pop	r30
     d46:	bf 91       	pop	r27
     d48:	af 91       	pop	r26
     d4a:	9f 91       	pop	r25
     d4c:	8f 91       	pop	r24
     d4e:	7f 91       	pop	r23
     d50:	6f 91       	pop	r22
     d52:	5f 91       	pop	r21
     d54:	4f 91       	pop	r20
     d56:	3f 91       	pop	r19
     d58:	2f 91       	pop	r18
     d5a:	1f 91       	pop	r17
     d5c:	0f 91       	pop	r16
     d5e:	0f 90       	pop	r0
     d60:	0f be       	out	0x3f, r0	; 63
     d62:	0f 90       	pop	r0
     d64:	1f 90       	pop	r1
     d66:	18 95       	reti

00000d68 <__vector_4>:
     d68:	1f 92       	push	r1
     d6a:	0f 92       	push	r0
     d6c:	0f b6       	in	r0, 0x3f	; 63
     d6e:	0f 92       	push	r0
     d70:	11 24       	eor	r1, r1
     d72:	0f 93       	push	r16
     d74:	1f 93       	push	r17
     d76:	2f 93       	push	r18
     d78:	3f 93       	push	r19
     d7a:	4f 93       	push	r20
     d7c:	5f 93       	push	r21
     d7e:	6f 93       	push	r22
     d80:	7f 93       	push	r23
     d82:	8f 93       	push	r24
     d84:	9f 93       	push	r25
     d86:	af 93       	push	r26
     d88:	bf 93       	push	r27
     d8a:	ef 93       	push	r30
     d8c:	ff 93       	push	r31
     d8e:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
     d92:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
     d96:	ac 01       	movw	r20, r24
     d98:	09 2e       	mov	r0, r25
     d9a:	00 0c       	add	r0, r0
     d9c:	66 0b       	sbc	r22, r22
     d9e:	77 0b       	sbc	r23, r23
     da0:	9a 01       	movw	r18, r20
     da2:	11 27       	eor	r17, r17
     da4:	00 27       	eor	r16, r16
     da6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     daa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dae:	60 e0       	ldi	r22, 0x00	; 0
     db0:	70 e0       	ldi	r23, 0x00	; 0
     db2:	40 2b       	or	r20, r16
     db4:	51 2b       	or	r21, r17
     db6:	62 2b       	or	r22, r18
     db8:	73 2b       	or	r23, r19
     dba:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
     dbe:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
     dc2:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
     dc6:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
     dca:	b0 9b       	sbis	0x16, 0	; 22
     dcc:	1a c0       	rjmp	.+52     	; 0xe02 <__vector_4+0x9a>
     dce:	01 96       	adiw	r24, 0x01	; 1
     dd0:	09 2e       	mov	r0, r25
     dd2:	00 0c       	add	r0, r0
     dd4:	aa 0b       	sbc	r26, r26
     dd6:	bb 0b       	sbc	r27, r27
     dd8:	bc 01       	movw	r22, r24
     dda:	55 27       	eor	r21, r21
     ddc:	44 27       	eor	r20, r20
     dde:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     de2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     de6:	a0 e0       	ldi	r26, 0x00	; 0
     de8:	b0 e0       	ldi	r27, 0x00	; 0
     dea:	84 2b       	or	r24, r20
     dec:	95 2b       	or	r25, r21
     dee:	a6 2b       	or	r26, r22
     df0:	b7 2b       	or	r27, r23
     df2:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     df6:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     dfa:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     dfe:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     e02:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0x6>
     e06:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0x7>
     e0a:	30 97       	sbiw	r30, 0x00	; 0
     e0c:	39 f0       	breq	.+14     	; 0xe1c <__vector_4+0xb4>
     e0e:	63 e0       	ldi	r22, 0x03	; 3
     e10:	70 e0       	ldi	r23, 0x00	; 0
     e12:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0x6>
     e16:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0x7>
     e1a:	09 95       	icall
     e1c:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
     e20:	ff 91       	pop	r31
     e22:	ef 91       	pop	r30
     e24:	bf 91       	pop	r27
     e26:	af 91       	pop	r26
     e28:	9f 91       	pop	r25
     e2a:	8f 91       	pop	r24
     e2c:	7f 91       	pop	r23
     e2e:	6f 91       	pop	r22
     e30:	5f 91       	pop	r21
     e32:	4f 91       	pop	r20
     e34:	3f 91       	pop	r19
     e36:	2f 91       	pop	r18
     e38:	1f 91       	pop	r17
     e3a:	0f 91       	pop	r16
     e3c:	0f 90       	pop	r0
     e3e:	0f be       	out	0x3f, r0	; 63
     e40:	0f 90       	pop	r0
     e42:	1f 90       	pop	r1
     e44:	18 95       	reti

00000e46 <__vector_5>:
     e46:	1f 92       	push	r1
     e48:	0f 92       	push	r0
     e4a:	0f b6       	in	r0, 0x3f	; 63
     e4c:	0f 92       	push	r0
     e4e:	11 24       	eor	r1, r1
     e50:	0f 93       	push	r16
     e52:	1f 93       	push	r17
     e54:	2f 93       	push	r18
     e56:	3f 93       	push	r19
     e58:	4f 93       	push	r20
     e5a:	5f 93       	push	r21
     e5c:	6f 93       	push	r22
     e5e:	7f 93       	push	r23
     e60:	8f 93       	push	r24
     e62:	9f 93       	push	r25
     e64:	af 93       	push	r26
     e66:	bf 93       	push	r27
     e68:	ef 93       	push	r30
     e6a:	ff 93       	push	r31
     e6c:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
     e70:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
     e74:	ac 01       	movw	r20, r24
     e76:	09 2e       	mov	r0, r25
     e78:	00 0c       	add	r0, r0
     e7a:	66 0b       	sbc	r22, r22
     e7c:	77 0b       	sbc	r23, r23
     e7e:	9a 01       	movw	r18, r20
     e80:	11 27       	eor	r17, r17
     e82:	00 27       	eor	r16, r16
     e84:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e88:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e8c:	60 e0       	ldi	r22, 0x00	; 0
     e8e:	70 e0       	ldi	r23, 0x00	; 0
     e90:	40 2b       	or	r20, r16
     e92:	51 2b       	or	r21, r17
     e94:	62 2b       	or	r22, r18
     e96:	73 2b       	or	r23, r19
     e98:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
     e9c:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
     ea0:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
     ea4:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
     ea8:	b0 9b       	sbis	0x16, 0	; 22
     eaa:	1a c0       	rjmp	.+52     	; 0xee0 <__vector_5+0x9a>
     eac:	01 96       	adiw	r24, 0x01	; 1
     eae:	09 2e       	mov	r0, r25
     eb0:	00 0c       	add	r0, r0
     eb2:	aa 0b       	sbc	r26, r26
     eb4:	bb 0b       	sbc	r27, r27
     eb6:	bc 01       	movw	r22, r24
     eb8:	55 27       	eor	r21, r21
     eba:	44 27       	eor	r20, r20
     ebc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ec0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ec4:	a0 e0       	ldi	r26, 0x00	; 0
     ec6:	b0 e0       	ldi	r27, 0x00	; 0
     ec8:	84 2b       	or	r24, r20
     eca:	95 2b       	or	r25, r21
     ecc:	a6 2b       	or	r26, r22
     ece:	b7 2b       	or	r27, r23
     ed0:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     ed4:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     ed8:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     edc:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     ee0:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0x8>
     ee4:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0x9>
     ee8:	30 97       	sbiw	r30, 0x00	; 0
     eea:	39 f0       	breq	.+14     	; 0xefa <__vector_5+0xb4>
     eec:	64 e0       	ldi	r22, 0x04	; 4
     eee:	70 e0       	ldi	r23, 0x00	; 0
     ef0:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0x8>
     ef4:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0x9>
     ef8:	09 95       	icall
     efa:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
     efe:	ff 91       	pop	r31
     f00:	ef 91       	pop	r30
     f02:	bf 91       	pop	r27
     f04:	af 91       	pop	r26
     f06:	9f 91       	pop	r25
     f08:	8f 91       	pop	r24
     f0a:	7f 91       	pop	r23
     f0c:	6f 91       	pop	r22
     f0e:	5f 91       	pop	r21
     f10:	4f 91       	pop	r20
     f12:	3f 91       	pop	r19
     f14:	2f 91       	pop	r18
     f16:	1f 91       	pop	r17
     f18:	0f 91       	pop	r16
     f1a:	0f 90       	pop	r0
     f1c:	0f be       	out	0x3f, r0	; 63
     f1e:	0f 90       	pop	r0
     f20:	1f 90       	pop	r1
     f22:	18 95       	reti

00000f24 <__vector_10>:
     f24:	1f 92       	push	r1
     f26:	0f 92       	push	r0
     f28:	0f b6       	in	r0, 0x3f	; 63
     f2a:	0f 92       	push	r0
     f2c:	11 24       	eor	r1, r1
     f2e:	0f 93       	push	r16
     f30:	1f 93       	push	r17
     f32:	2f 93       	push	r18
     f34:	3f 93       	push	r19
     f36:	4f 93       	push	r20
     f38:	5f 93       	push	r21
     f3a:	6f 93       	push	r22
     f3c:	7f 93       	push	r23
     f3e:	8f 93       	push	r24
     f40:	9f 93       	push	r25
     f42:	af 93       	push	r26
     f44:	bf 93       	push	r27
     f46:	ef 93       	push	r30
     f48:	ff 93       	push	r31
     f4a:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
     f4e:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
     f52:	ac 01       	movw	r20, r24
     f54:	09 2e       	mov	r0, r25
     f56:	00 0c       	add	r0, r0
     f58:	66 0b       	sbc	r22, r22
     f5a:	77 0b       	sbc	r23, r23
     f5c:	9a 01       	movw	r18, r20
     f5e:	11 27       	eor	r17, r17
     f60:	00 27       	eor	r16, r16
     f62:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f66:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f6a:	60 e0       	ldi	r22, 0x00	; 0
     f6c:	70 e0       	ldi	r23, 0x00	; 0
     f6e:	40 2b       	or	r20, r16
     f70:	51 2b       	or	r21, r17
     f72:	62 2b       	or	r22, r18
     f74:	73 2b       	or	r23, r19
     f76:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
     f7a:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
     f7e:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
     f82:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
     f86:	b0 9b       	sbis	0x16, 0	; 22
     f88:	1a c0       	rjmp	.+52     	; 0xfbe <__vector_10+0x9a>
     f8a:	01 96       	adiw	r24, 0x01	; 1
     f8c:	09 2e       	mov	r0, r25
     f8e:	00 0c       	add	r0, r0
     f90:	aa 0b       	sbc	r26, r26
     f92:	bb 0b       	sbc	r27, r27
     f94:	bc 01       	movw	r22, r24
     f96:	55 27       	eor	r21, r21
     f98:	44 27       	eor	r20, r20
     f9a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f9e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fa2:	a0 e0       	ldi	r26, 0x00	; 0
     fa4:	b0 e0       	ldi	r27, 0x00	; 0
     fa6:	84 2b       	or	r24, r20
     fa8:	95 2b       	or	r25, r21
     faa:	a6 2b       	or	r26, r22
     fac:	b7 2b       	or	r27, r23
     fae:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     fb2:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     fb6:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     fba:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     fbe:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0xa>
     fc2:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0xb>
     fc6:	30 97       	sbiw	r30, 0x00	; 0
     fc8:	39 f0       	breq	.+14     	; 0xfd8 <__vector_10+0xb4>
     fca:	65 e0       	ldi	r22, 0x05	; 5
     fcc:	70 e0       	ldi	r23, 0x00	; 0
     fce:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0xa>
     fd2:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0xb>
     fd6:	09 95       	icall
     fd8:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
     fdc:	ff 91       	pop	r31
     fde:	ef 91       	pop	r30
     fe0:	bf 91       	pop	r27
     fe2:	af 91       	pop	r26
     fe4:	9f 91       	pop	r25
     fe6:	8f 91       	pop	r24
     fe8:	7f 91       	pop	r23
     fea:	6f 91       	pop	r22
     fec:	5f 91       	pop	r21
     fee:	4f 91       	pop	r20
     ff0:	3f 91       	pop	r19
     ff2:	2f 91       	pop	r18
     ff4:	1f 91       	pop	r17
     ff6:	0f 91       	pop	r16
     ff8:	0f 90       	pop	r0
     ffa:	0f be       	out	0x3f, r0	; 63
     ffc:	0f 90       	pop	r0
     ffe:	1f 90       	pop	r1
    1000:	18 95       	reti

00001002 <__vector_11>:
    1002:	1f 92       	push	r1
    1004:	0f 92       	push	r0
    1006:	0f b6       	in	r0, 0x3f	; 63
    1008:	0f 92       	push	r0
    100a:	11 24       	eor	r1, r1
    100c:	0f 93       	push	r16
    100e:	1f 93       	push	r17
    1010:	2f 93       	push	r18
    1012:	3f 93       	push	r19
    1014:	4f 93       	push	r20
    1016:	5f 93       	push	r21
    1018:	6f 93       	push	r22
    101a:	7f 93       	push	r23
    101c:	8f 93       	push	r24
    101e:	9f 93       	push	r25
    1020:	af 93       	push	r26
    1022:	bf 93       	push	r27
    1024:	ef 93       	push	r30
    1026:	ff 93       	push	r31
    1028:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    102c:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1030:	ac 01       	movw	r20, r24
    1032:	09 2e       	mov	r0, r25
    1034:	00 0c       	add	r0, r0
    1036:	66 0b       	sbc	r22, r22
    1038:	77 0b       	sbc	r23, r23
    103a:	9a 01       	movw	r18, r20
    103c:	11 27       	eor	r17, r17
    103e:	00 27       	eor	r16, r16
    1040:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1044:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1048:	60 e0       	ldi	r22, 0x00	; 0
    104a:	70 e0       	ldi	r23, 0x00	; 0
    104c:	40 2b       	or	r20, r16
    104e:	51 2b       	or	r21, r17
    1050:	62 2b       	or	r22, r18
    1052:	73 2b       	or	r23, r19
    1054:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    1058:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    105c:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    1060:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    1064:	b0 9b       	sbis	0x16, 0	; 22
    1066:	1a c0       	rjmp	.+52     	; 0x109c <__vector_11+0x9a>
    1068:	01 96       	adiw	r24, 0x01	; 1
    106a:	09 2e       	mov	r0, r25
    106c:	00 0c       	add	r0, r0
    106e:	aa 0b       	sbc	r26, r26
    1070:	bb 0b       	sbc	r27, r27
    1072:	bc 01       	movw	r22, r24
    1074:	55 27       	eor	r21, r21
    1076:	44 27       	eor	r20, r20
    1078:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    107c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1080:	a0 e0       	ldi	r26, 0x00	; 0
    1082:	b0 e0       	ldi	r27, 0x00	; 0
    1084:	84 2b       	or	r24, r20
    1086:	95 2b       	or	r25, r21
    1088:	a6 2b       	or	r26, r22
    108a:	b7 2b       	or	r27, r23
    108c:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1090:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1094:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1098:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    109c:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0xc>
    10a0:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0xd>
    10a4:	30 97       	sbiw	r30, 0x00	; 0
    10a6:	39 f0       	breq	.+14     	; 0x10b6 <__vector_11+0xb4>
    10a8:	66 e0       	ldi	r22, 0x06	; 6
    10aa:	70 e0       	ldi	r23, 0x00	; 0
    10ac:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0xc>
    10b0:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0xd>
    10b4:	09 95       	icall
    10b6:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
    10ba:	ff 91       	pop	r31
    10bc:	ef 91       	pop	r30
    10be:	bf 91       	pop	r27
    10c0:	af 91       	pop	r26
    10c2:	9f 91       	pop	r25
    10c4:	8f 91       	pop	r24
    10c6:	7f 91       	pop	r23
    10c8:	6f 91       	pop	r22
    10ca:	5f 91       	pop	r21
    10cc:	4f 91       	pop	r20
    10ce:	3f 91       	pop	r19
    10d0:	2f 91       	pop	r18
    10d2:	1f 91       	pop	r17
    10d4:	0f 91       	pop	r16
    10d6:	0f 90       	pop	r0
    10d8:	0f be       	out	0x3f, r0	; 63
    10da:	0f 90       	pop	r0
    10dc:	1f 90       	pop	r1
    10de:	18 95       	reti

000010e0 <__vector_12>:
    10e0:	1f 92       	push	r1
    10e2:	0f 92       	push	r0
    10e4:	0f b6       	in	r0, 0x3f	; 63
    10e6:	0f 92       	push	r0
    10e8:	11 24       	eor	r1, r1
    10ea:	0f 93       	push	r16
    10ec:	1f 93       	push	r17
    10ee:	2f 93       	push	r18
    10f0:	3f 93       	push	r19
    10f2:	4f 93       	push	r20
    10f4:	5f 93       	push	r21
    10f6:	6f 93       	push	r22
    10f8:	7f 93       	push	r23
    10fa:	8f 93       	push	r24
    10fc:	9f 93       	push	r25
    10fe:	af 93       	push	r26
    1100:	bf 93       	push	r27
    1102:	ef 93       	push	r30
    1104:	ff 93       	push	r31
    1106:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    110a:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    110e:	ac 01       	movw	r20, r24
    1110:	09 2e       	mov	r0, r25
    1112:	00 0c       	add	r0, r0
    1114:	66 0b       	sbc	r22, r22
    1116:	77 0b       	sbc	r23, r23
    1118:	9a 01       	movw	r18, r20
    111a:	11 27       	eor	r17, r17
    111c:	00 27       	eor	r16, r16
    111e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1122:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1126:	60 e0       	ldi	r22, 0x00	; 0
    1128:	70 e0       	ldi	r23, 0x00	; 0
    112a:	40 2b       	or	r20, r16
    112c:	51 2b       	or	r21, r17
    112e:	62 2b       	or	r22, r18
    1130:	73 2b       	or	r23, r19
    1132:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    1136:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    113a:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    113e:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    1142:	b0 9b       	sbis	0x16, 0	; 22
    1144:	1a c0       	rjmp	.+52     	; 0x117a <__vector_12+0x9a>
    1146:	01 96       	adiw	r24, 0x01	; 1
    1148:	09 2e       	mov	r0, r25
    114a:	00 0c       	add	r0, r0
    114c:	aa 0b       	sbc	r26, r26
    114e:	bb 0b       	sbc	r27, r27
    1150:	bc 01       	movw	r22, r24
    1152:	55 27       	eor	r21, r21
    1154:	44 27       	eor	r20, r20
    1156:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    115a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    115e:	a0 e0       	ldi	r26, 0x00	; 0
    1160:	b0 e0       	ldi	r27, 0x00	; 0
    1162:	84 2b       	or	r24, r20
    1164:	95 2b       	or	r25, r21
    1166:	a6 2b       	or	r26, r22
    1168:	b7 2b       	or	r27, r23
    116a:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    116e:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1172:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1176:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    117a:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0xe>
    117e:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0xf>
    1182:	30 97       	sbiw	r30, 0x00	; 0
    1184:	39 f0       	breq	.+14     	; 0x1194 <__vector_12+0xb4>
    1186:	67 e0       	ldi	r22, 0x07	; 7
    1188:	70 e0       	ldi	r23, 0x00	; 0
    118a:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0xe>
    118e:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0xf>
    1192:	09 95       	icall
    1194:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
    1198:	ff 91       	pop	r31
    119a:	ef 91       	pop	r30
    119c:	bf 91       	pop	r27
    119e:	af 91       	pop	r26
    11a0:	9f 91       	pop	r25
    11a2:	8f 91       	pop	r24
    11a4:	7f 91       	pop	r23
    11a6:	6f 91       	pop	r22
    11a8:	5f 91       	pop	r21
    11aa:	4f 91       	pop	r20
    11ac:	3f 91       	pop	r19
    11ae:	2f 91       	pop	r18
    11b0:	1f 91       	pop	r17
    11b2:	0f 91       	pop	r16
    11b4:	0f 90       	pop	r0
    11b6:	0f be       	out	0x3f, r0	; 63
    11b8:	0f 90       	pop	r0
    11ba:	1f 90       	pop	r1
    11bc:	18 95       	reti

000011be <__vector_13>:
    11be:	1f 92       	push	r1
    11c0:	0f 92       	push	r0
    11c2:	0f b6       	in	r0, 0x3f	; 63
    11c4:	0f 92       	push	r0
    11c6:	11 24       	eor	r1, r1
    11c8:	0f 93       	push	r16
    11ca:	1f 93       	push	r17
    11cc:	2f 93       	push	r18
    11ce:	3f 93       	push	r19
    11d0:	4f 93       	push	r20
    11d2:	5f 93       	push	r21
    11d4:	6f 93       	push	r22
    11d6:	7f 93       	push	r23
    11d8:	8f 93       	push	r24
    11da:	9f 93       	push	r25
    11dc:	af 93       	push	r26
    11de:	bf 93       	push	r27
    11e0:	ef 93       	push	r30
    11e2:	ff 93       	push	r31
    11e4:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    11e8:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    11ec:	ac 01       	movw	r20, r24
    11ee:	09 2e       	mov	r0, r25
    11f0:	00 0c       	add	r0, r0
    11f2:	66 0b       	sbc	r22, r22
    11f4:	77 0b       	sbc	r23, r23
    11f6:	9a 01       	movw	r18, r20
    11f8:	11 27       	eor	r17, r17
    11fa:	00 27       	eor	r16, r16
    11fc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1200:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1204:	60 e0       	ldi	r22, 0x00	; 0
    1206:	70 e0       	ldi	r23, 0x00	; 0
    1208:	40 2b       	or	r20, r16
    120a:	51 2b       	or	r21, r17
    120c:	62 2b       	or	r22, r18
    120e:	73 2b       	or	r23, r19
    1210:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    1214:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    1218:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    121c:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    1220:	b0 9b       	sbis	0x16, 0	; 22
    1222:	1a c0       	rjmp	.+52     	; 0x1258 <__vector_13+0x9a>
    1224:	01 96       	adiw	r24, 0x01	; 1
    1226:	09 2e       	mov	r0, r25
    1228:	00 0c       	add	r0, r0
    122a:	aa 0b       	sbc	r26, r26
    122c:	bb 0b       	sbc	r27, r27
    122e:	bc 01       	movw	r22, r24
    1230:	55 27       	eor	r21, r21
    1232:	44 27       	eor	r20, r20
    1234:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1238:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    123c:	a0 e0       	ldi	r26, 0x00	; 0
    123e:	b0 e0       	ldi	r27, 0x00	; 0
    1240:	84 2b       	or	r24, r20
    1242:	95 2b       	or	r25, r21
    1244:	a6 2b       	or	r26, r22
    1246:	b7 2b       	or	r27, r23
    1248:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    124c:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1250:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1254:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1258:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x10>
    125c:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x11>
    1260:	30 97       	sbiw	r30, 0x00	; 0
    1262:	39 f0       	breq	.+14     	; 0x1272 <__vector_13+0xb4>
    1264:	68 e0       	ldi	r22, 0x08	; 8
    1266:	70 e0       	ldi	r23, 0x00	; 0
    1268:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x10>
    126c:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x11>
    1270:	09 95       	icall
    1272:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
    1276:	ff 91       	pop	r31
    1278:	ef 91       	pop	r30
    127a:	bf 91       	pop	r27
    127c:	af 91       	pop	r26
    127e:	9f 91       	pop	r25
    1280:	8f 91       	pop	r24
    1282:	7f 91       	pop	r23
    1284:	6f 91       	pop	r22
    1286:	5f 91       	pop	r21
    1288:	4f 91       	pop	r20
    128a:	3f 91       	pop	r19
    128c:	2f 91       	pop	r18
    128e:	1f 91       	pop	r17
    1290:	0f 91       	pop	r16
    1292:	0f 90       	pop	r0
    1294:	0f be       	out	0x3f, r0	; 63
    1296:	0f 90       	pop	r0
    1298:	1f 90       	pop	r1
    129a:	18 95       	reti

0000129c <__vector_14>:
    129c:	1f 92       	push	r1
    129e:	0f 92       	push	r0
    12a0:	0f b6       	in	r0, 0x3f	; 63
    12a2:	0f 92       	push	r0
    12a4:	11 24       	eor	r1, r1
    12a6:	0f 93       	push	r16
    12a8:	1f 93       	push	r17
    12aa:	2f 93       	push	r18
    12ac:	3f 93       	push	r19
    12ae:	4f 93       	push	r20
    12b0:	5f 93       	push	r21
    12b2:	6f 93       	push	r22
    12b4:	7f 93       	push	r23
    12b6:	8f 93       	push	r24
    12b8:	9f 93       	push	r25
    12ba:	af 93       	push	r26
    12bc:	bf 93       	push	r27
    12be:	ef 93       	push	r30
    12c0:	ff 93       	push	r31
    12c2:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    12c6:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    12ca:	ac 01       	movw	r20, r24
    12cc:	09 2e       	mov	r0, r25
    12ce:	00 0c       	add	r0, r0
    12d0:	66 0b       	sbc	r22, r22
    12d2:	77 0b       	sbc	r23, r23
    12d4:	9a 01       	movw	r18, r20
    12d6:	11 27       	eor	r17, r17
    12d8:	00 27       	eor	r16, r16
    12da:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12de:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12e2:	60 e0       	ldi	r22, 0x00	; 0
    12e4:	70 e0       	ldi	r23, 0x00	; 0
    12e6:	40 2b       	or	r20, r16
    12e8:	51 2b       	or	r21, r17
    12ea:	62 2b       	or	r22, r18
    12ec:	73 2b       	or	r23, r19
    12ee:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    12f2:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    12f6:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    12fa:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    12fe:	b0 9b       	sbis	0x16, 0	; 22
    1300:	1a c0       	rjmp	.+52     	; 0x1336 <__vector_14+0x9a>
    1302:	01 96       	adiw	r24, 0x01	; 1
    1304:	09 2e       	mov	r0, r25
    1306:	00 0c       	add	r0, r0
    1308:	aa 0b       	sbc	r26, r26
    130a:	bb 0b       	sbc	r27, r27
    130c:	bc 01       	movw	r22, r24
    130e:	55 27       	eor	r21, r21
    1310:	44 27       	eor	r20, r20
    1312:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1316:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    131a:	a0 e0       	ldi	r26, 0x00	; 0
    131c:	b0 e0       	ldi	r27, 0x00	; 0
    131e:	84 2b       	or	r24, r20
    1320:	95 2b       	or	r25, r21
    1322:	a6 2b       	or	r26, r22
    1324:	b7 2b       	or	r27, r23
    1326:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    132a:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    132e:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1332:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1336:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x12>
    133a:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x13>
    133e:	30 97       	sbiw	r30, 0x00	; 0
    1340:	39 f0       	breq	.+14     	; 0x1350 <__vector_14+0xb4>
    1342:	69 e0       	ldi	r22, 0x09	; 9
    1344:	70 e0       	ldi	r23, 0x00	; 0
    1346:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x12>
    134a:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x13>
    134e:	09 95       	icall
    1350:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
    1354:	ff 91       	pop	r31
    1356:	ef 91       	pop	r30
    1358:	bf 91       	pop	r27
    135a:	af 91       	pop	r26
    135c:	9f 91       	pop	r25
    135e:	8f 91       	pop	r24
    1360:	7f 91       	pop	r23
    1362:	6f 91       	pop	r22
    1364:	5f 91       	pop	r21
    1366:	4f 91       	pop	r20
    1368:	3f 91       	pop	r19
    136a:	2f 91       	pop	r18
    136c:	1f 91       	pop	r17
    136e:	0f 91       	pop	r16
    1370:	0f 90       	pop	r0
    1372:	0f be       	out	0x3f, r0	; 63
    1374:	0f 90       	pop	r0
    1376:	1f 90       	pop	r1
    1378:	18 95       	reti

0000137a <__vector_15>:
    137a:	1f 92       	push	r1
    137c:	0f 92       	push	r0
    137e:	0f b6       	in	r0, 0x3f	; 63
    1380:	0f 92       	push	r0
    1382:	11 24       	eor	r1, r1
    1384:	0f 93       	push	r16
    1386:	1f 93       	push	r17
    1388:	2f 93       	push	r18
    138a:	3f 93       	push	r19
    138c:	4f 93       	push	r20
    138e:	5f 93       	push	r21
    1390:	6f 93       	push	r22
    1392:	7f 93       	push	r23
    1394:	8f 93       	push	r24
    1396:	9f 93       	push	r25
    1398:	af 93       	push	r26
    139a:	bf 93       	push	r27
    139c:	ef 93       	push	r30
    139e:	ff 93       	push	r31
    13a0:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    13a4:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    13a8:	ac 01       	movw	r20, r24
    13aa:	09 2e       	mov	r0, r25
    13ac:	00 0c       	add	r0, r0
    13ae:	66 0b       	sbc	r22, r22
    13b0:	77 0b       	sbc	r23, r23
    13b2:	9a 01       	movw	r18, r20
    13b4:	11 27       	eor	r17, r17
    13b6:	00 27       	eor	r16, r16
    13b8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13bc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13c0:	60 e0       	ldi	r22, 0x00	; 0
    13c2:	70 e0       	ldi	r23, 0x00	; 0
    13c4:	40 2b       	or	r20, r16
    13c6:	51 2b       	or	r21, r17
    13c8:	62 2b       	or	r22, r18
    13ca:	73 2b       	or	r23, r19
    13cc:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    13d0:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    13d4:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    13d8:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    13dc:	b0 9b       	sbis	0x16, 0	; 22
    13de:	1a c0       	rjmp	.+52     	; 0x1414 <__vector_15+0x9a>
    13e0:	01 96       	adiw	r24, 0x01	; 1
    13e2:	09 2e       	mov	r0, r25
    13e4:	00 0c       	add	r0, r0
    13e6:	aa 0b       	sbc	r26, r26
    13e8:	bb 0b       	sbc	r27, r27
    13ea:	bc 01       	movw	r22, r24
    13ec:	55 27       	eor	r21, r21
    13ee:	44 27       	eor	r20, r20
    13f0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13f4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13f8:	a0 e0       	ldi	r26, 0x00	; 0
    13fa:	b0 e0       	ldi	r27, 0x00	; 0
    13fc:	84 2b       	or	r24, r20
    13fe:	95 2b       	or	r25, r21
    1400:	a6 2b       	or	r26, r22
    1402:	b7 2b       	or	r27, r23
    1404:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1408:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    140c:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1410:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1414:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x14>
    1418:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x15>
    141c:	30 97       	sbiw	r30, 0x00	; 0
    141e:	39 f0       	breq	.+14     	; 0x142e <__vector_15+0xb4>
    1420:	6a e0       	ldi	r22, 0x0A	; 10
    1422:	70 e0       	ldi	r23, 0x00	; 0
    1424:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x14>
    1428:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x15>
    142c:	09 95       	icall
    142e:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
    1432:	ff 91       	pop	r31
    1434:	ef 91       	pop	r30
    1436:	bf 91       	pop	r27
    1438:	af 91       	pop	r26
    143a:	9f 91       	pop	r25
    143c:	8f 91       	pop	r24
    143e:	7f 91       	pop	r23
    1440:	6f 91       	pop	r22
    1442:	5f 91       	pop	r21
    1444:	4f 91       	pop	r20
    1446:	3f 91       	pop	r19
    1448:	2f 91       	pop	r18
    144a:	1f 91       	pop	r17
    144c:	0f 91       	pop	r16
    144e:	0f 90       	pop	r0
    1450:	0f be       	out	0x3f, r0	; 63
    1452:	0f 90       	pop	r0
    1454:	1f 90       	pop	r1
    1456:	18 95       	reti

00001458 <__vector_16>:
    1458:	1f 92       	push	r1
    145a:	0f 92       	push	r0
    145c:	0f b6       	in	r0, 0x3f	; 63
    145e:	0f 92       	push	r0
    1460:	11 24       	eor	r1, r1
    1462:	0f 93       	push	r16
    1464:	1f 93       	push	r17
    1466:	2f 93       	push	r18
    1468:	3f 93       	push	r19
    146a:	4f 93       	push	r20
    146c:	5f 93       	push	r21
    146e:	6f 93       	push	r22
    1470:	7f 93       	push	r23
    1472:	8f 93       	push	r24
    1474:	9f 93       	push	r25
    1476:	af 93       	push	r26
    1478:	bf 93       	push	r27
    147a:	ef 93       	push	r30
    147c:	ff 93       	push	r31
    147e:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1482:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1486:	ac 01       	movw	r20, r24
    1488:	09 2e       	mov	r0, r25
    148a:	00 0c       	add	r0, r0
    148c:	66 0b       	sbc	r22, r22
    148e:	77 0b       	sbc	r23, r23
    1490:	9a 01       	movw	r18, r20
    1492:	11 27       	eor	r17, r17
    1494:	00 27       	eor	r16, r16
    1496:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    149a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    149e:	60 e0       	ldi	r22, 0x00	; 0
    14a0:	70 e0       	ldi	r23, 0x00	; 0
    14a2:	40 2b       	or	r20, r16
    14a4:	51 2b       	or	r21, r17
    14a6:	62 2b       	or	r22, r18
    14a8:	73 2b       	or	r23, r19
    14aa:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    14ae:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    14b2:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    14b6:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    14ba:	b0 9b       	sbis	0x16, 0	; 22
    14bc:	1a c0       	rjmp	.+52     	; 0x14f2 <__vector_16+0x9a>
    14be:	01 96       	adiw	r24, 0x01	; 1
    14c0:	09 2e       	mov	r0, r25
    14c2:	00 0c       	add	r0, r0
    14c4:	aa 0b       	sbc	r26, r26
    14c6:	bb 0b       	sbc	r27, r27
    14c8:	bc 01       	movw	r22, r24
    14ca:	55 27       	eor	r21, r21
    14cc:	44 27       	eor	r20, r20
    14ce:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14d2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14d6:	a0 e0       	ldi	r26, 0x00	; 0
    14d8:	b0 e0       	ldi	r27, 0x00	; 0
    14da:	84 2b       	or	r24, r20
    14dc:	95 2b       	or	r25, r21
    14de:	a6 2b       	or	r26, r22
    14e0:	b7 2b       	or	r27, r23
    14e2:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    14e6:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    14ea:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    14ee:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    14f2:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x16>
    14f6:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x17>
    14fa:	30 97       	sbiw	r30, 0x00	; 0
    14fc:	39 f0       	breq	.+14     	; 0x150c <__vector_16+0xb4>
    14fe:	6b e0       	ldi	r22, 0x0B	; 11
    1500:	70 e0       	ldi	r23, 0x00	; 0
    1502:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x16>
    1506:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x17>
    150a:	09 95       	icall
    150c:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
    1510:	ff 91       	pop	r31
    1512:	ef 91       	pop	r30
    1514:	bf 91       	pop	r27
    1516:	af 91       	pop	r26
    1518:	9f 91       	pop	r25
    151a:	8f 91       	pop	r24
    151c:	7f 91       	pop	r23
    151e:	6f 91       	pop	r22
    1520:	5f 91       	pop	r21
    1522:	4f 91       	pop	r20
    1524:	3f 91       	pop	r19
    1526:	2f 91       	pop	r18
    1528:	1f 91       	pop	r17
    152a:	0f 91       	pop	r16
    152c:	0f 90       	pop	r0
    152e:	0f be       	out	0x3f, r0	; 63
    1530:	0f 90       	pop	r0
    1532:	1f 90       	pop	r1
    1534:	18 95       	reti

00001536 <__vector_17>:
    1536:	1f 92       	push	r1
    1538:	0f 92       	push	r0
    153a:	0f b6       	in	r0, 0x3f	; 63
    153c:	0f 92       	push	r0
    153e:	11 24       	eor	r1, r1
    1540:	0f 93       	push	r16
    1542:	1f 93       	push	r17
    1544:	2f 93       	push	r18
    1546:	3f 93       	push	r19
    1548:	4f 93       	push	r20
    154a:	5f 93       	push	r21
    154c:	6f 93       	push	r22
    154e:	7f 93       	push	r23
    1550:	8f 93       	push	r24
    1552:	9f 93       	push	r25
    1554:	af 93       	push	r26
    1556:	bf 93       	push	r27
    1558:	ef 93       	push	r30
    155a:	ff 93       	push	r31
    155c:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1560:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1564:	ac 01       	movw	r20, r24
    1566:	09 2e       	mov	r0, r25
    1568:	00 0c       	add	r0, r0
    156a:	66 0b       	sbc	r22, r22
    156c:	77 0b       	sbc	r23, r23
    156e:	9a 01       	movw	r18, r20
    1570:	11 27       	eor	r17, r17
    1572:	00 27       	eor	r16, r16
    1574:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1578:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    157c:	60 e0       	ldi	r22, 0x00	; 0
    157e:	70 e0       	ldi	r23, 0x00	; 0
    1580:	40 2b       	or	r20, r16
    1582:	51 2b       	or	r21, r17
    1584:	62 2b       	or	r22, r18
    1586:	73 2b       	or	r23, r19
    1588:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    158c:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    1590:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    1594:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    1598:	b0 9b       	sbis	0x16, 0	; 22
    159a:	1a c0       	rjmp	.+52     	; 0x15d0 <__vector_17+0x9a>
    159c:	01 96       	adiw	r24, 0x01	; 1
    159e:	09 2e       	mov	r0, r25
    15a0:	00 0c       	add	r0, r0
    15a2:	aa 0b       	sbc	r26, r26
    15a4:	bb 0b       	sbc	r27, r27
    15a6:	bc 01       	movw	r22, r24
    15a8:	55 27       	eor	r21, r21
    15aa:	44 27       	eor	r20, r20
    15ac:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15b0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15b4:	a0 e0       	ldi	r26, 0x00	; 0
    15b6:	b0 e0       	ldi	r27, 0x00	; 0
    15b8:	84 2b       	or	r24, r20
    15ba:	95 2b       	or	r25, r21
    15bc:	a6 2b       	or	r26, r22
    15be:	b7 2b       	or	r27, r23
    15c0:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    15c4:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    15c8:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    15cc:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    15d0:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x18>
    15d4:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x19>
    15d8:	30 97       	sbiw	r30, 0x00	; 0
    15da:	39 f0       	breq	.+14     	; 0x15ea <__vector_17+0xb4>
    15dc:	6c e0       	ldi	r22, 0x0C	; 12
    15de:	70 e0       	ldi	r23, 0x00	; 0
    15e0:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x18>
    15e4:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x19>
    15e8:	09 95       	icall
    15ea:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
    15ee:	ff 91       	pop	r31
    15f0:	ef 91       	pop	r30
    15f2:	bf 91       	pop	r27
    15f4:	af 91       	pop	r26
    15f6:	9f 91       	pop	r25
    15f8:	8f 91       	pop	r24
    15fa:	7f 91       	pop	r23
    15fc:	6f 91       	pop	r22
    15fe:	5f 91       	pop	r21
    1600:	4f 91       	pop	r20
    1602:	3f 91       	pop	r19
    1604:	2f 91       	pop	r18
    1606:	1f 91       	pop	r17
    1608:	0f 91       	pop	r16
    160a:	0f 90       	pop	r0
    160c:	0f be       	out	0x3f, r0	; 63
    160e:	0f 90       	pop	r0
    1610:	1f 90       	pop	r1
    1612:	18 95       	reti

00001614 <__vector_18>:
    1614:	1f 92       	push	r1
    1616:	0f 92       	push	r0
    1618:	0f b6       	in	r0, 0x3f	; 63
    161a:	0f 92       	push	r0
    161c:	11 24       	eor	r1, r1
    161e:	0f 93       	push	r16
    1620:	1f 93       	push	r17
    1622:	2f 93       	push	r18
    1624:	3f 93       	push	r19
    1626:	4f 93       	push	r20
    1628:	5f 93       	push	r21
    162a:	6f 93       	push	r22
    162c:	7f 93       	push	r23
    162e:	8f 93       	push	r24
    1630:	9f 93       	push	r25
    1632:	af 93       	push	r26
    1634:	bf 93       	push	r27
    1636:	ef 93       	push	r30
    1638:	ff 93       	push	r31
    163a:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    163e:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1642:	ac 01       	movw	r20, r24
    1644:	09 2e       	mov	r0, r25
    1646:	00 0c       	add	r0, r0
    1648:	66 0b       	sbc	r22, r22
    164a:	77 0b       	sbc	r23, r23
    164c:	9a 01       	movw	r18, r20
    164e:	11 27       	eor	r17, r17
    1650:	00 27       	eor	r16, r16
    1652:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1656:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    165a:	60 e0       	ldi	r22, 0x00	; 0
    165c:	70 e0       	ldi	r23, 0x00	; 0
    165e:	40 2b       	or	r20, r16
    1660:	51 2b       	or	r21, r17
    1662:	62 2b       	or	r22, r18
    1664:	73 2b       	or	r23, r19
    1666:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    166a:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    166e:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    1672:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    1676:	b0 9b       	sbis	0x16, 0	; 22
    1678:	1a c0       	rjmp	.+52     	; 0x16ae <__vector_18+0x9a>
    167a:	01 96       	adiw	r24, 0x01	; 1
    167c:	09 2e       	mov	r0, r25
    167e:	00 0c       	add	r0, r0
    1680:	aa 0b       	sbc	r26, r26
    1682:	bb 0b       	sbc	r27, r27
    1684:	bc 01       	movw	r22, r24
    1686:	55 27       	eor	r21, r21
    1688:	44 27       	eor	r20, r20
    168a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    168e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1692:	a0 e0       	ldi	r26, 0x00	; 0
    1694:	b0 e0       	ldi	r27, 0x00	; 0
    1696:	84 2b       	or	r24, r20
    1698:	95 2b       	or	r25, r21
    169a:	a6 2b       	or	r26, r22
    169c:	b7 2b       	or	r27, r23
    169e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    16a2:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    16a6:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    16aa:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    16ae:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x1a>
    16b2:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x1b>
    16b6:	30 97       	sbiw	r30, 0x00	; 0
    16b8:	39 f0       	breq	.+14     	; 0x16c8 <__vector_18+0xb4>
    16ba:	6d e0       	ldi	r22, 0x0D	; 13
    16bc:	70 e0       	ldi	r23, 0x00	; 0
    16be:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x1a>
    16c2:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x1b>
    16c6:	09 95       	icall
    16c8:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
    16cc:	ff 91       	pop	r31
    16ce:	ef 91       	pop	r30
    16d0:	bf 91       	pop	r27
    16d2:	af 91       	pop	r26
    16d4:	9f 91       	pop	r25
    16d6:	8f 91       	pop	r24
    16d8:	7f 91       	pop	r23
    16da:	6f 91       	pop	r22
    16dc:	5f 91       	pop	r21
    16de:	4f 91       	pop	r20
    16e0:	3f 91       	pop	r19
    16e2:	2f 91       	pop	r18
    16e4:	1f 91       	pop	r17
    16e6:	0f 91       	pop	r16
    16e8:	0f 90       	pop	r0
    16ea:	0f be       	out	0x3f, r0	; 63
    16ec:	0f 90       	pop	r0
    16ee:	1f 90       	pop	r1
    16f0:	18 95       	reti

000016f2 <__vector_19>:
    16f2:	1f 92       	push	r1
    16f4:	0f 92       	push	r0
    16f6:	0f b6       	in	r0, 0x3f	; 63
    16f8:	0f 92       	push	r0
    16fa:	11 24       	eor	r1, r1
    16fc:	0f 93       	push	r16
    16fe:	1f 93       	push	r17
    1700:	2f 93       	push	r18
    1702:	3f 93       	push	r19
    1704:	4f 93       	push	r20
    1706:	5f 93       	push	r21
    1708:	6f 93       	push	r22
    170a:	7f 93       	push	r23
    170c:	8f 93       	push	r24
    170e:	9f 93       	push	r25
    1710:	af 93       	push	r26
    1712:	bf 93       	push	r27
    1714:	ef 93       	push	r30
    1716:	ff 93       	push	r31
    1718:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    171c:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1720:	ac 01       	movw	r20, r24
    1722:	09 2e       	mov	r0, r25
    1724:	00 0c       	add	r0, r0
    1726:	66 0b       	sbc	r22, r22
    1728:	77 0b       	sbc	r23, r23
    172a:	9a 01       	movw	r18, r20
    172c:	11 27       	eor	r17, r17
    172e:	00 27       	eor	r16, r16
    1730:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1734:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1738:	60 e0       	ldi	r22, 0x00	; 0
    173a:	70 e0       	ldi	r23, 0x00	; 0
    173c:	40 2b       	or	r20, r16
    173e:	51 2b       	or	r21, r17
    1740:	62 2b       	or	r22, r18
    1742:	73 2b       	or	r23, r19
    1744:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    1748:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    174c:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    1750:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    1754:	b0 9b       	sbis	0x16, 0	; 22
    1756:	1a c0       	rjmp	.+52     	; 0x178c <__vector_19+0x9a>
    1758:	01 96       	adiw	r24, 0x01	; 1
    175a:	09 2e       	mov	r0, r25
    175c:	00 0c       	add	r0, r0
    175e:	aa 0b       	sbc	r26, r26
    1760:	bb 0b       	sbc	r27, r27
    1762:	bc 01       	movw	r22, r24
    1764:	55 27       	eor	r21, r21
    1766:	44 27       	eor	r20, r20
    1768:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    176c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1770:	a0 e0       	ldi	r26, 0x00	; 0
    1772:	b0 e0       	ldi	r27, 0x00	; 0
    1774:	84 2b       	or	r24, r20
    1776:	95 2b       	or	r25, r21
    1778:	a6 2b       	or	r26, r22
    177a:	b7 2b       	or	r27, r23
    177c:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1780:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1784:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1788:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    178c:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x1c>
    1790:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x1d>
    1794:	30 97       	sbiw	r30, 0x00	; 0
    1796:	39 f0       	breq	.+14     	; 0x17a6 <__vector_19+0xb4>
    1798:	6e e0       	ldi	r22, 0x0E	; 14
    179a:	70 e0       	ldi	r23, 0x00	; 0
    179c:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x1c>
    17a0:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x1d>
    17a4:	09 95       	icall
    17a6:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
    17aa:	ff 91       	pop	r31
    17ac:	ef 91       	pop	r30
    17ae:	bf 91       	pop	r27
    17b0:	af 91       	pop	r26
    17b2:	9f 91       	pop	r25
    17b4:	8f 91       	pop	r24
    17b6:	7f 91       	pop	r23
    17b8:	6f 91       	pop	r22
    17ba:	5f 91       	pop	r21
    17bc:	4f 91       	pop	r20
    17be:	3f 91       	pop	r19
    17c0:	2f 91       	pop	r18
    17c2:	1f 91       	pop	r17
    17c4:	0f 91       	pop	r16
    17c6:	0f 90       	pop	r0
    17c8:	0f be       	out	0x3f, r0	; 63
    17ca:	0f 90       	pop	r0
    17cc:	1f 90       	pop	r1
    17ce:	18 95       	reti

000017d0 <__vector_20>:
    17d0:	1f 92       	push	r1
    17d2:	0f 92       	push	r0
    17d4:	0f b6       	in	r0, 0x3f	; 63
    17d6:	0f 92       	push	r0
    17d8:	11 24       	eor	r1, r1
    17da:	0f 93       	push	r16
    17dc:	1f 93       	push	r17
    17de:	2f 93       	push	r18
    17e0:	3f 93       	push	r19
    17e2:	4f 93       	push	r20
    17e4:	5f 93       	push	r21
    17e6:	6f 93       	push	r22
    17e8:	7f 93       	push	r23
    17ea:	8f 93       	push	r24
    17ec:	9f 93       	push	r25
    17ee:	af 93       	push	r26
    17f0:	bf 93       	push	r27
    17f2:	ef 93       	push	r30
    17f4:	ff 93       	push	r31
    17f6:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    17fa:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    17fe:	ac 01       	movw	r20, r24
    1800:	09 2e       	mov	r0, r25
    1802:	00 0c       	add	r0, r0
    1804:	66 0b       	sbc	r22, r22
    1806:	77 0b       	sbc	r23, r23
    1808:	9a 01       	movw	r18, r20
    180a:	11 27       	eor	r17, r17
    180c:	00 27       	eor	r16, r16
    180e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1812:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1816:	60 e0       	ldi	r22, 0x00	; 0
    1818:	70 e0       	ldi	r23, 0x00	; 0
    181a:	40 2b       	or	r20, r16
    181c:	51 2b       	or	r21, r17
    181e:	62 2b       	or	r22, r18
    1820:	73 2b       	or	r23, r19
    1822:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    1826:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    182a:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    182e:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    1832:	b0 9b       	sbis	0x16, 0	; 22
    1834:	1a c0       	rjmp	.+52     	; 0x186a <__vector_20+0x9a>
    1836:	01 96       	adiw	r24, 0x01	; 1
    1838:	09 2e       	mov	r0, r25
    183a:	00 0c       	add	r0, r0
    183c:	aa 0b       	sbc	r26, r26
    183e:	bb 0b       	sbc	r27, r27
    1840:	bc 01       	movw	r22, r24
    1842:	55 27       	eor	r21, r21
    1844:	44 27       	eor	r20, r20
    1846:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    184a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    184e:	a0 e0       	ldi	r26, 0x00	; 0
    1850:	b0 e0       	ldi	r27, 0x00	; 0
    1852:	84 2b       	or	r24, r20
    1854:	95 2b       	or	r25, r21
    1856:	a6 2b       	or	r26, r22
    1858:	b7 2b       	or	r27, r23
    185a:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    185e:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1862:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1866:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    186a:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <mtable+0x1e>
    186e:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <mtable+0x1f>
    1872:	30 97       	sbiw	r30, 0x00	; 0
    1874:	39 f0       	breq	.+14     	; 0x1884 <__vector_20+0xb4>
    1876:	6f e0       	ldi	r22, 0x0F	; 15
    1878:	70 e0       	ldi	r23, 0x00	; 0
    187a:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <otable+0x1e>
    187e:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <otable+0x1f>
    1882:	09 95       	icall
    1884:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
    1888:	ff 91       	pop	r31
    188a:	ef 91       	pop	r30
    188c:	bf 91       	pop	r27
    188e:	af 91       	pop	r26
    1890:	9f 91       	pop	r25
    1892:	8f 91       	pop	r24
    1894:	7f 91       	pop	r23
    1896:	6f 91       	pop	r22
    1898:	5f 91       	pop	r21
    189a:	4f 91       	pop	r20
    189c:	3f 91       	pop	r19
    189e:	2f 91       	pop	r18
    18a0:	1f 91       	pop	r17
    18a2:	0f 91       	pop	r16
    18a4:	0f 90       	pop	r0
    18a6:	0f be       	out	0x3f, r0	; 63
    18a8:	0f 90       	pop	r0
    18aa:	1f 90       	pop	r1
    18ac:	18 95       	reti

000018ae <__vector_21>:
    18ae:	1f 92       	push	r1
    18b0:	0f 92       	push	r0
    18b2:	0f b6       	in	r0, 0x3f	; 63
    18b4:	0f 92       	push	r0
    18b6:	11 24       	eor	r1, r1
    18b8:	0f 93       	push	r16
    18ba:	1f 93       	push	r17
    18bc:	2f 93       	push	r18
    18be:	3f 93       	push	r19
    18c0:	4f 93       	push	r20
    18c2:	5f 93       	push	r21
    18c4:	6f 93       	push	r22
    18c6:	7f 93       	push	r23
    18c8:	8f 93       	push	r24
    18ca:	9f 93       	push	r25
    18cc:	af 93       	push	r26
    18ce:	bf 93       	push	r27
    18d0:	ef 93       	push	r30
    18d2:	ff 93       	push	r31
    18d4:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    18d8:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    18dc:	ac 01       	movw	r20, r24
    18de:	09 2e       	mov	r0, r25
    18e0:	00 0c       	add	r0, r0
    18e2:	66 0b       	sbc	r22, r22
    18e4:	77 0b       	sbc	r23, r23
    18e6:	9a 01       	movw	r18, r20
    18e8:	11 27       	eor	r17, r17
    18ea:	00 27       	eor	r16, r16
    18ec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18f0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18f4:	60 e0       	ldi	r22, 0x00	; 0
    18f6:	70 e0       	ldi	r23, 0x00	; 0
    18f8:	40 2b       	or	r20, r16
    18fa:	51 2b       	or	r21, r17
    18fc:	62 2b       	or	r22, r18
    18fe:	73 2b       	or	r23, r19
    1900:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    1904:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    1908:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    190c:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    1910:	b0 9b       	sbis	0x16, 0	; 22
    1912:	1a c0       	rjmp	.+52     	; 0x1948 <__vector_21+0x9a>
    1914:	01 96       	adiw	r24, 0x01	; 1
    1916:	09 2e       	mov	r0, r25
    1918:	00 0c       	add	r0, r0
    191a:	aa 0b       	sbc	r26, r26
    191c:	bb 0b       	sbc	r27, r27
    191e:	bc 01       	movw	r22, r24
    1920:	55 27       	eor	r21, r21
    1922:	44 27       	eor	r20, r20
    1924:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1928:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    192c:	a0 e0       	ldi	r26, 0x00	; 0
    192e:	b0 e0       	ldi	r27, 0x00	; 0
    1930:	84 2b       	or	r24, r20
    1932:	95 2b       	or	r25, r21
    1934:	a6 2b       	or	r26, r22
    1936:	b7 2b       	or	r27, r23
    1938:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    193c:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1940:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1944:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1948:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <mtable+0x20>
    194c:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <mtable+0x21>
    1950:	30 97       	sbiw	r30, 0x00	; 0
    1952:	39 f0       	breq	.+14     	; 0x1962 <__vector_21+0xb4>
    1954:	60 e1       	ldi	r22, 0x10	; 16
    1956:	70 e0       	ldi	r23, 0x00	; 0
    1958:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <otable+0x20>
    195c:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <otable+0x21>
    1960:	09 95       	icall
    1962:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
    1966:	ff 91       	pop	r31
    1968:	ef 91       	pop	r30
    196a:	bf 91       	pop	r27
    196c:	af 91       	pop	r26
    196e:	9f 91       	pop	r25
    1970:	8f 91       	pop	r24
    1972:	7f 91       	pop	r23
    1974:	6f 91       	pop	r22
    1976:	5f 91       	pop	r21
    1978:	4f 91       	pop	r20
    197a:	3f 91       	pop	r19
    197c:	2f 91       	pop	r18
    197e:	1f 91       	pop	r17
    1980:	0f 91       	pop	r16
    1982:	0f 90       	pop	r0
    1984:	0f be       	out	0x3f, r0	; 63
    1986:	0f 90       	pop	r0
    1988:	1f 90       	pop	r1
    198a:	18 95       	reti

0000198c <__vector_22>:
    198c:	1f 92       	push	r1
    198e:	0f 92       	push	r0
    1990:	0f b6       	in	r0, 0x3f	; 63
    1992:	0f 92       	push	r0
    1994:	11 24       	eor	r1, r1
    1996:	0f 93       	push	r16
    1998:	1f 93       	push	r17
    199a:	2f 93       	push	r18
    199c:	3f 93       	push	r19
    199e:	4f 93       	push	r20
    19a0:	5f 93       	push	r21
    19a2:	6f 93       	push	r22
    19a4:	7f 93       	push	r23
    19a6:	8f 93       	push	r24
    19a8:	9f 93       	push	r25
    19aa:	af 93       	push	r26
    19ac:	bf 93       	push	r27
    19ae:	ef 93       	push	r30
    19b0:	ff 93       	push	r31
    19b2:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    19b6:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    19ba:	ac 01       	movw	r20, r24
    19bc:	09 2e       	mov	r0, r25
    19be:	00 0c       	add	r0, r0
    19c0:	66 0b       	sbc	r22, r22
    19c2:	77 0b       	sbc	r23, r23
    19c4:	9a 01       	movw	r18, r20
    19c6:	11 27       	eor	r17, r17
    19c8:	00 27       	eor	r16, r16
    19ca:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19ce:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19d2:	60 e0       	ldi	r22, 0x00	; 0
    19d4:	70 e0       	ldi	r23, 0x00	; 0
    19d6:	40 2b       	or	r20, r16
    19d8:	51 2b       	or	r21, r17
    19da:	62 2b       	or	r22, r18
    19dc:	73 2b       	or	r23, r19
    19de:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    19e2:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    19e6:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    19ea:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    19ee:	b0 9b       	sbis	0x16, 0	; 22
    19f0:	1a c0       	rjmp	.+52     	; 0x1a26 <__vector_22+0x9a>
    19f2:	01 96       	adiw	r24, 0x01	; 1
    19f4:	09 2e       	mov	r0, r25
    19f6:	00 0c       	add	r0, r0
    19f8:	aa 0b       	sbc	r26, r26
    19fa:	bb 0b       	sbc	r27, r27
    19fc:	bc 01       	movw	r22, r24
    19fe:	55 27       	eor	r21, r21
    1a00:	44 27       	eor	r20, r20
    1a02:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a06:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a0a:	a0 e0       	ldi	r26, 0x00	; 0
    1a0c:	b0 e0       	ldi	r27, 0x00	; 0
    1a0e:	84 2b       	or	r24, r20
    1a10:	95 2b       	or	r25, r21
    1a12:	a6 2b       	or	r26, r22
    1a14:	b7 2b       	or	r27, r23
    1a16:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1a1a:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1a1e:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1a22:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1a26:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <mtable+0x22>
    1a2a:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <mtable+0x23>
    1a2e:	30 97       	sbiw	r30, 0x00	; 0
    1a30:	39 f0       	breq	.+14     	; 0x1a40 <__vector_22+0xb4>
    1a32:	61 e1       	ldi	r22, 0x11	; 17
    1a34:	70 e0       	ldi	r23, 0x00	; 0
    1a36:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <otable+0x22>
    1a3a:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <otable+0x23>
    1a3e:	09 95       	icall
    1a40:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
    1a44:	ff 91       	pop	r31
    1a46:	ef 91       	pop	r30
    1a48:	bf 91       	pop	r27
    1a4a:	af 91       	pop	r26
    1a4c:	9f 91       	pop	r25
    1a4e:	8f 91       	pop	r24
    1a50:	7f 91       	pop	r23
    1a52:	6f 91       	pop	r22
    1a54:	5f 91       	pop	r21
    1a56:	4f 91       	pop	r20
    1a58:	3f 91       	pop	r19
    1a5a:	2f 91       	pop	r18
    1a5c:	1f 91       	pop	r17
    1a5e:	0f 91       	pop	r16
    1a60:	0f 90       	pop	r0
    1a62:	0f be       	out	0x3f, r0	; 63
    1a64:	0f 90       	pop	r0
    1a66:	1f 90       	pop	r1
    1a68:	18 95       	reti

00001a6a <idle>:
    1a6a:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
    1a6e:	78 94       	sei
    1a70:	81 e0       	ldi	r24, 0x01	; 1
    1a72:	83 bf       	out	0x33, r24	; 51
    1a74:	88 95       	sleep
    1a76:	fc cf       	rjmp	.-8      	; 0x1a70 <idle+0x6>

00001a78 <__vector_9>:
    1a78:	1f 92       	push	r1
    1a7a:	0f 92       	push	r0
    1a7c:	0f b6       	in	r0, 0x3f	; 63
    1a7e:	0f 92       	push	r0
    1a80:	11 24       	eor	r1, r1
    1a82:	2f 93       	push	r18
    1a84:	3f 93       	push	r19
    1a86:	4f 93       	push	r20
    1a88:	5f 93       	push	r21
    1a8a:	6f 93       	push	r22
    1a8c:	7f 93       	push	r23
    1a8e:	8f 93       	push	r24
    1a90:	9f 93       	push	r25
    1a92:	ef 93       	push	r30
    1a94:	ff 93       	push	r31
    1a96:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1a9a:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1a9e:	01 96       	adiw	r24, 0x01	; 1
    1aa0:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <overflows+0x1>
    1aa4:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <overflows>
    1aa8:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <timerQ>
    1aac:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <timerQ+0x1>
    1ab0:	30 97       	sbiw	r30, 0x00	; 0
    1ab2:	01 f1       	breq	.+64     	; 0x1af4 <__vector_9+0x7c>
    1ab4:	42 81       	ldd	r20, Z+2	; 0x02
    1ab6:	53 81       	ldd	r21, Z+3	; 0x03
    1ab8:	64 81       	ldd	r22, Z+4	; 0x04
    1aba:	75 81       	ldd	r23, Z+5	; 0x05
    1abc:	86 17       	cp	r24, r22
    1abe:	97 07       	cpc	r25, r23
    1ac0:	c9 f4       	brne	.+50     	; 0x1af4 <__vector_9+0x7c>
    1ac2:	ca 01       	movw	r24, r20
    1ac4:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ac8:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1acc:	42 1b       	sub	r20, r18
    1ace:	53 0b       	sbc	r21, r19
    1ad0:	41 30       	cpi	r20, 0x01	; 1
    1ad2:	51 05       	cpc	r21, r1
    1ad4:	29 f4       	brne	.+10     	; 0x1ae0 <__vector_9+0x68>
    1ad6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ada:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ade:	01 96       	adiw	r24, 0x01	; 1
    1ae0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1ae4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1ae8:	ef e6       	ldi	r30, 0x6F	; 111
    1aea:	f0 e0       	ldi	r31, 0x00	; 0
    1aec:	80 81       	ld	r24, Z
    1aee:	82 60       	ori	r24, 0x02	; 2
    1af0:	80 83       	st	Z, r24
    1af2:	05 c0       	rjmp	.+10     	; 0x1afe <__vector_9+0x86>
    1af4:	ef e6       	ldi	r30, 0x6F	; 111
    1af6:	f0 e0       	ldi	r31, 0x00	; 0
    1af8:	80 81       	ld	r24, Z
    1afa:	8d 7f       	andi	r24, 0xFD	; 253
    1afc:	80 83       	st	Z, r24
    1afe:	ff 91       	pop	r31
    1b00:	ef 91       	pop	r30
    1b02:	9f 91       	pop	r25
    1b04:	8f 91       	pop	r24
    1b06:	7f 91       	pop	r23
    1b08:	6f 91       	pop	r22
    1b0a:	5f 91       	pop	r21
    1b0c:	4f 91       	pop	r20
    1b0e:	3f 91       	pop	r19
    1b10:	2f 91       	pop	r18
    1b12:	0f 90       	pop	r0
    1b14:	0f be       	out	0x3f, r0	; 63
    1b16:	0f 90       	pop	r0
    1b18:	1f 90       	pop	r1
    1b1a:	18 95       	reti

00001b1c <__vector_7>:
    1b1c:	1f 92       	push	r1
    1b1e:	0f 92       	push	r0
    1b20:	0f b6       	in	r0, 0x3f	; 63
    1b22:	0f 92       	push	r0
    1b24:	11 24       	eor	r1, r1
    1b26:	cf 92       	push	r12
    1b28:	df 92       	push	r13
    1b2a:	ef 92       	push	r14
    1b2c:	ff 92       	push	r15
    1b2e:	2f 93       	push	r18
    1b30:	3f 93       	push	r19
    1b32:	4f 93       	push	r20
    1b34:	5f 93       	push	r21
    1b36:	6f 93       	push	r22
    1b38:	7f 93       	push	r23
    1b3a:	8f 93       	push	r24
    1b3c:	9f 93       	push	r25
    1b3e:	af 93       	push	r26
    1b40:	bf 93       	push	r27
    1b42:	ef 93       	push	r30
    1b44:	ff 93       	push	r31
    1b46:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1b4a:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1b4e:	6c 01       	movw	r12, r24
    1b50:	09 2e       	mov	r0, r25
    1b52:	00 0c       	add	r0, r0
    1b54:	ee 08       	sbc	r14, r14
    1b56:	ff 08       	sbc	r15, r15
    1b58:	76 01       	movw	r14, r12
    1b5a:	dd 24       	eor	r13, r13
    1b5c:	cc 24       	eor	r12, r12
    1b5e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b62:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b66:	60 e0       	ldi	r22, 0x00	; 0
    1b68:	70 e0       	ldi	r23, 0x00	; 0
    1b6a:	c4 2a       	or	r12, r20
    1b6c:	d5 2a       	or	r13, r21
    1b6e:	e6 2a       	or	r14, r22
    1b70:	f7 2a       	or	r15, r23
    1b72:	b0 9b       	sbis	0x16, 0	; 22
    1b74:	1e c0       	rjmp	.+60     	; 0x1bb2 <__vector_7+0x96>
    1b76:	6c 01       	movw	r12, r24
    1b78:	2f ef       	ldi	r18, 0xFF	; 255
    1b7a:	c2 1a       	sub	r12, r18
    1b7c:	d2 0a       	sbc	r13, r18
    1b7e:	0d 2c       	mov	r0, r13
    1b80:	00 0c       	add	r0, r0
    1b82:	ee 08       	sbc	r14, r14
    1b84:	ff 08       	sbc	r15, r15
    1b86:	d6 01       	movw	r26, r12
    1b88:	99 27       	eor	r25, r25
    1b8a:	88 27       	eor	r24, r24
    1b8c:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b90:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b94:	e1 2c       	mov	r14, r1
    1b96:	f1 2c       	mov	r15, r1
    1b98:	c8 2a       	or	r12, r24
    1b9a:	d9 2a       	or	r13, r25
    1b9c:	ea 2a       	or	r14, r26
    1b9e:	fb 2a       	or	r15, r27
    1ba0:	08 c0       	rjmp	.+16     	; 0x1bb2 <__vector_7+0x96>
    1ba2:	80 e4       	ldi	r24, 0x40	; 64
    1ba4:	91 e0       	ldi	r25, 0x01	; 1
    1ba6:	0e 94 fe 04 	call	0x9fc	; 0x9fc <dequeue>
    1baa:	62 e4       	ldi	r22, 0x42	; 66
    1bac:	71 e0       	ldi	r23, 0x01	; 1
    1bae:	0e 94 9c 04 	call	0x938	; 0x938 <enqueueByDeadline>
    1bb2:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <timerQ>
    1bb6:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <timerQ+0x1>
    1bba:	30 97       	sbiw	r30, 0x00	; 0
    1bbc:	69 f0       	breq	.+26     	; 0x1bd8 <__vector_7+0xbc>
    1bbe:	82 81       	ldd	r24, Z+2	; 0x02
    1bc0:	93 81       	ldd	r25, Z+3	; 0x03
    1bc2:	a4 81       	ldd	r26, Z+4	; 0x04
    1bc4:	b5 81       	ldd	r27, Z+5	; 0x05
    1bc6:	8c 19       	sub	r24, r12
    1bc8:	9d 09       	sbc	r25, r13
    1bca:	ae 09       	sbc	r26, r14
    1bcc:	bf 09       	sbc	r27, r15
    1bce:	18 16       	cp	r1, r24
    1bd0:	19 06       	cpc	r1, r25
    1bd2:	1a 06       	cpc	r1, r26
    1bd4:	1b 06       	cpc	r1, r27
    1bd6:	2c f7       	brge	.-54     	; 0x1ba2 <__vector_7+0x86>
    1bd8:	30 97       	sbiw	r30, 0x00	; 0
    1bda:	21 f1       	breq	.+72     	; 0x1c24 <__vector_7+0x108>
    1bdc:	82 81       	ldd	r24, Z+2	; 0x02
    1bde:	93 81       	ldd	r25, Z+3	; 0x03
    1be0:	a4 81       	ldd	r26, Z+4	; 0x04
    1be2:	b5 81       	ldd	r27, Z+5	; 0x05
    1be4:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    1be8:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    1bec:	2a 17       	cp	r18, r26
    1bee:	3b 07       	cpc	r19, r27
    1bf0:	c9 f4       	brne	.+50     	; 0x1c24 <__vector_7+0x108>
    1bf2:	9c 01       	movw	r18, r24
    1bf4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bf8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bfc:	84 1b       	sub	r24, r20
    1bfe:	95 0b       	sbc	r25, r21
    1c00:	01 97       	sbiw	r24, 0x01	; 1
    1c02:	31 f4       	brne	.+12     	; 0x1c10 <__vector_7+0xf4>
    1c04:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c08:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c0c:	2f 5f       	subi	r18, 0xFF	; 255
    1c0e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c10:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1c14:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1c18:	ef e6       	ldi	r30, 0x6F	; 111
    1c1a:	f0 e0       	ldi	r31, 0x00	; 0
    1c1c:	80 81       	ld	r24, Z
    1c1e:	82 60       	ori	r24, 0x02	; 2
    1c20:	80 83       	st	Z, r24
    1c22:	05 c0       	rjmp	.+10     	; 0x1c2e <__vector_7+0x112>
    1c24:	ef e6       	ldi	r30, 0x6F	; 111
    1c26:	f0 e0       	ldi	r31, 0x00	; 0
    1c28:	80 81       	ld	r24, Z
    1c2a:	8d 7f       	andi	r24, 0xFD	; 253
    1c2c:	80 83       	st	Z, r24
    1c2e:	0e 94 33 05 	call	0xa66	; 0xa66 <schedule>
    1c32:	ff 91       	pop	r31
    1c34:	ef 91       	pop	r30
    1c36:	bf 91       	pop	r27
    1c38:	af 91       	pop	r26
    1c3a:	9f 91       	pop	r25
    1c3c:	8f 91       	pop	r24
    1c3e:	7f 91       	pop	r23
    1c40:	6f 91       	pop	r22
    1c42:	5f 91       	pop	r21
    1c44:	4f 91       	pop	r20
    1c46:	3f 91       	pop	r19
    1c48:	2f 91       	pop	r18
    1c4a:	ff 90       	pop	r15
    1c4c:	ef 90       	pop	r14
    1c4e:	df 90       	pop	r13
    1c50:	cf 90       	pop	r12
    1c52:	0f 90       	pop	r0
    1c54:	0f be       	out	0x3f, r0	; 63
    1c56:	0f 90       	pop	r0
    1c58:	1f 90       	pop	r1
    1c5a:	18 95       	reti

00001c5c <async>:
    1c5c:	3f 92       	push	r3
    1c5e:	4f 92       	push	r4
    1c60:	5f 92       	push	r5
    1c62:	6f 92       	push	r6
    1c64:	7f 92       	push	r7
    1c66:	8f 92       	push	r8
    1c68:	9f 92       	push	r9
    1c6a:	af 92       	push	r10
    1c6c:	bf 92       	push	r11
    1c6e:	cf 92       	push	r12
    1c70:	df 92       	push	r13
    1c72:	ef 92       	push	r14
    1c74:	ff 92       	push	r15
    1c76:	0f 93       	push	r16
    1c78:	1f 93       	push	r17
    1c7a:	cf 93       	push	r28
    1c7c:	df 93       	push	r29
    1c7e:	2b 01       	movw	r4, r22
    1c80:	3c 01       	movw	r6, r24
    1c82:	49 01       	movw	r8, r18
    1c84:	5a 01       	movw	r10, r20
    1c86:	8f b7       	in	r24, 0x3f	; 63
    1c88:	80 78       	andi	r24, 0x80	; 128
    1c8a:	38 2e       	mov	r3, r24
    1c8c:	f8 94       	cli
    1c8e:	88 e0       	ldi	r24, 0x08	; 8
    1c90:	91 e0       	ldi	r25, 0x01	; 1
    1c92:	0e 94 fe 04 	call	0x9fc	; 0x9fc <dequeue>
    1c96:	ec 01       	movw	r28, r24
    1c98:	1b 87       	std	Y+11, r17	; 0x0b
    1c9a:	0a 87       	std	Y+10, r16	; 0x0a
    1c9c:	fd 86       	std	Y+13, r15	; 0x0d
    1c9e:	ec 86       	std	Y+12, r14	; 0x0c
    1ca0:	df 86       	std	Y+15, r13	; 0x0f
    1ca2:	ce 86       	std	Y+14, r12	; 0x0e
    1ca4:	33 20       	and	r3, r3
    1ca6:	61 f0       	breq	.+24     	; 0x1cc0 <async+0x64>
    1ca8:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <current>
    1cac:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <current+0x1>
    1cb0:	02 80       	ldd	r0, Z+2	; 0x02
    1cb2:	f3 81       	ldd	r31, Z+3	; 0x03
    1cb4:	e0 2d       	mov	r30, r0
    1cb6:	82 81       	ldd	r24, Z+2	; 0x02
    1cb8:	93 81       	ldd	r25, Z+3	; 0x03
    1cba:	a4 81       	ldd	r26, Z+4	; 0x04
    1cbc:	b5 81       	ldd	r27, Z+5	; 0x05
    1cbe:	08 c0       	rjmp	.+16     	; 0x1cd0 <async+0x74>
    1cc0:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <timestamp>
    1cc4:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <timestamp+0x1>
    1cc8:	a0 91 3e 01 	lds	r26, 0x013E	; 0x80013e <timestamp+0x2>
    1ccc:	b0 91 3f 01 	lds	r27, 0x013F	; 0x80013f <timestamp+0x3>
    1cd0:	48 0e       	add	r4, r24
    1cd2:	59 1e       	adc	r5, r25
    1cd4:	6a 1e       	adc	r6, r26
    1cd6:	7b 1e       	adc	r7, r27
    1cd8:	4a 82       	std	Y+2, r4	; 0x02
    1cda:	5b 82       	std	Y+3, r5	; 0x03
    1cdc:	6c 82       	std	Y+4, r6	; 0x04
    1cde:	7d 82       	std	Y+5, r7	; 0x05
    1ce0:	18 14       	cp	r1, r8
    1ce2:	19 04       	cpc	r1, r9
    1ce4:	1a 04       	cpc	r1, r10
    1ce6:	1b 04       	cpc	r1, r11
    1ce8:	44 f0       	brlt	.+16     	; 0x1cfa <async+0x9e>
    1cea:	0f 2e       	mov	r0, r31
    1cec:	88 24       	eor	r8, r8
    1cee:	8a 94       	dec	r8
    1cf0:	98 2c       	mov	r9, r8
    1cf2:	a8 2c       	mov	r10, r8
    1cf4:	ff e7       	ldi	r31, 0x7F	; 127
    1cf6:	bf 2e       	mov	r11, r31
    1cf8:	f0 2d       	mov	r31, r0
    1cfa:	84 0c       	add	r8, r4
    1cfc:	95 1c       	adc	r9, r5
    1cfe:	a6 1c       	adc	r10, r6
    1d00:	b7 1c       	adc	r11, r7
    1d02:	8e 82       	std	Y+6, r8	; 0x06
    1d04:	9f 82       	std	Y+7, r9	; 0x07
    1d06:	a8 86       	std	Y+8, r10	; 0x08
    1d08:	b9 86       	std	Y+9, r11	; 0x09
    1d0a:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    1d0e:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    1d12:	c9 01       	movw	r24, r18
    1d14:	03 2e       	mov	r0, r19
    1d16:	00 0c       	add	r0, r0
    1d18:	aa 0b       	sbc	r26, r26
    1d1a:	bb 0b       	sbc	r27, r27
    1d1c:	dc 01       	movw	r26, r24
    1d1e:	99 27       	eor	r25, r25
    1d20:	88 27       	eor	r24, r24
    1d22:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d26:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d2a:	60 e0       	ldi	r22, 0x00	; 0
    1d2c:	70 e0       	ldi	r23, 0x00	; 0
    1d2e:	84 2b       	or	r24, r20
    1d30:	95 2b       	or	r25, r21
    1d32:	a6 2b       	or	r26, r22
    1d34:	b7 2b       	or	r27, r23
    1d36:	b0 9b       	sbis	0x16, 0	; 22
    1d38:	13 c0       	rjmp	.+38     	; 0x1d60 <async+0x104>
    1d3a:	c9 01       	movw	r24, r18
    1d3c:	01 96       	adiw	r24, 0x01	; 1
    1d3e:	09 2e       	mov	r0, r25
    1d40:	00 0c       	add	r0, r0
    1d42:	aa 0b       	sbc	r26, r26
    1d44:	bb 0b       	sbc	r27, r27
    1d46:	dc 01       	movw	r26, r24
    1d48:	99 27       	eor	r25, r25
    1d4a:	88 27       	eor	r24, r24
    1d4c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d50:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d54:	60 e0       	ldi	r22, 0x00	; 0
    1d56:	70 e0       	ldi	r23, 0x00	; 0
    1d58:	84 2b       	or	r24, r20
    1d5a:	95 2b       	or	r25, r21
    1d5c:	a6 2b       	or	r26, r22
    1d5e:	b7 2b       	or	r27, r23
    1d60:	48 1a       	sub	r4, r24
    1d62:	59 0a       	sbc	r5, r25
    1d64:	6a 0a       	sbc	r6, r26
    1d66:	7b 0a       	sbc	r7, r27
    1d68:	14 14       	cp	r1, r4
    1d6a:	15 04       	cpc	r1, r5
    1d6c:	16 04       	cpc	r1, r6
    1d6e:	17 04       	cpc	r1, r7
    1d70:	ac f5       	brge	.+106    	; 0x1ddc <async+0x180>
    1d72:	60 e4       	ldi	r22, 0x40	; 64
    1d74:	71 e0       	ldi	r23, 0x01	; 1
    1d76:	ce 01       	movw	r24, r28
    1d78:	0e 94 cd 04 	call	0x99a	; 0x99a <enqueueByBaseline>
    1d7c:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <timerQ>
    1d80:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <timerQ+0x1>
    1d84:	30 97       	sbiw	r30, 0x00	; 0
    1d86:	21 f1       	breq	.+72     	; 0x1dd0 <async+0x174>
    1d88:	82 81       	ldd	r24, Z+2	; 0x02
    1d8a:	93 81       	ldd	r25, Z+3	; 0x03
    1d8c:	a4 81       	ldd	r26, Z+4	; 0x04
    1d8e:	b5 81       	ldd	r27, Z+5	; 0x05
    1d90:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    1d94:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    1d98:	2a 17       	cp	r18, r26
    1d9a:	3b 07       	cpc	r19, r27
    1d9c:	c9 f4       	brne	.+50     	; 0x1dd0 <async+0x174>
    1d9e:	9c 01       	movw	r18, r24
    1da0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1da4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1da8:	84 1b       	sub	r24, r20
    1daa:	95 0b       	sbc	r25, r21
    1dac:	01 97       	sbiw	r24, 0x01	; 1
    1dae:	31 f4       	brne	.+12     	; 0x1dbc <async+0x160>
    1db0:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1db4:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1db8:	2f 5f       	subi	r18, 0xFF	; 255
    1dba:	3f 4f       	sbci	r19, 0xFF	; 255
    1dbc:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1dc0:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1dc4:	ef e6       	ldi	r30, 0x6F	; 111
    1dc6:	f0 e0       	ldi	r31, 0x00	; 0
    1dc8:	80 81       	ld	r24, Z
    1dca:	82 60       	ori	r24, 0x02	; 2
    1dcc:	80 83       	st	Z, r24
    1dce:	39 c0       	rjmp	.+114    	; 0x1e42 <async+0x1e6>
    1dd0:	ef e6       	ldi	r30, 0x6F	; 111
    1dd2:	f0 e0       	ldi	r31, 0x00	; 0
    1dd4:	80 81       	ld	r24, Z
    1dd6:	8d 7f       	andi	r24, 0xFD	; 253
    1dd8:	80 83       	st	Z, r24
    1dda:	33 c0       	rjmp	.+102    	; 0x1e42 <async+0x1e6>
    1ddc:	62 e4       	ldi	r22, 0x42	; 66
    1dde:	71 e0       	ldi	r23, 0x01	; 1
    1de0:	ce 01       	movw	r24, r28
    1de2:	0e 94 9c 04 	call	0x938	; 0x938 <enqueueByDeadline>
    1de6:	33 20       	and	r3, r3
    1de8:	61 f1       	breq	.+88     	; 0x1e42 <async+0x1e6>
    1dea:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
    1dee:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
    1df2:	89 2b       	or	r24, r25
    1df4:	31 f1       	breq	.+76     	; 0x1e42 <async+0x1e6>
    1df6:	e0 91 42 01 	lds	r30, 0x0142	; 0x800142 <msgQ>
    1dfa:	f0 91 43 01 	lds	r31, 0x0143	; 0x800143 <msgQ+0x1>
    1dfe:	86 81       	ldd	r24, Z+6	; 0x06
    1e00:	97 81       	ldd	r25, Z+7	; 0x07
    1e02:	a0 85       	ldd	r26, Z+8	; 0x08
    1e04:	b1 85       	ldd	r27, Z+9	; 0x09
    1e06:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
    1e0a:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
    1e0e:	02 80       	ldd	r0, Z+2	; 0x02
    1e10:	f3 81       	ldd	r31, Z+3	; 0x03
    1e12:	e0 2d       	mov	r30, r0
    1e14:	46 81       	ldd	r20, Z+6	; 0x06
    1e16:	57 81       	ldd	r21, Z+7	; 0x07
    1e18:	60 85       	ldd	r22, Z+8	; 0x08
    1e1a:	71 85       	ldd	r23, Z+9	; 0x09
    1e1c:	84 1b       	sub	r24, r20
    1e1e:	95 0b       	sbc	r25, r21
    1e20:	a6 0b       	sbc	r26, r22
    1e22:	b7 0b       	sbc	r27, r23
    1e24:	72 f4       	brpl	.+28     	; 0x1e42 <async+0x1e6>
    1e26:	86 e0       	ldi	r24, 0x06	; 6
    1e28:	91 e0       	ldi	r25, 0x01	; 1
    1e2a:	0e 94 29 05 	call	0xa52	; 0xa52 <pop>
    1e2e:	64 e0       	ldi	r22, 0x04	; 4
    1e30:	71 e0       	ldi	r23, 0x01	; 1
    1e32:	0e 94 1f 05 	call	0xa3e	; 0xa3e <push>
    1e36:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <activeStack>
    1e3a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <activeStack+0x1>
    1e3e:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <dispatch>
    1e42:	33 20       	and	r3, r3
    1e44:	09 f0       	breq	.+2      	; 0x1e48 <async+0x1ec>
    1e46:	78 94       	sei
    1e48:	ce 01       	movw	r24, r28
    1e4a:	df 91       	pop	r29
    1e4c:	cf 91       	pop	r28
    1e4e:	1f 91       	pop	r17
    1e50:	0f 91       	pop	r16
    1e52:	ff 90       	pop	r15
    1e54:	ef 90       	pop	r14
    1e56:	df 90       	pop	r13
    1e58:	cf 90       	pop	r12
    1e5a:	bf 90       	pop	r11
    1e5c:	af 90       	pop	r10
    1e5e:	9f 90       	pop	r9
    1e60:	8f 90       	pop	r8
    1e62:	7f 90       	pop	r7
    1e64:	6f 90       	pop	r6
    1e66:	5f 90       	pop	r5
    1e68:	4f 90       	pop	r4
    1e6a:	3f 90       	pop	r3
    1e6c:	08 95       	ret

00001e6e <sync>:
    1e6e:	cf 92       	push	r12
    1e70:	df 92       	push	r13
    1e72:	ef 92       	push	r14
    1e74:	ff 92       	push	r15
    1e76:	0f 93       	push	r16
    1e78:	1f 93       	push	r17
    1e7a:	cf 93       	push	r28
    1e7c:	df 93       	push	r29
    1e7e:	ec 01       	movw	r28, r24
    1e80:	7b 01       	movw	r14, r22
    1e82:	6a 01       	movw	r12, r20
    1e84:	1f b7       	in	r17, 0x3f	; 63
    1e86:	10 78       	andi	r17, 0x80	; 128
    1e88:	f8 94       	cli
    1e8a:	a8 81       	ld	r26, Y
    1e8c:	b9 81       	ldd	r27, Y+1	; 0x01
    1e8e:	10 97       	sbiw	r26, 0x00	; 0
    1e90:	19 f4       	brne	.+6      	; 0x1e98 <sync+0x2a>
    1e92:	35 c0       	rjmp	.+106    	; 0x1efe <sync+0x90>
    1e94:	a0 81       	ld	r26, Z
    1e96:	b1 81       	ldd	r27, Z+1	; 0x01
    1e98:	14 96       	adiw	r26, 0x04	; 4
    1e9a:	ed 91       	ld	r30, X+
    1e9c:	fc 91       	ld	r31, X
    1e9e:	15 97       	sbiw	r26, 0x05	; 5
    1ea0:	30 97       	sbiw	r30, 0x00	; 0
    1ea2:	c1 f7       	brne	.-16     	; 0x1e94 <sync+0x26>
    1ea4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <current>
    1ea8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <current+0x1>
    1eac:	a2 17       	cp	r26, r18
    1eae:	b3 07       	cpc	r27, r19
    1eb0:	11 f0       	breq	.+4      	; 0x1eb6 <sync+0x48>
    1eb2:	11 11       	cpse	r17, r1
    1eb4:	07 c0       	rjmp	.+14     	; 0x1ec4 <sync+0x56>
    1eb6:	11 23       	and	r17, r17
    1eb8:	09 f4       	brne	.+2      	; 0x1ebc <sync+0x4e>
    1eba:	4a c0       	rjmp	.+148    	; 0x1f50 <sync+0xe2>
    1ebc:	78 94       	sei
    1ebe:	8f ef       	ldi	r24, 0xFF	; 255
    1ec0:	9f ef       	ldi	r25, 0xFF	; 255
    1ec2:	4e c0       	rjmp	.+156    	; 0x1f60 <sync+0xf2>
    1ec4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ec6:	9b 81       	ldd	r25, Y+3	; 0x03
    1ec8:	00 97       	sbiw	r24, 0x00	; 0
    1eca:	19 f0       	breq	.+6      	; 0x1ed2 <sync+0x64>
    1ecc:	fc 01       	movw	r30, r24
    1ece:	15 82       	std	Z+5, r1	; 0x05
    1ed0:	14 82       	std	Z+4, r1	; 0x04
    1ed2:	3b 83       	std	Y+3, r19	; 0x03
    1ed4:	2a 83       	std	Y+2, r18	; 0x02
    1ed6:	f9 01       	movw	r30, r18
    1ed8:	d5 83       	std	Z+5, r29	; 0x05
    1eda:	c4 83       	std	Z+4, r28	; 0x04
    1edc:	cd 01       	movw	r24, r26
    1ede:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <dispatch>
    1ee2:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <current>
    1ee6:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <current+0x1>
    1eea:	82 81       	ldd	r24, Z+2	; 0x02
    1eec:	93 81       	ldd	r25, Z+3	; 0x03
    1eee:	89 2b       	or	r24, r25
    1ef0:	31 f4       	brne	.+12     	; 0x1efe <sync+0x90>
    1ef2:	11 23       	and	r17, r17
    1ef4:	81 f1       	breq	.+96     	; 0x1f56 <sync+0xe8>
    1ef6:	78 94       	sei
    1ef8:	80 e0       	ldi	r24, 0x00	; 0
    1efa:	90 e0       	ldi	r25, 0x00	; 0
    1efc:	31 c0       	rjmp	.+98     	; 0x1f60 <sync+0xf2>
    1efe:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <current>
    1f02:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <current+0x1>
    1f06:	99 83       	std	Y+1, r25	; 0x01
    1f08:	88 83       	st	Y, r24
    1f0a:	11 23       	and	r17, r17
    1f0c:	29 f0       	breq	.+10     	; 0x1f18 <sync+0xaa>
    1f0e:	8a 81       	ldd	r24, Y+2	; 0x02
    1f10:	9b 81       	ldd	r25, Y+3	; 0x03
    1f12:	01 97       	sbiw	r24, 0x01	; 1
    1f14:	09 f0       	breq	.+2      	; 0x1f18 <sync+0xaa>
    1f16:	78 94       	sei
    1f18:	b6 01       	movw	r22, r12
    1f1a:	ce 01       	movw	r24, r28
    1f1c:	f7 01       	movw	r30, r14
    1f1e:	09 95       	icall
    1f20:	f8 2e       	mov	r15, r24
    1f22:	09 2f       	mov	r16, r25
    1f24:	8f b7       	in	r24, 0x3f	; 63
    1f26:	f8 94       	cli
    1f28:	19 82       	std	Y+1, r1	; 0x01
    1f2a:	18 82       	st	Y, r1
    1f2c:	8a 81       	ldd	r24, Y+2	; 0x02
    1f2e:	9b 81       	ldd	r25, Y+3	; 0x03
    1f30:	82 30       	cpi	r24, 0x02	; 2
    1f32:	91 05       	cpc	r25, r1
    1f34:	38 f0       	brcs	.+14     	; 0x1f44 <sync+0xd6>
    1f36:	1b 82       	std	Y+3, r1	; 0x03
    1f38:	1a 82       	std	Y+2, r1	; 0x02
    1f3a:	fc 01       	movw	r30, r24
    1f3c:	15 82       	std	Z+5, r1	; 0x05
    1f3e:	14 82       	std	Z+4, r1	; 0x04
    1f40:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <dispatch>
    1f44:	11 23       	and	r17, r17
    1f46:	51 f0       	breq	.+20     	; 0x1f5c <sync+0xee>
    1f48:	78 94       	sei
    1f4a:	8f 2d       	mov	r24, r15
    1f4c:	90 2f       	mov	r25, r16
    1f4e:	08 c0       	rjmp	.+16     	; 0x1f60 <sync+0xf2>
    1f50:	8f ef       	ldi	r24, 0xFF	; 255
    1f52:	9f ef       	ldi	r25, 0xFF	; 255
    1f54:	05 c0       	rjmp	.+10     	; 0x1f60 <sync+0xf2>
    1f56:	80 e0       	ldi	r24, 0x00	; 0
    1f58:	90 e0       	ldi	r25, 0x00	; 0
    1f5a:	02 c0       	rjmp	.+4      	; 0x1f60 <sync+0xf2>
    1f5c:	8f 2d       	mov	r24, r15
    1f5e:	90 2f       	mov	r25, r16
    1f60:	df 91       	pop	r29
    1f62:	cf 91       	pop	r28
    1f64:	1f 91       	pop	r17
    1f66:	0f 91       	pop	r16
    1f68:	ff 90       	pop	r15
    1f6a:	ef 90       	pop	r14
    1f6c:	df 90       	pop	r13
    1f6e:	cf 90       	pop	r12
    1f70:	08 95       	ret

00001f72 <run>:
    1f72:	00 91 02 01 	lds	r16, 0x0102	; 0x800102 <current>
    1f76:	10 91 03 01 	lds	r17, 0x0103	; 0x800103 <current+0x1>
    1f7a:	82 e4       	ldi	r24, 0x42	; 66
    1f7c:	91 e0       	ldi	r25, 0x01	; 1
    1f7e:	0e 94 fe 04 	call	0x9fc	; 0x9fc <dequeue>
    1f82:	ec 01       	movw	r28, r24
    1f84:	f8 01       	movw	r30, r16
    1f86:	93 83       	std	Z+3, r25	; 0x03
    1f88:	82 83       	std	Z+2, r24	; 0x02
    1f8a:	78 94       	sei
    1f8c:	6c 85       	ldd	r22, Y+12	; 0x0c
    1f8e:	7d 85       	ldd	r23, Y+13	; 0x0d
    1f90:	4e 85       	ldd	r20, Y+14	; 0x0e
    1f92:	5f 85       	ldd	r21, Y+15	; 0x0f
    1f94:	8a 85       	ldd	r24, Y+10	; 0x0a
    1f96:	9b 85       	ldd	r25, Y+11	; 0x0b
    1f98:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <sync>
    1f9c:	8f b7       	in	r24, 0x3f	; 63
    1f9e:	f8 94       	cli
    1fa0:	68 e0       	ldi	r22, 0x08	; 8
    1fa2:	71 e0       	ldi	r23, 0x01	; 1
    1fa4:	ce 01       	movw	r24, r28
    1fa6:	0e 94 15 05 	call	0xa2a	; 0xa2a <insert>
    1faa:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
    1fae:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
    1fb2:	01 90       	ld	r0, Z+
    1fb4:	f0 81       	ld	r31, Z
    1fb6:	e0 2d       	mov	r30, r0
    1fb8:	c2 81       	ldd	r28, Z+2	; 0x02
    1fba:	d3 81       	ldd	r29, Z+3	; 0x03
    1fbc:	e0 91 42 01 	lds	r30, 0x0142	; 0x800142 <msgQ>
    1fc0:	f0 91 43 01 	lds	r31, 0x0143	; 0x800143 <msgQ+0x1>
    1fc4:	30 97       	sbiw	r30, 0x00	; 0
    1fc6:	a1 f0       	breq	.+40     	; 0x1ff0 <run+0x7e>
    1fc8:	20 97       	sbiw	r28, 0x00	; 0
    1fca:	99 f2       	breq	.-90     	; 0x1f72 <run>
    1fcc:	86 81       	ldd	r24, Z+6	; 0x06
    1fce:	97 81       	ldd	r25, Z+7	; 0x07
    1fd0:	a0 85       	ldd	r26, Z+8	; 0x08
    1fd2:	b1 85       	ldd	r27, Z+9	; 0x09
    1fd4:	4e 81       	ldd	r20, Y+6	; 0x06
    1fd6:	5f 81       	ldd	r21, Y+7	; 0x07
    1fd8:	68 85       	ldd	r22, Y+8	; 0x08
    1fda:	79 85       	ldd	r23, Y+9	; 0x09
    1fdc:	84 1b       	sub	r24, r20
    1fde:	95 0b       	sbc	r25, r21
    1fe0:	a6 0b       	sbc	r26, r22
    1fe2:	b7 0b       	sbc	r27, r23
    1fe4:	18 16       	cp	r1, r24
    1fe6:	19 06       	cpc	r1, r25
    1fe8:	1a 06       	cpc	r1, r26
    1fea:	1b 06       	cpc	r1, r27
    1fec:	0c f0       	brlt	.+2      	; 0x1ff0 <run+0x7e>
    1fee:	c1 cf       	rjmp	.-126    	; 0x1f72 <run>
    1ff0:	84 e0       	ldi	r24, 0x04	; 4
    1ff2:	91 e0       	ldi	r25, 0x01	; 1
    1ff4:	0e 94 29 05 	call	0xa52	; 0xa52 <pop>
    1ff8:	66 e0       	ldi	r22, 0x06	; 6
    1ffa:	71 e0       	ldi	r23, 0x01	; 1
    1ffc:	0e 94 1f 05 	call	0xa3e	; 0xa3e <push>
    2000:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <activeStack>
    2004:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <activeStack+0x1>
    2008:	02 c0       	rjmp	.+4      	; 0x200e <run+0x9c>
    200a:	a0 81       	ld	r26, Z
    200c:	b1 81       	ldd	r27, Z+1	; 0x01
    200e:	14 96       	adiw	r26, 0x04	; 4
    2010:	ed 91       	ld	r30, X+
    2012:	fc 91       	ld	r31, X
    2014:	15 97       	sbiw	r26, 0x05	; 5
    2016:	30 97       	sbiw	r30, 0x00	; 0
    2018:	c1 f7       	brne	.-16     	; 0x200a <run+0x98>
    201a:	cd 01       	movw	r24, r26
    201c:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <dispatch>
    2020:	a8 cf       	rjmp	.-176    	; 0x1f72 <run>

00002022 <install>:
    2022:	fc 01       	movw	r30, r24
    2024:	42 31       	cpi	r20, 0x12	; 18
    2026:	b8 f4       	brcc	.+46     	; 0x2056 <install+0x34>
    2028:	9f b7       	in	r25, 0x3f	; 63
    202a:	90 78       	andi	r25, 0x80	; 128
    202c:	f8 94       	cli
    202e:	50 e0       	ldi	r21, 0x00	; 0
    2030:	44 0f       	add	r20, r20
    2032:	55 1f       	adc	r21, r21
    2034:	da 01       	movw	r26, r20
    2036:	a8 5b       	subi	r26, 0xB8	; 184
    2038:	be 4f       	sbci	r27, 0xFE	; 254
    203a:	ed 93       	st	X+, r30
    203c:	fc 93       	st	X, r31
    203e:	da 01       	movw	r26, r20
    2040:	a0 52       	subi	r26, 0x20	; 32
    2042:	be 4f       	sbci	r27, 0xFE	; 254
    2044:	6d 93       	st	X+, r22
    2046:	7c 93       	st	X, r23
    2048:	21 e0       	ldi	r18, 0x01	; 1
    204a:	30 e0       	ldi	r19, 0x00	; 0
    204c:	33 83       	std	Z+3, r19	; 0x03
    204e:	22 83       	std	Z+2, r18	; 0x02
    2050:	99 23       	and	r25, r25
    2052:	09 f0       	breq	.+2      	; 0x2056 <install+0x34>
    2054:	78 94       	sei
    2056:	08 95       	ret

00002058 <tinytimber>:
    2058:	8c 01       	movw	r16, r24
    205a:	7b 01       	movw	r14, r22
    205c:	6a 01       	movw	r12, r20
    205e:	8f b7       	in	r24, 0x3f	; 63
    2060:	f8 94       	cli
    2062:	0e 94 dd 03 	call	0x7ba	; 0x7ba <initialize>
    2066:	78 94       	sei
    2068:	e1 14       	cp	r14, r1
    206a:	f1 04       	cpc	r15, r1
    206c:	41 f0       	breq	.+16     	; 0x207e <tinytimber+0x26>
    206e:	20 e0       	ldi	r18, 0x00	; 0
    2070:	30 e0       	ldi	r19, 0x00	; 0
    2072:	a9 01       	movw	r20, r18
    2074:	60 e0       	ldi	r22, 0x00	; 0
    2076:	70 e0       	ldi	r23, 0x00	; 0
    2078:	cb 01       	movw	r24, r22
    207a:	0e 94 2e 0e 	call	0x1c5c	; 0x1c5c <async>
    207e:	8f b7       	in	r24, 0x3f	; 63
    2080:	f8 94       	cli
    2082:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <idle>

00002086 <__divmodsi4>:
    2086:	05 2e       	mov	r0, r21
    2088:	97 fb       	bst	r25, 7
    208a:	1e f4       	brtc	.+6      	; 0x2092 <__divmodsi4+0xc>
    208c:	00 94       	com	r0
    208e:	0e 94 5a 10 	call	0x20b4	; 0x20b4 <__negsi2>
    2092:	57 fd       	sbrc	r21, 7
    2094:	07 d0       	rcall	.+14     	; 0x20a4 <__divmodsi4_neg2>
    2096:	0e 94 62 10 	call	0x20c4	; 0x20c4 <__udivmodsi4>
    209a:	07 fc       	sbrc	r0, 7
    209c:	03 d0       	rcall	.+6      	; 0x20a4 <__divmodsi4_neg2>
    209e:	4e f4       	brtc	.+18     	; 0x20b2 <__divmodsi4_exit>
    20a0:	0c 94 5a 10 	jmp	0x20b4	; 0x20b4 <__negsi2>

000020a4 <__divmodsi4_neg2>:
    20a4:	50 95       	com	r21
    20a6:	40 95       	com	r20
    20a8:	30 95       	com	r19
    20aa:	21 95       	neg	r18
    20ac:	3f 4f       	sbci	r19, 0xFF	; 255
    20ae:	4f 4f       	sbci	r20, 0xFF	; 255
    20b0:	5f 4f       	sbci	r21, 0xFF	; 255

000020b2 <__divmodsi4_exit>:
    20b2:	08 95       	ret

000020b4 <__negsi2>:
    20b4:	90 95       	com	r25
    20b6:	80 95       	com	r24
    20b8:	70 95       	com	r23
    20ba:	61 95       	neg	r22
    20bc:	7f 4f       	sbci	r23, 0xFF	; 255
    20be:	8f 4f       	sbci	r24, 0xFF	; 255
    20c0:	9f 4f       	sbci	r25, 0xFF	; 255
    20c2:	08 95       	ret

000020c4 <__udivmodsi4>:
    20c4:	a1 e2       	ldi	r26, 0x21	; 33
    20c6:	1a 2e       	mov	r1, r26
    20c8:	aa 1b       	sub	r26, r26
    20ca:	bb 1b       	sub	r27, r27
    20cc:	fd 01       	movw	r30, r26
    20ce:	0d c0       	rjmp	.+26     	; 0x20ea <__udivmodsi4_ep>

000020d0 <__udivmodsi4_loop>:
    20d0:	aa 1f       	adc	r26, r26
    20d2:	bb 1f       	adc	r27, r27
    20d4:	ee 1f       	adc	r30, r30
    20d6:	ff 1f       	adc	r31, r31
    20d8:	a2 17       	cp	r26, r18
    20da:	b3 07       	cpc	r27, r19
    20dc:	e4 07       	cpc	r30, r20
    20de:	f5 07       	cpc	r31, r21
    20e0:	20 f0       	brcs	.+8      	; 0x20ea <__udivmodsi4_ep>
    20e2:	a2 1b       	sub	r26, r18
    20e4:	b3 0b       	sbc	r27, r19
    20e6:	e4 0b       	sbc	r30, r20
    20e8:	f5 0b       	sbc	r31, r21

000020ea <__udivmodsi4_ep>:
    20ea:	66 1f       	adc	r22, r22
    20ec:	77 1f       	adc	r23, r23
    20ee:	88 1f       	adc	r24, r24
    20f0:	99 1f       	adc	r25, r25
    20f2:	1a 94       	dec	r1
    20f4:	69 f7       	brne	.-38     	; 0x20d0 <__udivmodsi4_loop>
    20f6:	60 95       	com	r22
    20f8:	70 95       	com	r23
    20fa:	80 95       	com	r24
    20fc:	90 95       	com	r25
    20fe:	9b 01       	movw	r18, r22
    2100:	ac 01       	movw	r20, r24
    2102:	bd 01       	movw	r22, r26
    2104:	cf 01       	movw	r24, r30
    2106:	08 95       	ret

00002108 <setjmp>:
    2108:	dc 01       	movw	r26, r24
    210a:	2d 92       	st	X+, r2
    210c:	3d 92       	st	X+, r3
    210e:	4d 92       	st	X+, r4
    2110:	5d 92       	st	X+, r5
    2112:	6d 92       	st	X+, r6
    2114:	7d 92       	st	X+, r7
    2116:	8d 92       	st	X+, r8
    2118:	9d 92       	st	X+, r9
    211a:	ad 92       	st	X+, r10
    211c:	bd 92       	st	X+, r11
    211e:	cd 92       	st	X+, r12
    2120:	dd 92       	st	X+, r13
    2122:	ed 92       	st	X+, r14
    2124:	fd 92       	st	X+, r15
    2126:	0d 93       	st	X+, r16
    2128:	1d 93       	st	X+, r17
    212a:	cd 93       	st	X+, r28
    212c:	dd 93       	st	X+, r29
    212e:	ff 91       	pop	r31
    2130:	ef 91       	pop	r30
    2132:	8d b7       	in	r24, 0x3d	; 61
    2134:	8d 93       	st	X+, r24
    2136:	8e b7       	in	r24, 0x3e	; 62
    2138:	8d 93       	st	X+, r24
    213a:	8f b7       	in	r24, 0x3f	; 63
    213c:	8d 93       	st	X+, r24
    213e:	ed 93       	st	X+, r30
    2140:	fd 93       	st	X+, r31
    2142:	88 27       	eor	r24, r24
    2144:	99 27       	eor	r25, r25
    2146:	09 94       	ijmp

00002148 <longjmp>:
    2148:	dc 01       	movw	r26, r24
    214a:	cb 01       	movw	r24, r22
    214c:	81 30       	cpi	r24, 0x01	; 1
    214e:	91 05       	cpc	r25, r1
    2150:	81 1d       	adc	r24, r1
    2152:	2d 90       	ld	r2, X+
    2154:	3d 90       	ld	r3, X+
    2156:	4d 90       	ld	r4, X+
    2158:	5d 90       	ld	r5, X+
    215a:	6d 90       	ld	r6, X+
    215c:	7d 90       	ld	r7, X+
    215e:	8d 90       	ld	r8, X+
    2160:	9d 90       	ld	r9, X+
    2162:	ad 90       	ld	r10, X+
    2164:	bd 90       	ld	r11, X+
    2166:	cd 90       	ld	r12, X+
    2168:	dd 90       	ld	r13, X+
    216a:	ed 90       	ld	r14, X+
    216c:	fd 90       	ld	r15, X+
    216e:	0d 91       	ld	r16, X+
    2170:	1d 91       	ld	r17, X+
    2172:	cd 91       	ld	r28, X+
    2174:	dd 91       	ld	r29, X+
    2176:	ed 91       	ld	r30, X+
    2178:	fd 91       	ld	r31, X+
    217a:	0d 90       	ld	r0, X+
    217c:	f8 94       	cli
    217e:	fe bf       	out	0x3e, r31	; 62
    2180:	0f be       	out	0x3f, r0	; 63
    2182:	ed bf       	out	0x3d, r30	; 61
    2184:	ed 91       	ld	r30, X+
    2186:	fd 91       	ld	r31, X+
    2188:	09 94       	ijmp

0000218a <_exit>:
    218a:	f8 94       	cli

0000218c <__stop_program>:
    218c:	ff cf       	rjmp	.-2      	; 0x218c <__stop_program>
