
D0003E-lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  00001706  0000179a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001706  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  00800132  00800132  000017cc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000017cc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000017fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  0000183c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e02  00000000  00000000  00001a04  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d15  00000000  00000000  00003806  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000123d  00000000  00000000  0000451b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000acc  00000000  00000000  00005758  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000089d  00000000  00000000  00006224  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000022ba  00000000  00000000  00006ac1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c8  00000000  00000000  00008d7b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 3f 02 	jmp	0x47e	; 0x47e <__vector_1>
       8:	0c 94 ae 02 	jmp	0x55c	; 0x55c <__vector_2>
       c:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__vector_3>
      10:	0c 94 8c 03 	jmp	0x718	; 0x718 <__vector_4>
      14:	0c 94 fb 03 	jmp	0x7f6	; 0x7f6 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 5f 0a 	jmp	0x14be	; 0x14be <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 0d 0a 	jmp	0x141a	; 0x141a <__vector_9>
      28:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <__vector_10>
      2c:	0c 94 d9 04 	jmp	0x9b2	; 0x9b2 <__vector_11>
      30:	0c 94 48 05 	jmp	0xa90	; 0xa90 <__vector_12>
      34:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__vector_13>
      38:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <__vector_14>
      3c:	0c 94 95 06 	jmp	0xd2a	; 0xd2a <__vector_15>
      40:	0c 94 04 07 	jmp	0xe08	; 0xe08 <__vector_16>
      44:	0c 94 73 07 	jmp	0xee6	; 0xee6 <__vector_17>
      48:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <__vector_18>
      4c:	0c 94 51 08 	jmp	0x10a2	; 0x10a2 <__vector_19>
      50:	0c 94 c0 08 	jmp	0x1180	; 0x1180 <__vector_20>
      54:	0c 94 2f 09 	jmp	0x125e	; 0x125e <__vector_21>
      58:	0c 94 9e 09 	jmp	0x133c	; 0x133c <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e6 e0       	ldi	r30, 0x06	; 6
      70:	f7 e1       	ldi	r31, 0x17	; 23
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a2 33       	cpi	r26, 0x32	; 50
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a2 e3       	ldi	r26, 0x32	; 50
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a5 38       	cpi	r26, 0x85	; 133
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 89 01 	call	0x312	; 0x312 <main>
      92:	0c 94 81 0b 	jmp	0x1702	; 0x1702 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <Init>:
 */ 
#include <avr/io.h>
#include "init.h"

void Init(void) {
	CLKPR = 0x80;    // Fix clock speed
      9a:	e1 e6       	ldi	r30, 0x61	; 97
      9c:	f0 e0       	ldi	r31, 0x00	; 0
      9e:	80 e8       	ldi	r24, 0x80	; 128
      a0:	80 83       	st	Z, r24
	CLKPR = 0x00;
      a2:	10 82       	st	Z, r1
	
	// LCD init
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
      a4:	9f e0       	ldi	r25, 0x0F	; 15
      a6:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	//       (                      Voltage                              )
	LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
      aa:	97 eb       	ldi	r25, 0xB7	; 183
      ac:	90 93 e5 00 	sts	0x00E5, r25	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	//       (asynch ext)   (        duty cycle           )   (                  segments                 )
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
      b0:	97 e0       	ldi	r25, 0x07	; 7
      b2:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	//       (            Delen med D                    )
	LCDCRA = (1 << LCDAB) | (1 << LCDEN);
      b6:	90 ec       	ldi	r25, 0xC0	; 192
      b8:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	//       (low power )   (enable lcd)
	
	// Stuffs for the joystick and interrupt
	PORTB = SET(PB7) | SET(PB6) | SET(PB4);									// Set corresponding Output pin
      bc:	90 ed       	ldi	r25, 0xD0	; 208
      be:	95 b9       	out	0x05, r25	; 5
	DDRB = (1 << DDB7);									// Unsure
      c0:	84 b9       	out	0x04, r24	; 4
	PORTE = 0b00010000;
      c2:	80 e1       	ldi	r24, 0x10	; 16
      c4:	8e b9       	out	0x0e, r24	; 14
	PCMSK1 |= (1 << PCINT15);							// Pin change interrupt 1
      c6:	ec e6       	ldi	r30, 0x6C	; 108
      c8:	f0 e0       	ldi	r31, 0x00	; 0
      ca:	80 81       	ld	r24, Z
      cc:	80 68       	ori	r24, 0x80	; 128
      ce:	80 83       	st	Z, r24
	EIMSK |= (1 << PCIE1);								// Enalbe pin change on I/O pin 7
      d0:	8d b3       	in	r24, 0x1d	; 29
      d2:	80 68       	ori	r24, 0x80	; 128
      d4:	8d bb       	out	0x1d, r24	; 29
      d6:	08 95       	ret

000000d8 <displayChar>:
		isStalled = 0;
	}
}

//Help function for writeChar (fills array with elements that match character)
void displayChar(char c, bool odd, volatile uint8_t *address) {
      d8:	cf 93       	push	r28
      da:	df 93       	push	r29
      dc:	00 d0       	rcall	.+0      	; 0xde <displayChar+0x6>
      de:	00 d0       	rcall	.+0      	; 0xe0 <displayChar+0x8>
      e0:	cd b7       	in	r28, 0x3d	; 61
      e2:	de b7       	in	r29, 0x3e	; 62
      e4:	da 01       	movw	r26, r20
	uint8_t array[4];
	if (c < '0' || c > '9') {	// Invalid character
      e6:	90 ed       	ldi	r25, 0xD0	; 208
      e8:	98 0f       	add	r25, r24
      ea:	9a 30       	cpi	r25, 0x0A	; 10
      ec:	80 f4       	brcc	.+32     	; 0x10e <displayChar+0x36>
      ee:	20 e0       	ldi	r18, 0x00	; 0
      f0:	30 e0       	ldi	r19, 0x00	; 0
      f2:	28 c0       	rjmp	.+80     	; 0x144 <displayChar+0x6c>
		for (int i = 0; i < 4; i++) {
			array[i] = characters[10][i];
      f4:	fc 01       	movw	r30, r24
      f6:	ea 5f       	subi	r30, 0xFA	; 250
      f8:	fe 4f       	sbci	r31, 0xFE	; 254
      fa:	20 a5       	ldd	r18, Z+40	; 0x28
      fc:	e1 e0       	ldi	r30, 0x01	; 1
      fe:	f0 e0       	ldi	r31, 0x00	; 0
     100:	ec 0f       	add	r30, r28
     102:	fd 1f       	adc	r31, r29
     104:	e8 0f       	add	r30, r24
     106:	f9 1f       	adc	r31, r25
     108:	20 83       	st	Z, r18

//Help function for writeChar (fills array with elements that match character)
void displayChar(char c, bool odd, volatile uint8_t *address) {
	uint8_t array[4];
	if (c < '0' || c > '9') {	// Invalid character
		for (int i = 0; i < 4; i++) {
     10a:	01 96       	adiw	r24, 0x01	; 1
     10c:	02 c0       	rjmp	.+4      	; 0x112 <displayChar+0x3a>
     10e:	80 e0       	ldi	r24, 0x00	; 0
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	91 05       	cpc	r25, r1
     116:	74 f3       	brlt	.-36     	; 0xf4 <displayChar+0x1c>
     118:	18 c0       	rjmp	.+48     	; 0x14a <displayChar+0x72>
			array[i] = characters[10][i];
		}
	}
	else {						// Valid character
		for (int i = 0; i < 4; i++) {
			array[i] = characters[c-48][i];
     11a:	e8 2f       	mov	r30, r24
     11c:	f0 e0       	ldi	r31, 0x00	; 0
     11e:	f0 97       	sbiw	r30, 0x30	; 48
     120:	ee 0f       	add	r30, r30
     122:	ff 1f       	adc	r31, r31
     124:	ee 0f       	add	r30, r30
     126:	ff 1f       	adc	r31, r31
     128:	ea 5f       	subi	r30, 0xFA	; 250
     12a:	fe 4f       	sbci	r31, 0xFE	; 254
     12c:	e2 0f       	add	r30, r18
     12e:	f3 1f       	adc	r31, r19
     130:	90 81       	ld	r25, Z
     132:	e1 e0       	ldi	r30, 0x01	; 1
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	ec 0f       	add	r30, r28
     138:	fd 1f       	adc	r31, r29
     13a:	e2 0f       	add	r30, r18
     13c:	f3 1f       	adc	r31, r19
     13e:	90 83       	st	Z, r25
		for (int i = 0; i < 4; i++) {
			array[i] = characters[10][i];
		}
	}
	else {						// Valid character
		for (int i = 0; i < 4; i++) {
     140:	2f 5f       	subi	r18, 0xFF	; 255
     142:	3f 4f       	sbci	r19, 0xFF	; 255
     144:	24 30       	cpi	r18, 0x04	; 4
     146:	31 05       	cpc	r19, r1
     148:	44 f3       	brlt	.-48     	; 0x11a <displayChar+0x42>
			array[i] = characters[c-48][i];
		}
	}
	if (odd) {					// If odd digit, shifts in order to set correct digit
     14a:	61 11       	cpse	r22, r1
     14c:	0d c0       	rjmp	.+26     	; 0x168 <displayChar+0x90>
     14e:	11 c0       	rjmp	.+34     	; 0x172 <displayChar+0x9a>
		for (int i = 0; i < 4; i++) {
			array[i] <<= 4;
     150:	e1 e0       	ldi	r30, 0x01	; 1
     152:	f0 e0       	ldi	r31, 0x00	; 0
     154:	ec 0f       	add	r30, r28
     156:	fd 1f       	adc	r31, r29
     158:	e8 0f       	add	r30, r24
     15a:	f9 1f       	adc	r31, r25
     15c:	20 81       	ld	r18, Z
     15e:	22 95       	swap	r18
     160:	20 7f       	andi	r18, 0xF0	; 240
     162:	20 83       	st	Z, r18
		for (int i = 0; i < 4; i++) {
			array[i] = characters[c-48][i];
		}
	}
	if (odd) {					// If odd digit, shifts in order to set correct digit
		for (int i = 0; i < 4; i++) {
     164:	01 96       	adiw	r24, 0x01	; 1
     166:	02 c0       	rjmp	.+4      	; 0x16c <displayChar+0x94>
     168:	80 e0       	ldi	r24, 0x00	; 0
     16a:	90 e0       	ldi	r25, 0x00	; 0
     16c:	84 30       	cpi	r24, 0x04	; 4
     16e:	91 05       	cpc	r25, r1
     170:	7c f3       	brlt	.-34     	; 0x150 <displayChar+0x78>
			array[i] <<= 4;
		}
	}							// This part sets the character in needed registers
	*address |= array[0];		// (K, -, -, A)
     172:	9c 91       	ld	r25, X
     174:	89 81       	ldd	r24, Y+1	; 0x01
     176:	89 2b       	or	r24, r25
     178:	8c 93       	st	X, r24
	*(address+5) |= array[1];	// (J, F, H, B)
     17a:	15 96       	adiw	r26, 0x05	; 5
     17c:	9c 91       	ld	r25, X
     17e:	15 97       	sbiw	r26, 0x05	; 5
     180:	8a 81       	ldd	r24, Y+2	; 0x02
     182:	89 2b       	or	r24, r25
     184:	15 96       	adiw	r26, 0x05	; 5
     186:	8c 93       	st	X, r24
     188:	15 97       	sbiw	r26, 0x05	; 5
	*(address+10) |= array[2];	// (L, E, G, C)
     18a:	1a 96       	adiw	r26, 0x0a	; 10
     18c:	9c 91       	ld	r25, X
     18e:	1a 97       	sbiw	r26, 0x0a	; 10
     190:	8b 81       	ldd	r24, Y+3	; 0x03
     192:	89 2b       	or	r24, r25
     194:	1a 96       	adiw	r26, 0x0a	; 10
     196:	8c 93       	st	X, r24
     198:	1a 97       	sbiw	r26, 0x0a	; 10
	*(address+15) |= array[3];	// (M, P, N, D)
     19a:	1f 96       	adiw	r26, 0x0f	; 15
     19c:	9c 91       	ld	r25, X
     19e:	1f 97       	sbiw	r26, 0x0f	; 15
     1a0:	8c 81       	ldd	r24, Y+4	; 0x04
     1a2:	89 2b       	or	r24, r25
     1a4:	1f 96       	adiw	r26, 0x0f	; 15
     1a6:	8c 93       	st	X, r24
}
     1a8:	0f 90       	pop	r0
     1aa:	0f 90       	pop	r0
     1ac:	0f 90       	pop	r0
     1ae:	0f 90       	pop	r0
     1b0:	df 91       	pop	r29
     1b2:	cf 91       	pop	r28
     1b4:	08 95       	ret

000001b6 <removeOldChar>:


// Removes previous character at given location
void removeOldChar(bool odd, volatile uint8_t *address) {
	// AND:s 0 on the parts that need to be reset
	if (odd) {
     1b6:	88 23       	and	r24, r24
     1b8:	91 f0       	breq	.+36     	; 0x1de <removeOldChar+0x28>
		*address &= 0b00001001;
     1ba:	fb 01       	movw	r30, r22
     1bc:	80 81       	ld	r24, Z
     1be:	89 70       	andi	r24, 0x09	; 9
     1c0:	80 83       	st	Z, r24
		for (int i = 5; i < 20; i += 5) {
     1c2:	85 e0       	ldi	r24, 0x05	; 5
     1c4:	90 e0       	ldi	r25, 0x00	; 0
     1c6:	07 c0       	rjmp	.+14     	; 0x1d6 <removeOldChar+0x20>
			*(address + i) &= 0b00001111;
     1c8:	fb 01       	movw	r30, r22
     1ca:	e8 0f       	add	r30, r24
     1cc:	f9 1f       	adc	r31, r25
     1ce:	20 81       	ld	r18, Z
     1d0:	2f 70       	andi	r18, 0x0F	; 15
     1d2:	20 83       	st	Z, r18
// Removes previous character at given location
void removeOldChar(bool odd, volatile uint8_t *address) {
	// AND:s 0 on the parts that need to be reset
	if (odd) {
		*address &= 0b00001001;
		for (int i = 5; i < 20; i += 5) {
     1d4:	05 96       	adiw	r24, 0x05	; 5
     1d6:	84 31       	cpi	r24, 0x14	; 20
     1d8:	91 05       	cpc	r25, r1
     1da:	b4 f3       	brlt	.-20     	; 0x1c8 <removeOldChar+0x12>
     1dc:	08 95       	ret
			*(address + i) &= 0b00001111;
		}
	}
	else {
		*address &= 0b10010000;
     1de:	fb 01       	movw	r30, r22
     1e0:	80 81       	ld	r24, Z
     1e2:	80 79       	andi	r24, 0x90	; 144
     1e4:	80 83       	st	Z, r24
		for (int i = 5; i < 20; i += 5) {
     1e6:	85 e0       	ldi	r24, 0x05	; 5
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	07 c0       	rjmp	.+14     	; 0x1fa <removeOldChar+0x44>
			*(address + i) &= 0b11110000;
     1ec:	fb 01       	movw	r30, r22
     1ee:	e8 0f       	add	r30, r24
     1f0:	f9 1f       	adc	r31, r25
     1f2:	20 81       	ld	r18, Z
     1f4:	20 7f       	andi	r18, 0xF0	; 240
     1f6:	20 83       	st	Z, r18
			*(address + i) &= 0b00001111;
		}
	}
	else {
		*address &= 0b10010000;
		for (int i = 5; i < 20; i += 5) {
     1f8:	05 96       	adiw	r24, 0x05	; 5
     1fa:	84 31       	cpi	r24, 0x14	; 20
     1fc:	91 05       	cpc	r25, r1
     1fe:	b4 f3       	brlt	.-20     	; 0x1ec <removeOldChar+0x36>
     200:	08 95       	ret

00000202 <writeChar>:
		}
	}
}

// Takes character ('0' - '9') and a position (0 - 5 (NOT CHECKED)) and prints it on the screen
void writeChar(char c, int pos) {
     202:	1f 93       	push	r17
     204:	cf 93       	push	r28
     206:	df 93       	push	r29
     208:	18 2f       	mov	r17, r24
	volatile uint8_t *address = &LCDDR0;	// Create pointer to start register
	if (pos % 2 == 0) {	// Even
     20a:	60 fd       	sbrc	r22, 0
     20c:	14 c0       	rjmp	.+40     	; 0x236 <writeChar+0x34>
		address += pos/2;					// Change address according to position
     20e:	ab 01       	movw	r20, r22
     210:	77 23       	and	r23, r23
     212:	14 f4       	brge	.+4      	; 0x218 <writeChar+0x16>
     214:	4f 5f       	subi	r20, 0xFF	; 255
     216:	5f 4f       	sbci	r21, 0xFF	; 255
     218:	55 95       	asr	r21
     21a:	47 95       	ror	r20
     21c:	ea 01       	movw	r28, r20
     21e:	c4 51       	subi	r28, 0x14	; 20
     220:	df 4f       	sbci	r29, 0xFF	; 255
		removeOldChar(false, address);
     222:	be 01       	movw	r22, r28
     224:	80 e0       	ldi	r24, 0x00	; 0
     226:	0e 94 db 00 	call	0x1b6	; 0x1b6 <removeOldChar>
		displayChar(c, false, address);
     22a:	ae 01       	movw	r20, r28
     22c:	60 e0       	ldi	r22, 0x00	; 0
     22e:	81 2f       	mov	r24, r17
     230:	0e 94 6c 00 	call	0xd8	; 0xd8 <displayChar>
     234:	14 c0       	rjmp	.+40     	; 0x25e <writeChar+0x5c>
	}
	else {				// Odd
		address += (pos - 1) / 2;			// Change address according to position
     236:	61 50       	subi	r22, 0x01	; 1
     238:	71 09       	sbc	r23, r1
     23a:	ab 01       	movw	r20, r22
     23c:	12 f4       	brpl	.+4      	; 0x242 <writeChar+0x40>
     23e:	4f 5f       	subi	r20, 0xFF	; 255
     240:	5f 4f       	sbci	r21, 0xFF	; 255
     242:	55 95       	asr	r21
     244:	47 95       	ror	r20
     246:	ea 01       	movw	r28, r20
     248:	c4 51       	subi	r28, 0x14	; 20
     24a:	df 4f       	sbci	r29, 0xFF	; 255
		removeOldChar(true, address);
     24c:	be 01       	movw	r22, r28
     24e:	81 e0       	ldi	r24, 0x01	; 1
     250:	0e 94 db 00 	call	0x1b6	; 0x1b6 <removeOldChar>
		displayChar(c, true, address);
     254:	ae 01       	movw	r20, r28
     256:	61 e0       	ldi	r22, 0x01	; 1
     258:	81 2f       	mov	r24, r17
     25a:	0e 94 6c 00 	call	0xd8	; 0xd8 <displayChar>
	}
};
     25e:	df 91       	pop	r29
     260:	cf 91       	pop	r28
     262:	1f 91       	pop	r17
     264:	08 95       	ret

00000266 <printAt>:

// Displays last two digits of num in pos and pos+1
void printAt(long num, int pos) {
     266:	8f 92       	push	r8
     268:	9f 92       	push	r9
     26a:	af 92       	push	r10
     26c:	bf 92       	push	r11
     26e:	cf 92       	push	r12
     270:	df 92       	push	r13
     272:	ef 92       	push	r14
     274:	ff 92       	push	r15
     276:	cf 93       	push	r28
     278:	df 93       	push	r29
     27a:	4b 01       	movw	r8, r22
     27c:	5c 01       	movw	r10, r24
     27e:	ea 01       	movw	r28, r20
	int pp = pos;
	writeChar( (num % 100) / 10 + '0', pp);
     280:	24 e6       	ldi	r18, 0x64	; 100
     282:	30 e0       	ldi	r19, 0x00	; 0
     284:	40 e0       	ldi	r20, 0x00	; 0
     286:	50 e0       	ldi	r21, 0x00	; 0
     288:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <__divmodsi4>
     28c:	0f 2e       	mov	r0, r31
     28e:	fa e0       	ldi	r31, 0x0A	; 10
     290:	cf 2e       	mov	r12, r31
     292:	d1 2c       	mov	r13, r1
     294:	e1 2c       	mov	r14, r1
     296:	f1 2c       	mov	r15, r1
     298:	f0 2d       	mov	r31, r0
     29a:	a7 01       	movw	r20, r14
     29c:	96 01       	movw	r18, r12
     29e:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <__divmodsi4>
     2a2:	be 01       	movw	r22, r28
     2a4:	80 e3       	ldi	r24, 0x30	; 48
     2a6:	82 0f       	add	r24, r18
     2a8:	0e 94 01 01 	call	0x202	; 0x202 <writeChar>
	pp++;
     2ac:	21 96       	adiw	r28, 0x01	; 1
	writeChar( num % 10 + '0', pp);
     2ae:	c5 01       	movw	r24, r10
     2b0:	b4 01       	movw	r22, r8
     2b2:	a7 01       	movw	r20, r14
     2b4:	96 01       	movw	r18, r12
     2b6:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <__divmodsi4>
     2ba:	86 2f       	mov	r24, r22
     2bc:	be 01       	movw	r22, r28
     2be:	80 5d       	subi	r24, 0xD0	; 208
     2c0:	0e 94 01 01 	call	0x202	; 0x202 <writeChar>
}
     2c4:	df 91       	pop	r29
     2c6:	cf 91       	pop	r28
     2c8:	ff 90       	pop	r15
     2ca:	ef 90       	pop	r14
     2cc:	df 90       	pop	r13
     2ce:	cf 90       	pop	r12
     2d0:	bf 90       	pop	r11
     2d2:	af 90       	pop	r10
     2d4:	9f 90       	pop	r9
     2d6:	8f 90       	pop	r8
     2d8:	08 95       	ret

000002da <button>:

// Counts (and displays) amount of times you've pulled joystick down
void button(int pos) {
     2da:	ec 01       	movw	r28, r24
	writeChar('2', 0);
     2dc:	60 e0       	ldi	r22, 0x00	; 0
     2de:	70 e0       	ldi	r23, 0x00	; 0
     2e0:	82 e3       	ldi	r24, 0x32	; 50
     2e2:	0e 94 01 01 	call	0x202	; 0x202 <writeChar>
	long n = 0;
	while (true) {
		while ((PINB & (1 << PB7)) == 0b10000000);	// Exits when stick down
     2e6:	1f 99       	sbic	0x03, 7	; 3
     2e8:	fe cf       	rjmp	.-4      	; 0x2e6 <button+0xc>
		n++;
		printAt(n, pos);
     2ea:	ae 01       	movw	r20, r28
     2ec:	61 e0       	ldi	r22, 0x01	; 1
     2ee:	70 e0       	ldi	r23, 0x00	; 0
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	0e 94 33 01 	call	0x266	; 0x266 <printAt>
		while ((PINB & 0b10000000) != 0b10000000);	// Exits when stick normal
     2f8:	1f 9b       	sbis	0x03, 7	; 3
     2fa:	fe cf       	rjmp	.-4      	; 0x2f8 <button+0x1e>
		while ((PINB & (1 << PB6)) == 0b01000000 );
     2fc:	1e 99       	sbic	0x03, 6	; 3
     2fe:	fe cf       	rjmp	.-4      	; 0x2fc <button+0x22>
		n--;
		printAt(n, pos);
     300:	ae 01       	movw	r20, r28
     302:	60 e0       	ldi	r22, 0x00	; 0
     304:	70 e0       	ldi	r23, 0x00	; 0
     306:	cb 01       	movw	r24, r22
     308:	0e 94 33 01 	call	0x266	; 0x266 <printAt>
		while ((PINB & 0b01000000) != 0b01000000);	// Exits when stick normal
     30c:	1e 9b       	sbis	0x03, 6	; 3
     30e:	fe cf       	rjmp	.-4      	; 0x30c <button+0x32>
     310:	ea cf       	rjmp	.-44     	; 0x2e6 <button+0xc>

00000312 <main>:
	}
}

int main() {
	Init();
     312:	0e 94 4d 00 	call	0x9a	; 0x9a <Init>
	button(0);
     316:	80 e0       	ldi	r24, 0x00	; 0
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	0e 94 6d 01 	call	0x2da	; 0x2da <button>

0000031e <dispatch>:

static void idle(void) {
    schedule();
    ENABLE(1);
    while (1) {
        SLEEP();
     31e:	cf 93       	push	r28
     320:	df 93       	push	r29
     322:	00 d0       	rcall	.+0      	; 0x324 <dispatch+0x6>
     324:	cd b7       	in	r28, 0x3d	; 61
     326:	de b7       	in	r29, 0x3e	; 62
     328:	9a 83       	std	Y+2, r25	; 0x02
     32a:	89 83       	std	Y+1, r24	; 0x01
     32c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     330:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     334:	06 96       	adiw	r24, 0x06	; 6
     336:	0e 94 40 0b 	call	0x1680	; 0x1680 <setjmp>
     33a:	89 2b       	or	r24, r25
     33c:	59 f4       	brne	.+22     	; 0x354 <dispatch+0x36>
     33e:	89 81       	ldd	r24, Y+1	; 0x01
     340:	9a 81       	ldd	r25, Y+2	; 0x02
     342:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     346:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     34a:	61 e0       	ldi	r22, 0x01	; 1
     34c:	70 e0       	ldi	r23, 0x00	; 0
     34e:	06 96       	adiw	r24, 0x06	; 6
     350:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <longjmp>
     354:	0f 90       	pop	r0
     356:	0f 90       	pop	r0
     358:	df 91       	pop	r29
     35a:	cf 91       	pop	r28
     35c:	08 95       	ret

0000035e <enqueueByDeadline>:
     35e:	0f 93       	push	r16
     360:	1f 93       	push	r17
     362:	cf 93       	push	r28
     364:	df 93       	push	r29
     366:	dc 01       	movw	r26, r24
     368:	cb 01       	movw	r24, r22
     36a:	eb 01       	movw	r28, r22
     36c:	e8 81       	ld	r30, Y
     36e:	f9 81       	ldd	r31, Y+1	; 0x01
     370:	c0 e0       	ldi	r28, 0x00	; 0
     372:	d0 e0       	ldi	r29, 0x00	; 0
     374:	04 c0       	rjmp	.+8      	; 0x37e <enqueueByDeadline+0x20>
     376:	ef 01       	movw	r28, r30
     378:	01 90       	ld	r0, Z+
     37a:	f0 81       	ld	r31, Z
     37c:	e0 2d       	mov	r30, r0
     37e:	30 97       	sbiw	r30, 0x00	; 0
     380:	79 f0       	breq	.+30     	; 0x3a0 <enqueueByDeadline+0x42>
     382:	06 81       	ldd	r16, Z+6	; 0x06
     384:	17 81       	ldd	r17, Z+7	; 0x07
     386:	20 85       	ldd	r18, Z+8	; 0x08
     388:	31 85       	ldd	r19, Z+9	; 0x09
     38a:	16 96       	adiw	r26, 0x06	; 6
     38c:	4d 91       	ld	r20, X+
     38e:	5d 91       	ld	r21, X+
     390:	6d 91       	ld	r22, X+
     392:	7c 91       	ld	r23, X
     394:	19 97       	sbiw	r26, 0x09	; 9
     396:	40 17       	cp	r20, r16
     398:	51 07       	cpc	r21, r17
     39a:	62 07       	cpc	r22, r18
     39c:	73 07       	cpc	r23, r19
     39e:	5c f7       	brge	.-42     	; 0x376 <enqueueByDeadline+0x18>
     3a0:	11 96       	adiw	r26, 0x01	; 1
     3a2:	fc 93       	st	X, r31
     3a4:	ee 93       	st	-X, r30
     3a6:	20 97       	sbiw	r28, 0x00	; 0
     3a8:	21 f4       	brne	.+8      	; 0x3b2 <enqueueByDeadline+0x54>
     3aa:	fc 01       	movw	r30, r24
     3ac:	b1 83       	std	Z+1, r27	; 0x01
     3ae:	a0 83       	st	Z, r26
     3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <enqueueByDeadline+0x58>
     3b2:	b9 83       	std	Y+1, r27	; 0x01
     3b4:	a8 83       	st	Y, r26
     3b6:	df 91       	pop	r29
     3b8:	cf 91       	pop	r28
     3ba:	1f 91       	pop	r17
     3bc:	0f 91       	pop	r16
     3be:	08 95       	ret

000003c0 <dequeue>:
     3c0:	dc 01       	movw	r26, r24
     3c2:	ed 91       	ld	r30, X+
     3c4:	fc 91       	ld	r31, X
     3c6:	11 97       	sbiw	r26, 0x01	; 1
     3c8:	30 97       	sbiw	r30, 0x00	; 0
     3ca:	59 f4       	brne	.+22     	; 0x3e2 <dequeue+0x22>
     3cc:	8f ef       	ldi	r24, 0xFF	; 255
     3ce:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     3d2:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     3d6:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     3da:	81 e0       	ldi	r24, 0x01	; 1
     3dc:	83 bf       	out	0x33, r24	; 51
     3de:	88 95       	sleep
     3e0:	fc cf       	rjmp	.-8      	; 0x3da <dequeue+0x1a>
     3e2:	20 81       	ld	r18, Z
     3e4:	31 81       	ldd	r19, Z+1	; 0x01
     3e6:	2d 93       	st	X+, r18
     3e8:	3c 93       	st	X, r19
     3ea:	cf 01       	movw	r24, r30
     3ec:	08 95       	ret

000003ee <push>:
     3ee:	fb 01       	movw	r30, r22
     3f0:	20 81       	ld	r18, Z
     3f2:	31 81       	ldd	r19, Z+1	; 0x01
     3f4:	fc 01       	movw	r30, r24
     3f6:	31 83       	std	Z+1, r19	; 0x01
     3f8:	20 83       	st	Z, r18
     3fa:	fb 01       	movw	r30, r22
     3fc:	91 83       	std	Z+1, r25	; 0x01
     3fe:	80 83       	st	Z, r24
     400:	08 95       	ret

00000402 <pop>:
     402:	dc 01       	movw	r26, r24
     404:	ed 91       	ld	r30, X+
     406:	fc 91       	ld	r31, X
     408:	11 97       	sbiw	r26, 0x01	; 1
     40a:	20 81       	ld	r18, Z
     40c:	31 81       	ldd	r19, Z+1	; 0x01
     40e:	2d 93       	st	X+, r18
     410:	3c 93       	st	X, r19
     412:	cf 01       	movw	r24, r30
     414:	08 95       	ret

00000416 <schedule>:
     416:	cf 93       	push	r28
     418:	df 93       	push	r29
     41a:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     41e:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     422:	c2 81       	ldd	r28, Z+2	; 0x02
     424:	d3 81       	ldd	r29, Z+3	; 0x03
     426:	e0 91 3a 01 	lds	r30, 0x013A	; 0x80013a <msgQ>
     42a:	f0 91 3b 01 	lds	r31, 0x013B	; 0x80013b <msgQ+0x1>
     42e:	30 97       	sbiw	r30, 0x00	; 0
     430:	19 f1       	breq	.+70     	; 0x478 <schedule+0x62>
     432:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     436:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     43a:	89 2b       	or	r24, r25
     43c:	e9 f0       	breq	.+58     	; 0x478 <schedule+0x62>
     43e:	20 97       	sbiw	r28, 0x00	; 0
     440:	69 f0       	breq	.+26     	; 0x45c <schedule+0x46>
     442:	86 81       	ldd	r24, Z+6	; 0x06
     444:	97 81       	ldd	r25, Z+7	; 0x07
     446:	a0 85       	ldd	r26, Z+8	; 0x08
     448:	b1 85       	ldd	r27, Z+9	; 0x09
     44a:	4e 81       	ldd	r20, Y+6	; 0x06
     44c:	5f 81       	ldd	r21, Y+7	; 0x07
     44e:	68 85       	ldd	r22, Y+8	; 0x08
     450:	79 85       	ldd	r23, Y+9	; 0x09
     452:	84 1b       	sub	r24, r20
     454:	95 0b       	sbc	r25, r21
     456:	a6 0b       	sbc	r26, r22
     458:	b7 0b       	sbc	r27, r23
     45a:	72 f4       	brpl	.+28     	; 0x478 <schedule+0x62>
     45c:	84 e0       	ldi	r24, 0x04	; 4
     45e:	91 e0       	ldi	r25, 0x01	; 1
     460:	0e 94 01 02 	call	0x402	; 0x402 <pop>
     464:	62 e0       	ldi	r22, 0x02	; 2
     466:	71 e0       	ldi	r23, 0x01	; 1
     468:	0e 94 f7 01 	call	0x3ee	; 0x3ee <push>
     46c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     470:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     474:	0e 94 8f 01 	call	0x31e	; 0x31e <dispatch>
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	08 95       	ret

0000047e <__vector_1>:
     47e:	1f 92       	push	r1
     480:	0f 92       	push	r0
     482:	0f b6       	in	r0, 0x3f	; 63
     484:	0f 92       	push	r0
     486:	11 24       	eor	r1, r1
     488:	0f 93       	push	r16
     48a:	1f 93       	push	r17
     48c:	2f 93       	push	r18
     48e:	3f 93       	push	r19
     490:	4f 93       	push	r20
     492:	5f 93       	push	r21
     494:	6f 93       	push	r22
     496:	7f 93       	push	r23
     498:	8f 93       	push	r24
     49a:	9f 93       	push	r25
     49c:	af 93       	push	r26
     49e:	bf 93       	push	r27
     4a0:	ef 93       	push	r30
     4a2:	ff 93       	push	r31
     4a4:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     4a8:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
     4ac:	ac 01       	movw	r20, r24
     4ae:	09 2e       	mov	r0, r25
     4b0:	00 0c       	add	r0, r0
     4b2:	66 0b       	sbc	r22, r22
     4b4:	77 0b       	sbc	r23, r23
     4b6:	9a 01       	movw	r18, r20
     4b8:	11 27       	eor	r17, r17
     4ba:	00 27       	eor	r16, r16
     4bc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     4c0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     4c4:	60 e0       	ldi	r22, 0x00	; 0
     4c6:	70 e0       	ldi	r23, 0x00	; 0
     4c8:	40 2b       	or	r20, r16
     4ca:	51 2b       	or	r21, r17
     4cc:	62 2b       	or	r22, r18
     4ce:	73 2b       	or	r23, r19
     4d0:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
     4d4:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
     4d8:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
     4dc:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
     4e0:	b0 9b       	sbis	0x16, 0	; 22
     4e2:	1a c0       	rjmp	.+52     	; 0x518 <__stack+0x19>
     4e4:	01 96       	adiw	r24, 0x01	; 1
     4e6:	09 2e       	mov	r0, r25
     4e8:	00 0c       	add	r0, r0
     4ea:	aa 0b       	sbc	r26, r26
     4ec:	bb 0b       	sbc	r27, r27
     4ee:	bc 01       	movw	r22, r24
     4f0:	55 27       	eor	r21, r21
     4f2:	44 27       	eor	r20, r20
     4f4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     4f8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     4fc:	a0 e0       	ldi	r26, 0x00	; 0
     4fe:	b0 e0       	ldi	r27, 0x00	; 0
     500:	84 2b       	or	r24, r20
     502:	95 2b       	or	r25, r21
     504:	a6 2b       	or	r26, r22
     506:	b7 2b       	or	r27, r23
     508:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
     50c:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
     510:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
     514:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
     518:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable>
     51c:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x1>
     520:	30 97       	sbiw	r30, 0x00	; 0
     522:	39 f0       	breq	.+14     	; 0x532 <__stack+0x33>
     524:	60 e0       	ldi	r22, 0x00	; 0
     526:	70 e0       	ldi	r23, 0x00	; 0
     528:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable>
     52c:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x1>
     530:	09 95       	icall
     532:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
     536:	ff 91       	pop	r31
     538:	ef 91       	pop	r30
     53a:	bf 91       	pop	r27
     53c:	af 91       	pop	r26
     53e:	9f 91       	pop	r25
     540:	8f 91       	pop	r24
     542:	7f 91       	pop	r23
     544:	6f 91       	pop	r22
     546:	5f 91       	pop	r21
     548:	4f 91       	pop	r20
     54a:	3f 91       	pop	r19
     54c:	2f 91       	pop	r18
     54e:	1f 91       	pop	r17
     550:	0f 91       	pop	r16
     552:	0f 90       	pop	r0
     554:	0f be       	out	0x3f, r0	; 63
     556:	0f 90       	pop	r0
     558:	1f 90       	pop	r1
     55a:	18 95       	reti

0000055c <__vector_2>:
     55c:	1f 92       	push	r1
     55e:	0f 92       	push	r0
     560:	0f b6       	in	r0, 0x3f	; 63
     562:	0f 92       	push	r0
     564:	11 24       	eor	r1, r1
     566:	0f 93       	push	r16
     568:	1f 93       	push	r17
     56a:	2f 93       	push	r18
     56c:	3f 93       	push	r19
     56e:	4f 93       	push	r20
     570:	5f 93       	push	r21
     572:	6f 93       	push	r22
     574:	7f 93       	push	r23
     576:	8f 93       	push	r24
     578:	9f 93       	push	r25
     57a:	af 93       	push	r26
     57c:	bf 93       	push	r27
     57e:	ef 93       	push	r30
     580:	ff 93       	push	r31
     582:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     586:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
     58a:	ac 01       	movw	r20, r24
     58c:	09 2e       	mov	r0, r25
     58e:	00 0c       	add	r0, r0
     590:	66 0b       	sbc	r22, r22
     592:	77 0b       	sbc	r23, r23
     594:	9a 01       	movw	r18, r20
     596:	11 27       	eor	r17, r17
     598:	00 27       	eor	r16, r16
     59a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     59e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     5a2:	60 e0       	ldi	r22, 0x00	; 0
     5a4:	70 e0       	ldi	r23, 0x00	; 0
     5a6:	40 2b       	or	r20, r16
     5a8:	51 2b       	or	r21, r17
     5aa:	62 2b       	or	r22, r18
     5ac:	73 2b       	or	r23, r19
     5ae:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
     5b2:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
     5b6:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
     5ba:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
     5be:	b0 9b       	sbis	0x16, 0	; 22
     5c0:	1a c0       	rjmp	.+52     	; 0x5f6 <__vector_2+0x9a>
     5c2:	01 96       	adiw	r24, 0x01	; 1
     5c4:	09 2e       	mov	r0, r25
     5c6:	00 0c       	add	r0, r0
     5c8:	aa 0b       	sbc	r26, r26
     5ca:	bb 0b       	sbc	r27, r27
     5cc:	bc 01       	movw	r22, r24
     5ce:	55 27       	eor	r21, r21
     5d0:	44 27       	eor	r20, r20
     5d2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     5d6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     5da:	a0 e0       	ldi	r26, 0x00	; 0
     5dc:	b0 e0       	ldi	r27, 0x00	; 0
     5de:	84 2b       	or	r24, r20
     5e0:	95 2b       	or	r25, r21
     5e2:	a6 2b       	or	r26, r22
     5e4:	b7 2b       	or	r27, r23
     5e6:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
     5ea:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
     5ee:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
     5f2:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
     5f6:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x2>
     5fa:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x3>
     5fe:	30 97       	sbiw	r30, 0x00	; 0
     600:	39 f0       	breq	.+14     	; 0x610 <__vector_2+0xb4>
     602:	61 e0       	ldi	r22, 0x01	; 1
     604:	70 e0       	ldi	r23, 0x00	; 0
     606:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x2>
     60a:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x3>
     60e:	09 95       	icall
     610:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
     614:	ff 91       	pop	r31
     616:	ef 91       	pop	r30
     618:	bf 91       	pop	r27
     61a:	af 91       	pop	r26
     61c:	9f 91       	pop	r25
     61e:	8f 91       	pop	r24
     620:	7f 91       	pop	r23
     622:	6f 91       	pop	r22
     624:	5f 91       	pop	r21
     626:	4f 91       	pop	r20
     628:	3f 91       	pop	r19
     62a:	2f 91       	pop	r18
     62c:	1f 91       	pop	r17
     62e:	0f 91       	pop	r16
     630:	0f 90       	pop	r0
     632:	0f be       	out	0x3f, r0	; 63
     634:	0f 90       	pop	r0
     636:	1f 90       	pop	r1
     638:	18 95       	reti

0000063a <__vector_3>:
     63a:	1f 92       	push	r1
     63c:	0f 92       	push	r0
     63e:	0f b6       	in	r0, 0x3f	; 63
     640:	0f 92       	push	r0
     642:	11 24       	eor	r1, r1
     644:	0f 93       	push	r16
     646:	1f 93       	push	r17
     648:	2f 93       	push	r18
     64a:	3f 93       	push	r19
     64c:	4f 93       	push	r20
     64e:	5f 93       	push	r21
     650:	6f 93       	push	r22
     652:	7f 93       	push	r23
     654:	8f 93       	push	r24
     656:	9f 93       	push	r25
     658:	af 93       	push	r26
     65a:	bf 93       	push	r27
     65c:	ef 93       	push	r30
     65e:	ff 93       	push	r31
     660:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     664:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
     668:	ac 01       	movw	r20, r24
     66a:	09 2e       	mov	r0, r25
     66c:	00 0c       	add	r0, r0
     66e:	66 0b       	sbc	r22, r22
     670:	77 0b       	sbc	r23, r23
     672:	9a 01       	movw	r18, r20
     674:	11 27       	eor	r17, r17
     676:	00 27       	eor	r16, r16
     678:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     67c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     680:	60 e0       	ldi	r22, 0x00	; 0
     682:	70 e0       	ldi	r23, 0x00	; 0
     684:	40 2b       	or	r20, r16
     686:	51 2b       	or	r21, r17
     688:	62 2b       	or	r22, r18
     68a:	73 2b       	or	r23, r19
     68c:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
     690:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
     694:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
     698:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
     69c:	b0 9b       	sbis	0x16, 0	; 22
     69e:	1a c0       	rjmp	.+52     	; 0x6d4 <__vector_3+0x9a>
     6a0:	01 96       	adiw	r24, 0x01	; 1
     6a2:	09 2e       	mov	r0, r25
     6a4:	00 0c       	add	r0, r0
     6a6:	aa 0b       	sbc	r26, r26
     6a8:	bb 0b       	sbc	r27, r27
     6aa:	bc 01       	movw	r22, r24
     6ac:	55 27       	eor	r21, r21
     6ae:	44 27       	eor	r20, r20
     6b0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     6b4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     6b8:	a0 e0       	ldi	r26, 0x00	; 0
     6ba:	b0 e0       	ldi	r27, 0x00	; 0
     6bc:	84 2b       	or	r24, r20
     6be:	95 2b       	or	r25, r21
     6c0:	a6 2b       	or	r26, r22
     6c2:	b7 2b       	or	r27, r23
     6c4:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
     6c8:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
     6cc:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
     6d0:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
     6d4:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x4>
     6d8:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x5>
     6dc:	30 97       	sbiw	r30, 0x00	; 0
     6de:	39 f0       	breq	.+14     	; 0x6ee <__vector_3+0xb4>
     6e0:	62 e0       	ldi	r22, 0x02	; 2
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x4>
     6e8:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x5>
     6ec:	09 95       	icall
     6ee:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
     6f2:	ff 91       	pop	r31
     6f4:	ef 91       	pop	r30
     6f6:	bf 91       	pop	r27
     6f8:	af 91       	pop	r26
     6fa:	9f 91       	pop	r25
     6fc:	8f 91       	pop	r24
     6fe:	7f 91       	pop	r23
     700:	6f 91       	pop	r22
     702:	5f 91       	pop	r21
     704:	4f 91       	pop	r20
     706:	3f 91       	pop	r19
     708:	2f 91       	pop	r18
     70a:	1f 91       	pop	r17
     70c:	0f 91       	pop	r16
     70e:	0f 90       	pop	r0
     710:	0f be       	out	0x3f, r0	; 63
     712:	0f 90       	pop	r0
     714:	1f 90       	pop	r1
     716:	18 95       	reti

00000718 <__vector_4>:
     718:	1f 92       	push	r1
     71a:	0f 92       	push	r0
     71c:	0f b6       	in	r0, 0x3f	; 63
     71e:	0f 92       	push	r0
     720:	11 24       	eor	r1, r1
     722:	0f 93       	push	r16
     724:	1f 93       	push	r17
     726:	2f 93       	push	r18
     728:	3f 93       	push	r19
     72a:	4f 93       	push	r20
     72c:	5f 93       	push	r21
     72e:	6f 93       	push	r22
     730:	7f 93       	push	r23
     732:	8f 93       	push	r24
     734:	9f 93       	push	r25
     736:	af 93       	push	r26
     738:	bf 93       	push	r27
     73a:	ef 93       	push	r30
     73c:	ff 93       	push	r31
     73e:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     742:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
     746:	ac 01       	movw	r20, r24
     748:	09 2e       	mov	r0, r25
     74a:	00 0c       	add	r0, r0
     74c:	66 0b       	sbc	r22, r22
     74e:	77 0b       	sbc	r23, r23
     750:	9a 01       	movw	r18, r20
     752:	11 27       	eor	r17, r17
     754:	00 27       	eor	r16, r16
     756:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     75a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     75e:	60 e0       	ldi	r22, 0x00	; 0
     760:	70 e0       	ldi	r23, 0x00	; 0
     762:	40 2b       	or	r20, r16
     764:	51 2b       	or	r21, r17
     766:	62 2b       	or	r22, r18
     768:	73 2b       	or	r23, r19
     76a:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
     76e:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
     772:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
     776:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
     77a:	b0 9b       	sbis	0x16, 0	; 22
     77c:	1a c0       	rjmp	.+52     	; 0x7b2 <__vector_4+0x9a>
     77e:	01 96       	adiw	r24, 0x01	; 1
     780:	09 2e       	mov	r0, r25
     782:	00 0c       	add	r0, r0
     784:	aa 0b       	sbc	r26, r26
     786:	bb 0b       	sbc	r27, r27
     788:	bc 01       	movw	r22, r24
     78a:	55 27       	eor	r21, r21
     78c:	44 27       	eor	r20, r20
     78e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     792:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     796:	a0 e0       	ldi	r26, 0x00	; 0
     798:	b0 e0       	ldi	r27, 0x00	; 0
     79a:	84 2b       	or	r24, r20
     79c:	95 2b       	or	r25, r21
     79e:	a6 2b       	or	r26, r22
     7a0:	b7 2b       	or	r27, r23
     7a2:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
     7a6:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
     7aa:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
     7ae:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
     7b2:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x6>
     7b6:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x7>
     7ba:	30 97       	sbiw	r30, 0x00	; 0
     7bc:	39 f0       	breq	.+14     	; 0x7cc <__vector_4+0xb4>
     7be:	63 e0       	ldi	r22, 0x03	; 3
     7c0:	70 e0       	ldi	r23, 0x00	; 0
     7c2:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x6>
     7c6:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x7>
     7ca:	09 95       	icall
     7cc:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
     7d0:	ff 91       	pop	r31
     7d2:	ef 91       	pop	r30
     7d4:	bf 91       	pop	r27
     7d6:	af 91       	pop	r26
     7d8:	9f 91       	pop	r25
     7da:	8f 91       	pop	r24
     7dc:	7f 91       	pop	r23
     7de:	6f 91       	pop	r22
     7e0:	5f 91       	pop	r21
     7e2:	4f 91       	pop	r20
     7e4:	3f 91       	pop	r19
     7e6:	2f 91       	pop	r18
     7e8:	1f 91       	pop	r17
     7ea:	0f 91       	pop	r16
     7ec:	0f 90       	pop	r0
     7ee:	0f be       	out	0x3f, r0	; 63
     7f0:	0f 90       	pop	r0
     7f2:	1f 90       	pop	r1
     7f4:	18 95       	reti

000007f6 <__vector_5>:
     7f6:	1f 92       	push	r1
     7f8:	0f 92       	push	r0
     7fa:	0f b6       	in	r0, 0x3f	; 63
     7fc:	0f 92       	push	r0
     7fe:	11 24       	eor	r1, r1
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	2f 93       	push	r18
     806:	3f 93       	push	r19
     808:	4f 93       	push	r20
     80a:	5f 93       	push	r21
     80c:	6f 93       	push	r22
     80e:	7f 93       	push	r23
     810:	8f 93       	push	r24
     812:	9f 93       	push	r25
     814:	af 93       	push	r26
     816:	bf 93       	push	r27
     818:	ef 93       	push	r30
     81a:	ff 93       	push	r31
     81c:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     820:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
     824:	ac 01       	movw	r20, r24
     826:	09 2e       	mov	r0, r25
     828:	00 0c       	add	r0, r0
     82a:	66 0b       	sbc	r22, r22
     82c:	77 0b       	sbc	r23, r23
     82e:	9a 01       	movw	r18, r20
     830:	11 27       	eor	r17, r17
     832:	00 27       	eor	r16, r16
     834:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     838:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     83c:	60 e0       	ldi	r22, 0x00	; 0
     83e:	70 e0       	ldi	r23, 0x00	; 0
     840:	40 2b       	or	r20, r16
     842:	51 2b       	or	r21, r17
     844:	62 2b       	or	r22, r18
     846:	73 2b       	or	r23, r19
     848:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
     84c:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
     850:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
     854:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
     858:	b0 9b       	sbis	0x16, 0	; 22
     85a:	1a c0       	rjmp	.+52     	; 0x890 <__vector_5+0x9a>
     85c:	01 96       	adiw	r24, 0x01	; 1
     85e:	09 2e       	mov	r0, r25
     860:	00 0c       	add	r0, r0
     862:	aa 0b       	sbc	r26, r26
     864:	bb 0b       	sbc	r27, r27
     866:	bc 01       	movw	r22, r24
     868:	55 27       	eor	r21, r21
     86a:	44 27       	eor	r20, r20
     86c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     870:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     874:	a0 e0       	ldi	r26, 0x00	; 0
     876:	b0 e0       	ldi	r27, 0x00	; 0
     878:	84 2b       	or	r24, r20
     87a:	95 2b       	or	r25, r21
     87c:	a6 2b       	or	r26, r22
     87e:	b7 2b       	or	r27, r23
     880:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
     884:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
     888:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
     88c:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
     890:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x8>
     894:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x9>
     898:	30 97       	sbiw	r30, 0x00	; 0
     89a:	39 f0       	breq	.+14     	; 0x8aa <__vector_5+0xb4>
     89c:	64 e0       	ldi	r22, 0x04	; 4
     89e:	70 e0       	ldi	r23, 0x00	; 0
     8a0:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x8>
     8a4:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x9>
     8a8:	09 95       	icall
     8aa:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
     8ae:	ff 91       	pop	r31
     8b0:	ef 91       	pop	r30
     8b2:	bf 91       	pop	r27
     8b4:	af 91       	pop	r26
     8b6:	9f 91       	pop	r25
     8b8:	8f 91       	pop	r24
     8ba:	7f 91       	pop	r23
     8bc:	6f 91       	pop	r22
     8be:	5f 91       	pop	r21
     8c0:	4f 91       	pop	r20
     8c2:	3f 91       	pop	r19
     8c4:	2f 91       	pop	r18
     8c6:	1f 91       	pop	r17
     8c8:	0f 91       	pop	r16
     8ca:	0f 90       	pop	r0
     8cc:	0f be       	out	0x3f, r0	; 63
     8ce:	0f 90       	pop	r0
     8d0:	1f 90       	pop	r1
     8d2:	18 95       	reti

000008d4 <__vector_10>:
     8d4:	1f 92       	push	r1
     8d6:	0f 92       	push	r0
     8d8:	0f b6       	in	r0, 0x3f	; 63
     8da:	0f 92       	push	r0
     8dc:	11 24       	eor	r1, r1
     8de:	0f 93       	push	r16
     8e0:	1f 93       	push	r17
     8e2:	2f 93       	push	r18
     8e4:	3f 93       	push	r19
     8e6:	4f 93       	push	r20
     8e8:	5f 93       	push	r21
     8ea:	6f 93       	push	r22
     8ec:	7f 93       	push	r23
     8ee:	8f 93       	push	r24
     8f0:	9f 93       	push	r25
     8f2:	af 93       	push	r26
     8f4:	bf 93       	push	r27
     8f6:	ef 93       	push	r30
     8f8:	ff 93       	push	r31
     8fa:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     8fe:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
     902:	ac 01       	movw	r20, r24
     904:	09 2e       	mov	r0, r25
     906:	00 0c       	add	r0, r0
     908:	66 0b       	sbc	r22, r22
     90a:	77 0b       	sbc	r23, r23
     90c:	9a 01       	movw	r18, r20
     90e:	11 27       	eor	r17, r17
     910:	00 27       	eor	r16, r16
     912:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     916:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     91a:	60 e0       	ldi	r22, 0x00	; 0
     91c:	70 e0       	ldi	r23, 0x00	; 0
     91e:	40 2b       	or	r20, r16
     920:	51 2b       	or	r21, r17
     922:	62 2b       	or	r22, r18
     924:	73 2b       	or	r23, r19
     926:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
     92a:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
     92e:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
     932:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
     936:	b0 9b       	sbis	0x16, 0	; 22
     938:	1a c0       	rjmp	.+52     	; 0x96e <__vector_10+0x9a>
     93a:	01 96       	adiw	r24, 0x01	; 1
     93c:	09 2e       	mov	r0, r25
     93e:	00 0c       	add	r0, r0
     940:	aa 0b       	sbc	r26, r26
     942:	bb 0b       	sbc	r27, r27
     944:	bc 01       	movw	r22, r24
     946:	55 27       	eor	r21, r21
     948:	44 27       	eor	r20, r20
     94a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     94e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     952:	a0 e0       	ldi	r26, 0x00	; 0
     954:	b0 e0       	ldi	r27, 0x00	; 0
     956:	84 2b       	or	r24, r20
     958:	95 2b       	or	r25, r21
     95a:	a6 2b       	or	r26, r22
     95c:	b7 2b       	or	r27, r23
     95e:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
     962:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
     966:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
     96a:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
     96e:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0xa>
     972:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0xb>
     976:	30 97       	sbiw	r30, 0x00	; 0
     978:	39 f0       	breq	.+14     	; 0x988 <__vector_10+0xb4>
     97a:	65 e0       	ldi	r22, 0x05	; 5
     97c:	70 e0       	ldi	r23, 0x00	; 0
     97e:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0xa>
     982:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0xb>
     986:	09 95       	icall
     988:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
     98c:	ff 91       	pop	r31
     98e:	ef 91       	pop	r30
     990:	bf 91       	pop	r27
     992:	af 91       	pop	r26
     994:	9f 91       	pop	r25
     996:	8f 91       	pop	r24
     998:	7f 91       	pop	r23
     99a:	6f 91       	pop	r22
     99c:	5f 91       	pop	r21
     99e:	4f 91       	pop	r20
     9a0:	3f 91       	pop	r19
     9a2:	2f 91       	pop	r18
     9a4:	1f 91       	pop	r17
     9a6:	0f 91       	pop	r16
     9a8:	0f 90       	pop	r0
     9aa:	0f be       	out	0x3f, r0	; 63
     9ac:	0f 90       	pop	r0
     9ae:	1f 90       	pop	r1
     9b0:	18 95       	reti

000009b2 <__vector_11>:
     9b2:	1f 92       	push	r1
     9b4:	0f 92       	push	r0
     9b6:	0f b6       	in	r0, 0x3f	; 63
     9b8:	0f 92       	push	r0
     9ba:	11 24       	eor	r1, r1
     9bc:	0f 93       	push	r16
     9be:	1f 93       	push	r17
     9c0:	2f 93       	push	r18
     9c2:	3f 93       	push	r19
     9c4:	4f 93       	push	r20
     9c6:	5f 93       	push	r21
     9c8:	6f 93       	push	r22
     9ca:	7f 93       	push	r23
     9cc:	8f 93       	push	r24
     9ce:	9f 93       	push	r25
     9d0:	af 93       	push	r26
     9d2:	bf 93       	push	r27
     9d4:	ef 93       	push	r30
     9d6:	ff 93       	push	r31
     9d8:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     9dc:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
     9e0:	ac 01       	movw	r20, r24
     9e2:	09 2e       	mov	r0, r25
     9e4:	00 0c       	add	r0, r0
     9e6:	66 0b       	sbc	r22, r22
     9e8:	77 0b       	sbc	r23, r23
     9ea:	9a 01       	movw	r18, r20
     9ec:	11 27       	eor	r17, r17
     9ee:	00 27       	eor	r16, r16
     9f0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9f4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9f8:	60 e0       	ldi	r22, 0x00	; 0
     9fa:	70 e0       	ldi	r23, 0x00	; 0
     9fc:	40 2b       	or	r20, r16
     9fe:	51 2b       	or	r21, r17
     a00:	62 2b       	or	r22, r18
     a02:	73 2b       	or	r23, r19
     a04:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
     a08:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
     a0c:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
     a10:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
     a14:	b0 9b       	sbis	0x16, 0	; 22
     a16:	1a c0       	rjmp	.+52     	; 0xa4c <__vector_11+0x9a>
     a18:	01 96       	adiw	r24, 0x01	; 1
     a1a:	09 2e       	mov	r0, r25
     a1c:	00 0c       	add	r0, r0
     a1e:	aa 0b       	sbc	r26, r26
     a20:	bb 0b       	sbc	r27, r27
     a22:	bc 01       	movw	r22, r24
     a24:	55 27       	eor	r21, r21
     a26:	44 27       	eor	r20, r20
     a28:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a2c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a30:	a0 e0       	ldi	r26, 0x00	; 0
     a32:	b0 e0       	ldi	r27, 0x00	; 0
     a34:	84 2b       	or	r24, r20
     a36:	95 2b       	or	r25, r21
     a38:	a6 2b       	or	r26, r22
     a3a:	b7 2b       	or	r27, r23
     a3c:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
     a40:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
     a44:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
     a48:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
     a4c:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0xc>
     a50:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0xd>
     a54:	30 97       	sbiw	r30, 0x00	; 0
     a56:	39 f0       	breq	.+14     	; 0xa66 <__vector_11+0xb4>
     a58:	66 e0       	ldi	r22, 0x06	; 6
     a5a:	70 e0       	ldi	r23, 0x00	; 0
     a5c:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0xc>
     a60:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0xd>
     a64:	09 95       	icall
     a66:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
     a6a:	ff 91       	pop	r31
     a6c:	ef 91       	pop	r30
     a6e:	bf 91       	pop	r27
     a70:	af 91       	pop	r26
     a72:	9f 91       	pop	r25
     a74:	8f 91       	pop	r24
     a76:	7f 91       	pop	r23
     a78:	6f 91       	pop	r22
     a7a:	5f 91       	pop	r21
     a7c:	4f 91       	pop	r20
     a7e:	3f 91       	pop	r19
     a80:	2f 91       	pop	r18
     a82:	1f 91       	pop	r17
     a84:	0f 91       	pop	r16
     a86:	0f 90       	pop	r0
     a88:	0f be       	out	0x3f, r0	; 63
     a8a:	0f 90       	pop	r0
     a8c:	1f 90       	pop	r1
     a8e:	18 95       	reti

00000a90 <__vector_12>:
     a90:	1f 92       	push	r1
     a92:	0f 92       	push	r0
     a94:	0f b6       	in	r0, 0x3f	; 63
     a96:	0f 92       	push	r0
     a98:	11 24       	eor	r1, r1
     a9a:	0f 93       	push	r16
     a9c:	1f 93       	push	r17
     a9e:	2f 93       	push	r18
     aa0:	3f 93       	push	r19
     aa2:	4f 93       	push	r20
     aa4:	5f 93       	push	r21
     aa6:	6f 93       	push	r22
     aa8:	7f 93       	push	r23
     aaa:	8f 93       	push	r24
     aac:	9f 93       	push	r25
     aae:	af 93       	push	r26
     ab0:	bf 93       	push	r27
     ab2:	ef 93       	push	r30
     ab4:	ff 93       	push	r31
     ab6:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     aba:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
     abe:	ac 01       	movw	r20, r24
     ac0:	09 2e       	mov	r0, r25
     ac2:	00 0c       	add	r0, r0
     ac4:	66 0b       	sbc	r22, r22
     ac6:	77 0b       	sbc	r23, r23
     ac8:	9a 01       	movw	r18, r20
     aca:	11 27       	eor	r17, r17
     acc:	00 27       	eor	r16, r16
     ace:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ad2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ad6:	60 e0       	ldi	r22, 0x00	; 0
     ad8:	70 e0       	ldi	r23, 0x00	; 0
     ada:	40 2b       	or	r20, r16
     adc:	51 2b       	or	r21, r17
     ade:	62 2b       	or	r22, r18
     ae0:	73 2b       	or	r23, r19
     ae2:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
     ae6:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
     aea:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
     aee:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
     af2:	b0 9b       	sbis	0x16, 0	; 22
     af4:	1a c0       	rjmp	.+52     	; 0xb2a <__vector_12+0x9a>
     af6:	01 96       	adiw	r24, 0x01	; 1
     af8:	09 2e       	mov	r0, r25
     afa:	00 0c       	add	r0, r0
     afc:	aa 0b       	sbc	r26, r26
     afe:	bb 0b       	sbc	r27, r27
     b00:	bc 01       	movw	r22, r24
     b02:	55 27       	eor	r21, r21
     b04:	44 27       	eor	r20, r20
     b06:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b0a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b0e:	a0 e0       	ldi	r26, 0x00	; 0
     b10:	b0 e0       	ldi	r27, 0x00	; 0
     b12:	84 2b       	or	r24, r20
     b14:	95 2b       	or	r25, r21
     b16:	a6 2b       	or	r26, r22
     b18:	b7 2b       	or	r27, r23
     b1a:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
     b1e:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
     b22:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
     b26:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
     b2a:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0xe>
     b2e:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0xf>
     b32:	30 97       	sbiw	r30, 0x00	; 0
     b34:	39 f0       	breq	.+14     	; 0xb44 <__vector_12+0xb4>
     b36:	67 e0       	ldi	r22, 0x07	; 7
     b38:	70 e0       	ldi	r23, 0x00	; 0
     b3a:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0xe>
     b3e:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0xf>
     b42:	09 95       	icall
     b44:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
     b48:	ff 91       	pop	r31
     b4a:	ef 91       	pop	r30
     b4c:	bf 91       	pop	r27
     b4e:	af 91       	pop	r26
     b50:	9f 91       	pop	r25
     b52:	8f 91       	pop	r24
     b54:	7f 91       	pop	r23
     b56:	6f 91       	pop	r22
     b58:	5f 91       	pop	r21
     b5a:	4f 91       	pop	r20
     b5c:	3f 91       	pop	r19
     b5e:	2f 91       	pop	r18
     b60:	1f 91       	pop	r17
     b62:	0f 91       	pop	r16
     b64:	0f 90       	pop	r0
     b66:	0f be       	out	0x3f, r0	; 63
     b68:	0f 90       	pop	r0
     b6a:	1f 90       	pop	r1
     b6c:	18 95       	reti

00000b6e <__vector_13>:
     b6e:	1f 92       	push	r1
     b70:	0f 92       	push	r0
     b72:	0f b6       	in	r0, 0x3f	; 63
     b74:	0f 92       	push	r0
     b76:	11 24       	eor	r1, r1
     b78:	0f 93       	push	r16
     b7a:	1f 93       	push	r17
     b7c:	2f 93       	push	r18
     b7e:	3f 93       	push	r19
     b80:	4f 93       	push	r20
     b82:	5f 93       	push	r21
     b84:	6f 93       	push	r22
     b86:	7f 93       	push	r23
     b88:	8f 93       	push	r24
     b8a:	9f 93       	push	r25
     b8c:	af 93       	push	r26
     b8e:	bf 93       	push	r27
     b90:	ef 93       	push	r30
     b92:	ff 93       	push	r31
     b94:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     b98:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
     b9c:	ac 01       	movw	r20, r24
     b9e:	09 2e       	mov	r0, r25
     ba0:	00 0c       	add	r0, r0
     ba2:	66 0b       	sbc	r22, r22
     ba4:	77 0b       	sbc	r23, r23
     ba6:	9a 01       	movw	r18, r20
     ba8:	11 27       	eor	r17, r17
     baa:	00 27       	eor	r16, r16
     bac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bb0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bb4:	60 e0       	ldi	r22, 0x00	; 0
     bb6:	70 e0       	ldi	r23, 0x00	; 0
     bb8:	40 2b       	or	r20, r16
     bba:	51 2b       	or	r21, r17
     bbc:	62 2b       	or	r22, r18
     bbe:	73 2b       	or	r23, r19
     bc0:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
     bc4:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
     bc8:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
     bcc:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
     bd0:	b0 9b       	sbis	0x16, 0	; 22
     bd2:	1a c0       	rjmp	.+52     	; 0xc08 <__vector_13+0x9a>
     bd4:	01 96       	adiw	r24, 0x01	; 1
     bd6:	09 2e       	mov	r0, r25
     bd8:	00 0c       	add	r0, r0
     bda:	aa 0b       	sbc	r26, r26
     bdc:	bb 0b       	sbc	r27, r27
     bde:	bc 01       	movw	r22, r24
     be0:	55 27       	eor	r21, r21
     be2:	44 27       	eor	r20, r20
     be4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     be8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bec:	a0 e0       	ldi	r26, 0x00	; 0
     bee:	b0 e0       	ldi	r27, 0x00	; 0
     bf0:	84 2b       	or	r24, r20
     bf2:	95 2b       	or	r25, r21
     bf4:	a6 2b       	or	r26, r22
     bf6:	b7 2b       	or	r27, r23
     bf8:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
     bfc:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
     c00:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
     c04:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
     c08:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0x10>
     c0c:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0x11>
     c10:	30 97       	sbiw	r30, 0x00	; 0
     c12:	39 f0       	breq	.+14     	; 0xc22 <__vector_13+0xb4>
     c14:	68 e0       	ldi	r22, 0x08	; 8
     c16:	70 e0       	ldi	r23, 0x00	; 0
     c18:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0x10>
     c1c:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0x11>
     c20:	09 95       	icall
     c22:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
     c26:	ff 91       	pop	r31
     c28:	ef 91       	pop	r30
     c2a:	bf 91       	pop	r27
     c2c:	af 91       	pop	r26
     c2e:	9f 91       	pop	r25
     c30:	8f 91       	pop	r24
     c32:	7f 91       	pop	r23
     c34:	6f 91       	pop	r22
     c36:	5f 91       	pop	r21
     c38:	4f 91       	pop	r20
     c3a:	3f 91       	pop	r19
     c3c:	2f 91       	pop	r18
     c3e:	1f 91       	pop	r17
     c40:	0f 91       	pop	r16
     c42:	0f 90       	pop	r0
     c44:	0f be       	out	0x3f, r0	; 63
     c46:	0f 90       	pop	r0
     c48:	1f 90       	pop	r1
     c4a:	18 95       	reti

00000c4c <__vector_14>:
     c4c:	1f 92       	push	r1
     c4e:	0f 92       	push	r0
     c50:	0f b6       	in	r0, 0x3f	; 63
     c52:	0f 92       	push	r0
     c54:	11 24       	eor	r1, r1
     c56:	0f 93       	push	r16
     c58:	1f 93       	push	r17
     c5a:	2f 93       	push	r18
     c5c:	3f 93       	push	r19
     c5e:	4f 93       	push	r20
     c60:	5f 93       	push	r21
     c62:	6f 93       	push	r22
     c64:	7f 93       	push	r23
     c66:	8f 93       	push	r24
     c68:	9f 93       	push	r25
     c6a:	af 93       	push	r26
     c6c:	bf 93       	push	r27
     c6e:	ef 93       	push	r30
     c70:	ff 93       	push	r31
     c72:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     c76:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
     c7a:	ac 01       	movw	r20, r24
     c7c:	09 2e       	mov	r0, r25
     c7e:	00 0c       	add	r0, r0
     c80:	66 0b       	sbc	r22, r22
     c82:	77 0b       	sbc	r23, r23
     c84:	9a 01       	movw	r18, r20
     c86:	11 27       	eor	r17, r17
     c88:	00 27       	eor	r16, r16
     c8a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c8e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c92:	60 e0       	ldi	r22, 0x00	; 0
     c94:	70 e0       	ldi	r23, 0x00	; 0
     c96:	40 2b       	or	r20, r16
     c98:	51 2b       	or	r21, r17
     c9a:	62 2b       	or	r22, r18
     c9c:	73 2b       	or	r23, r19
     c9e:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
     ca2:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
     ca6:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
     caa:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
     cae:	b0 9b       	sbis	0x16, 0	; 22
     cb0:	1a c0       	rjmp	.+52     	; 0xce6 <__vector_14+0x9a>
     cb2:	01 96       	adiw	r24, 0x01	; 1
     cb4:	09 2e       	mov	r0, r25
     cb6:	00 0c       	add	r0, r0
     cb8:	aa 0b       	sbc	r26, r26
     cba:	bb 0b       	sbc	r27, r27
     cbc:	bc 01       	movw	r22, r24
     cbe:	55 27       	eor	r21, r21
     cc0:	44 27       	eor	r20, r20
     cc2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cc6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cca:	a0 e0       	ldi	r26, 0x00	; 0
     ccc:	b0 e0       	ldi	r27, 0x00	; 0
     cce:	84 2b       	or	r24, r20
     cd0:	95 2b       	or	r25, r21
     cd2:	a6 2b       	or	r26, r22
     cd4:	b7 2b       	or	r27, r23
     cd6:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
     cda:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
     cde:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
     ce2:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
     ce6:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0x12>
     cea:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0x13>
     cee:	30 97       	sbiw	r30, 0x00	; 0
     cf0:	39 f0       	breq	.+14     	; 0xd00 <__vector_14+0xb4>
     cf2:	69 e0       	ldi	r22, 0x09	; 9
     cf4:	70 e0       	ldi	r23, 0x00	; 0
     cf6:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0x12>
     cfa:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0x13>
     cfe:	09 95       	icall
     d00:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
     d04:	ff 91       	pop	r31
     d06:	ef 91       	pop	r30
     d08:	bf 91       	pop	r27
     d0a:	af 91       	pop	r26
     d0c:	9f 91       	pop	r25
     d0e:	8f 91       	pop	r24
     d10:	7f 91       	pop	r23
     d12:	6f 91       	pop	r22
     d14:	5f 91       	pop	r21
     d16:	4f 91       	pop	r20
     d18:	3f 91       	pop	r19
     d1a:	2f 91       	pop	r18
     d1c:	1f 91       	pop	r17
     d1e:	0f 91       	pop	r16
     d20:	0f 90       	pop	r0
     d22:	0f be       	out	0x3f, r0	; 63
     d24:	0f 90       	pop	r0
     d26:	1f 90       	pop	r1
     d28:	18 95       	reti

00000d2a <__vector_15>:
     d2a:	1f 92       	push	r1
     d2c:	0f 92       	push	r0
     d2e:	0f b6       	in	r0, 0x3f	; 63
     d30:	0f 92       	push	r0
     d32:	11 24       	eor	r1, r1
     d34:	0f 93       	push	r16
     d36:	1f 93       	push	r17
     d38:	2f 93       	push	r18
     d3a:	3f 93       	push	r19
     d3c:	4f 93       	push	r20
     d3e:	5f 93       	push	r21
     d40:	6f 93       	push	r22
     d42:	7f 93       	push	r23
     d44:	8f 93       	push	r24
     d46:	9f 93       	push	r25
     d48:	af 93       	push	r26
     d4a:	bf 93       	push	r27
     d4c:	ef 93       	push	r30
     d4e:	ff 93       	push	r31
     d50:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     d54:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
     d58:	ac 01       	movw	r20, r24
     d5a:	09 2e       	mov	r0, r25
     d5c:	00 0c       	add	r0, r0
     d5e:	66 0b       	sbc	r22, r22
     d60:	77 0b       	sbc	r23, r23
     d62:	9a 01       	movw	r18, r20
     d64:	11 27       	eor	r17, r17
     d66:	00 27       	eor	r16, r16
     d68:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d6c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d70:	60 e0       	ldi	r22, 0x00	; 0
     d72:	70 e0       	ldi	r23, 0x00	; 0
     d74:	40 2b       	or	r20, r16
     d76:	51 2b       	or	r21, r17
     d78:	62 2b       	or	r22, r18
     d7a:	73 2b       	or	r23, r19
     d7c:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
     d80:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
     d84:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
     d88:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
     d8c:	b0 9b       	sbis	0x16, 0	; 22
     d8e:	1a c0       	rjmp	.+52     	; 0xdc4 <__vector_15+0x9a>
     d90:	01 96       	adiw	r24, 0x01	; 1
     d92:	09 2e       	mov	r0, r25
     d94:	00 0c       	add	r0, r0
     d96:	aa 0b       	sbc	r26, r26
     d98:	bb 0b       	sbc	r27, r27
     d9a:	bc 01       	movw	r22, r24
     d9c:	55 27       	eor	r21, r21
     d9e:	44 27       	eor	r20, r20
     da0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     da4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     da8:	a0 e0       	ldi	r26, 0x00	; 0
     daa:	b0 e0       	ldi	r27, 0x00	; 0
     dac:	84 2b       	or	r24, r20
     dae:	95 2b       	or	r25, r21
     db0:	a6 2b       	or	r26, r22
     db2:	b7 2b       	or	r27, r23
     db4:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
     db8:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
     dbc:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
     dc0:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
     dc4:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0x14>
     dc8:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0x15>
     dcc:	30 97       	sbiw	r30, 0x00	; 0
     dce:	39 f0       	breq	.+14     	; 0xdde <__vector_15+0xb4>
     dd0:	6a e0       	ldi	r22, 0x0A	; 10
     dd2:	70 e0       	ldi	r23, 0x00	; 0
     dd4:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0x14>
     dd8:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0x15>
     ddc:	09 95       	icall
     dde:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
     de2:	ff 91       	pop	r31
     de4:	ef 91       	pop	r30
     de6:	bf 91       	pop	r27
     de8:	af 91       	pop	r26
     dea:	9f 91       	pop	r25
     dec:	8f 91       	pop	r24
     dee:	7f 91       	pop	r23
     df0:	6f 91       	pop	r22
     df2:	5f 91       	pop	r21
     df4:	4f 91       	pop	r20
     df6:	3f 91       	pop	r19
     df8:	2f 91       	pop	r18
     dfa:	1f 91       	pop	r17
     dfc:	0f 91       	pop	r16
     dfe:	0f 90       	pop	r0
     e00:	0f be       	out	0x3f, r0	; 63
     e02:	0f 90       	pop	r0
     e04:	1f 90       	pop	r1
     e06:	18 95       	reti

00000e08 <__vector_16>:
     e08:	1f 92       	push	r1
     e0a:	0f 92       	push	r0
     e0c:	0f b6       	in	r0, 0x3f	; 63
     e0e:	0f 92       	push	r0
     e10:	11 24       	eor	r1, r1
     e12:	0f 93       	push	r16
     e14:	1f 93       	push	r17
     e16:	2f 93       	push	r18
     e18:	3f 93       	push	r19
     e1a:	4f 93       	push	r20
     e1c:	5f 93       	push	r21
     e1e:	6f 93       	push	r22
     e20:	7f 93       	push	r23
     e22:	8f 93       	push	r24
     e24:	9f 93       	push	r25
     e26:	af 93       	push	r26
     e28:	bf 93       	push	r27
     e2a:	ef 93       	push	r30
     e2c:	ff 93       	push	r31
     e2e:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     e32:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
     e36:	ac 01       	movw	r20, r24
     e38:	09 2e       	mov	r0, r25
     e3a:	00 0c       	add	r0, r0
     e3c:	66 0b       	sbc	r22, r22
     e3e:	77 0b       	sbc	r23, r23
     e40:	9a 01       	movw	r18, r20
     e42:	11 27       	eor	r17, r17
     e44:	00 27       	eor	r16, r16
     e46:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e4a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e4e:	60 e0       	ldi	r22, 0x00	; 0
     e50:	70 e0       	ldi	r23, 0x00	; 0
     e52:	40 2b       	or	r20, r16
     e54:	51 2b       	or	r21, r17
     e56:	62 2b       	or	r22, r18
     e58:	73 2b       	or	r23, r19
     e5a:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
     e5e:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
     e62:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
     e66:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
     e6a:	b0 9b       	sbis	0x16, 0	; 22
     e6c:	1a c0       	rjmp	.+52     	; 0xea2 <__vector_16+0x9a>
     e6e:	01 96       	adiw	r24, 0x01	; 1
     e70:	09 2e       	mov	r0, r25
     e72:	00 0c       	add	r0, r0
     e74:	aa 0b       	sbc	r26, r26
     e76:	bb 0b       	sbc	r27, r27
     e78:	bc 01       	movw	r22, r24
     e7a:	55 27       	eor	r21, r21
     e7c:	44 27       	eor	r20, r20
     e7e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e82:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e86:	a0 e0       	ldi	r26, 0x00	; 0
     e88:	b0 e0       	ldi	r27, 0x00	; 0
     e8a:	84 2b       	or	r24, r20
     e8c:	95 2b       	or	r25, r21
     e8e:	a6 2b       	or	r26, r22
     e90:	b7 2b       	or	r27, r23
     e92:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
     e96:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
     e9a:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
     e9e:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
     ea2:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0x16>
     ea6:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0x17>
     eaa:	30 97       	sbiw	r30, 0x00	; 0
     eac:	39 f0       	breq	.+14     	; 0xebc <__vector_16+0xb4>
     eae:	6b e0       	ldi	r22, 0x0B	; 11
     eb0:	70 e0       	ldi	r23, 0x00	; 0
     eb2:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0x16>
     eb6:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0x17>
     eba:	09 95       	icall
     ebc:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
     ec0:	ff 91       	pop	r31
     ec2:	ef 91       	pop	r30
     ec4:	bf 91       	pop	r27
     ec6:	af 91       	pop	r26
     ec8:	9f 91       	pop	r25
     eca:	8f 91       	pop	r24
     ecc:	7f 91       	pop	r23
     ece:	6f 91       	pop	r22
     ed0:	5f 91       	pop	r21
     ed2:	4f 91       	pop	r20
     ed4:	3f 91       	pop	r19
     ed6:	2f 91       	pop	r18
     ed8:	1f 91       	pop	r17
     eda:	0f 91       	pop	r16
     edc:	0f 90       	pop	r0
     ede:	0f be       	out	0x3f, r0	; 63
     ee0:	0f 90       	pop	r0
     ee2:	1f 90       	pop	r1
     ee4:	18 95       	reti

00000ee6 <__vector_17>:
     ee6:	1f 92       	push	r1
     ee8:	0f 92       	push	r0
     eea:	0f b6       	in	r0, 0x3f	; 63
     eec:	0f 92       	push	r0
     eee:	11 24       	eor	r1, r1
     ef0:	0f 93       	push	r16
     ef2:	1f 93       	push	r17
     ef4:	2f 93       	push	r18
     ef6:	3f 93       	push	r19
     ef8:	4f 93       	push	r20
     efa:	5f 93       	push	r21
     efc:	6f 93       	push	r22
     efe:	7f 93       	push	r23
     f00:	8f 93       	push	r24
     f02:	9f 93       	push	r25
     f04:	af 93       	push	r26
     f06:	bf 93       	push	r27
     f08:	ef 93       	push	r30
     f0a:	ff 93       	push	r31
     f0c:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     f10:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
     f14:	ac 01       	movw	r20, r24
     f16:	09 2e       	mov	r0, r25
     f18:	00 0c       	add	r0, r0
     f1a:	66 0b       	sbc	r22, r22
     f1c:	77 0b       	sbc	r23, r23
     f1e:	9a 01       	movw	r18, r20
     f20:	11 27       	eor	r17, r17
     f22:	00 27       	eor	r16, r16
     f24:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f28:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f2c:	60 e0       	ldi	r22, 0x00	; 0
     f2e:	70 e0       	ldi	r23, 0x00	; 0
     f30:	40 2b       	or	r20, r16
     f32:	51 2b       	or	r21, r17
     f34:	62 2b       	or	r22, r18
     f36:	73 2b       	or	r23, r19
     f38:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
     f3c:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
     f40:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
     f44:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
     f48:	b0 9b       	sbis	0x16, 0	; 22
     f4a:	1a c0       	rjmp	.+52     	; 0xf80 <__vector_17+0x9a>
     f4c:	01 96       	adiw	r24, 0x01	; 1
     f4e:	09 2e       	mov	r0, r25
     f50:	00 0c       	add	r0, r0
     f52:	aa 0b       	sbc	r26, r26
     f54:	bb 0b       	sbc	r27, r27
     f56:	bc 01       	movw	r22, r24
     f58:	55 27       	eor	r21, r21
     f5a:	44 27       	eor	r20, r20
     f5c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f60:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f64:	a0 e0       	ldi	r26, 0x00	; 0
     f66:	b0 e0       	ldi	r27, 0x00	; 0
     f68:	84 2b       	or	r24, r20
     f6a:	95 2b       	or	r25, r21
     f6c:	a6 2b       	or	r26, r22
     f6e:	b7 2b       	or	r27, r23
     f70:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
     f74:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
     f78:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
     f7c:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
     f80:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x18>
     f84:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x19>
     f88:	30 97       	sbiw	r30, 0x00	; 0
     f8a:	39 f0       	breq	.+14     	; 0xf9a <__vector_17+0xb4>
     f8c:	6c e0       	ldi	r22, 0x0C	; 12
     f8e:	70 e0       	ldi	r23, 0x00	; 0
     f90:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x18>
     f94:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x19>
     f98:	09 95       	icall
     f9a:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
     f9e:	ff 91       	pop	r31
     fa0:	ef 91       	pop	r30
     fa2:	bf 91       	pop	r27
     fa4:	af 91       	pop	r26
     fa6:	9f 91       	pop	r25
     fa8:	8f 91       	pop	r24
     faa:	7f 91       	pop	r23
     fac:	6f 91       	pop	r22
     fae:	5f 91       	pop	r21
     fb0:	4f 91       	pop	r20
     fb2:	3f 91       	pop	r19
     fb4:	2f 91       	pop	r18
     fb6:	1f 91       	pop	r17
     fb8:	0f 91       	pop	r16
     fba:	0f 90       	pop	r0
     fbc:	0f be       	out	0x3f, r0	; 63
     fbe:	0f 90       	pop	r0
     fc0:	1f 90       	pop	r1
     fc2:	18 95       	reti

00000fc4 <__vector_18>:
     fc4:	1f 92       	push	r1
     fc6:	0f 92       	push	r0
     fc8:	0f b6       	in	r0, 0x3f	; 63
     fca:	0f 92       	push	r0
     fcc:	11 24       	eor	r1, r1
     fce:	0f 93       	push	r16
     fd0:	1f 93       	push	r17
     fd2:	2f 93       	push	r18
     fd4:	3f 93       	push	r19
     fd6:	4f 93       	push	r20
     fd8:	5f 93       	push	r21
     fda:	6f 93       	push	r22
     fdc:	7f 93       	push	r23
     fde:	8f 93       	push	r24
     fe0:	9f 93       	push	r25
     fe2:	af 93       	push	r26
     fe4:	bf 93       	push	r27
     fe6:	ef 93       	push	r30
     fe8:	ff 93       	push	r31
     fea:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     fee:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
     ff2:	ac 01       	movw	r20, r24
     ff4:	09 2e       	mov	r0, r25
     ff6:	00 0c       	add	r0, r0
     ff8:	66 0b       	sbc	r22, r22
     ffa:	77 0b       	sbc	r23, r23
     ffc:	9a 01       	movw	r18, r20
     ffe:	11 27       	eor	r17, r17
    1000:	00 27       	eor	r16, r16
    1002:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1006:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    100a:	60 e0       	ldi	r22, 0x00	; 0
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	40 2b       	or	r20, r16
    1010:	51 2b       	or	r21, r17
    1012:	62 2b       	or	r22, r18
    1014:	73 2b       	or	r23, r19
    1016:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
    101a:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
    101e:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
    1022:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
    1026:	b0 9b       	sbis	0x16, 0	; 22
    1028:	1a c0       	rjmp	.+52     	; 0x105e <__vector_18+0x9a>
    102a:	01 96       	adiw	r24, 0x01	; 1
    102c:	09 2e       	mov	r0, r25
    102e:	00 0c       	add	r0, r0
    1030:	aa 0b       	sbc	r26, r26
    1032:	bb 0b       	sbc	r27, r27
    1034:	bc 01       	movw	r22, r24
    1036:	55 27       	eor	r21, r21
    1038:	44 27       	eor	r20, r20
    103a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    103e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1042:	a0 e0       	ldi	r26, 0x00	; 0
    1044:	b0 e0       	ldi	r27, 0x00	; 0
    1046:	84 2b       	or	r24, r20
    1048:	95 2b       	or	r25, r21
    104a:	a6 2b       	or	r26, r22
    104c:	b7 2b       	or	r27, r23
    104e:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
    1052:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
    1056:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
    105a:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
    105e:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x1a>
    1062:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x1b>
    1066:	30 97       	sbiw	r30, 0x00	; 0
    1068:	39 f0       	breq	.+14     	; 0x1078 <__vector_18+0xb4>
    106a:	6d e0       	ldi	r22, 0x0D	; 13
    106c:	70 e0       	ldi	r23, 0x00	; 0
    106e:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x1a>
    1072:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x1b>
    1076:	09 95       	icall
    1078:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
    107c:	ff 91       	pop	r31
    107e:	ef 91       	pop	r30
    1080:	bf 91       	pop	r27
    1082:	af 91       	pop	r26
    1084:	9f 91       	pop	r25
    1086:	8f 91       	pop	r24
    1088:	7f 91       	pop	r23
    108a:	6f 91       	pop	r22
    108c:	5f 91       	pop	r21
    108e:	4f 91       	pop	r20
    1090:	3f 91       	pop	r19
    1092:	2f 91       	pop	r18
    1094:	1f 91       	pop	r17
    1096:	0f 91       	pop	r16
    1098:	0f 90       	pop	r0
    109a:	0f be       	out	0x3f, r0	; 63
    109c:	0f 90       	pop	r0
    109e:	1f 90       	pop	r1
    10a0:	18 95       	reti

000010a2 <__vector_19>:
    10a2:	1f 92       	push	r1
    10a4:	0f 92       	push	r0
    10a6:	0f b6       	in	r0, 0x3f	; 63
    10a8:	0f 92       	push	r0
    10aa:	11 24       	eor	r1, r1
    10ac:	0f 93       	push	r16
    10ae:	1f 93       	push	r17
    10b0:	2f 93       	push	r18
    10b2:	3f 93       	push	r19
    10b4:	4f 93       	push	r20
    10b6:	5f 93       	push	r21
    10b8:	6f 93       	push	r22
    10ba:	7f 93       	push	r23
    10bc:	8f 93       	push	r24
    10be:	9f 93       	push	r25
    10c0:	af 93       	push	r26
    10c2:	bf 93       	push	r27
    10c4:	ef 93       	push	r30
    10c6:	ff 93       	push	r31
    10c8:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
    10cc:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
    10d0:	ac 01       	movw	r20, r24
    10d2:	09 2e       	mov	r0, r25
    10d4:	00 0c       	add	r0, r0
    10d6:	66 0b       	sbc	r22, r22
    10d8:	77 0b       	sbc	r23, r23
    10da:	9a 01       	movw	r18, r20
    10dc:	11 27       	eor	r17, r17
    10de:	00 27       	eor	r16, r16
    10e0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10e4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10e8:	60 e0       	ldi	r22, 0x00	; 0
    10ea:	70 e0       	ldi	r23, 0x00	; 0
    10ec:	40 2b       	or	r20, r16
    10ee:	51 2b       	or	r21, r17
    10f0:	62 2b       	or	r22, r18
    10f2:	73 2b       	or	r23, r19
    10f4:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
    10f8:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
    10fc:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
    1100:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
    1104:	b0 9b       	sbis	0x16, 0	; 22
    1106:	1a c0       	rjmp	.+52     	; 0x113c <__vector_19+0x9a>
    1108:	01 96       	adiw	r24, 0x01	; 1
    110a:	09 2e       	mov	r0, r25
    110c:	00 0c       	add	r0, r0
    110e:	aa 0b       	sbc	r26, r26
    1110:	bb 0b       	sbc	r27, r27
    1112:	bc 01       	movw	r22, r24
    1114:	55 27       	eor	r21, r21
    1116:	44 27       	eor	r20, r20
    1118:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    111c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1120:	a0 e0       	ldi	r26, 0x00	; 0
    1122:	b0 e0       	ldi	r27, 0x00	; 0
    1124:	84 2b       	or	r24, r20
    1126:	95 2b       	or	r25, r21
    1128:	a6 2b       	or	r26, r22
    112a:	b7 2b       	or	r27, r23
    112c:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
    1130:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
    1134:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
    1138:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
    113c:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x1c>
    1140:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x1d>
    1144:	30 97       	sbiw	r30, 0x00	; 0
    1146:	39 f0       	breq	.+14     	; 0x1156 <__vector_19+0xb4>
    1148:	6e e0       	ldi	r22, 0x0E	; 14
    114a:	70 e0       	ldi	r23, 0x00	; 0
    114c:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x1c>
    1150:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x1d>
    1154:	09 95       	icall
    1156:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
    115a:	ff 91       	pop	r31
    115c:	ef 91       	pop	r30
    115e:	bf 91       	pop	r27
    1160:	af 91       	pop	r26
    1162:	9f 91       	pop	r25
    1164:	8f 91       	pop	r24
    1166:	7f 91       	pop	r23
    1168:	6f 91       	pop	r22
    116a:	5f 91       	pop	r21
    116c:	4f 91       	pop	r20
    116e:	3f 91       	pop	r19
    1170:	2f 91       	pop	r18
    1172:	1f 91       	pop	r17
    1174:	0f 91       	pop	r16
    1176:	0f 90       	pop	r0
    1178:	0f be       	out	0x3f, r0	; 63
    117a:	0f 90       	pop	r0
    117c:	1f 90       	pop	r1
    117e:	18 95       	reti

00001180 <__vector_20>:
    1180:	1f 92       	push	r1
    1182:	0f 92       	push	r0
    1184:	0f b6       	in	r0, 0x3f	; 63
    1186:	0f 92       	push	r0
    1188:	11 24       	eor	r1, r1
    118a:	0f 93       	push	r16
    118c:	1f 93       	push	r17
    118e:	2f 93       	push	r18
    1190:	3f 93       	push	r19
    1192:	4f 93       	push	r20
    1194:	5f 93       	push	r21
    1196:	6f 93       	push	r22
    1198:	7f 93       	push	r23
    119a:	8f 93       	push	r24
    119c:	9f 93       	push	r25
    119e:	af 93       	push	r26
    11a0:	bf 93       	push	r27
    11a2:	ef 93       	push	r30
    11a4:	ff 93       	push	r31
    11a6:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
    11aa:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
    11ae:	ac 01       	movw	r20, r24
    11b0:	09 2e       	mov	r0, r25
    11b2:	00 0c       	add	r0, r0
    11b4:	66 0b       	sbc	r22, r22
    11b6:	77 0b       	sbc	r23, r23
    11b8:	9a 01       	movw	r18, r20
    11ba:	11 27       	eor	r17, r17
    11bc:	00 27       	eor	r16, r16
    11be:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11c2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11c6:	60 e0       	ldi	r22, 0x00	; 0
    11c8:	70 e0       	ldi	r23, 0x00	; 0
    11ca:	40 2b       	or	r20, r16
    11cc:	51 2b       	or	r21, r17
    11ce:	62 2b       	or	r22, r18
    11d0:	73 2b       	or	r23, r19
    11d2:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
    11d6:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
    11da:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
    11de:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
    11e2:	b0 9b       	sbis	0x16, 0	; 22
    11e4:	1a c0       	rjmp	.+52     	; 0x121a <__vector_20+0x9a>
    11e6:	01 96       	adiw	r24, 0x01	; 1
    11e8:	09 2e       	mov	r0, r25
    11ea:	00 0c       	add	r0, r0
    11ec:	aa 0b       	sbc	r26, r26
    11ee:	bb 0b       	sbc	r27, r27
    11f0:	bc 01       	movw	r22, r24
    11f2:	55 27       	eor	r21, r21
    11f4:	44 27       	eor	r20, r20
    11f6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11fa:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11fe:	a0 e0       	ldi	r26, 0x00	; 0
    1200:	b0 e0       	ldi	r27, 0x00	; 0
    1202:	84 2b       	or	r24, r20
    1204:	95 2b       	or	r25, r21
    1206:	a6 2b       	or	r26, r22
    1208:	b7 2b       	or	r27, r23
    120a:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
    120e:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
    1212:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
    1216:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
    121a:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x1e>
    121e:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x1f>
    1222:	30 97       	sbiw	r30, 0x00	; 0
    1224:	39 f0       	breq	.+14     	; 0x1234 <__vector_20+0xb4>
    1226:	6f e0       	ldi	r22, 0x0F	; 15
    1228:	70 e0       	ldi	r23, 0x00	; 0
    122a:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x1e>
    122e:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x1f>
    1232:	09 95       	icall
    1234:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
    1238:	ff 91       	pop	r31
    123a:	ef 91       	pop	r30
    123c:	bf 91       	pop	r27
    123e:	af 91       	pop	r26
    1240:	9f 91       	pop	r25
    1242:	8f 91       	pop	r24
    1244:	7f 91       	pop	r23
    1246:	6f 91       	pop	r22
    1248:	5f 91       	pop	r21
    124a:	4f 91       	pop	r20
    124c:	3f 91       	pop	r19
    124e:	2f 91       	pop	r18
    1250:	1f 91       	pop	r17
    1252:	0f 91       	pop	r16
    1254:	0f 90       	pop	r0
    1256:	0f be       	out	0x3f, r0	; 63
    1258:	0f 90       	pop	r0
    125a:	1f 90       	pop	r1
    125c:	18 95       	reti

0000125e <__vector_21>:
    125e:	1f 92       	push	r1
    1260:	0f 92       	push	r0
    1262:	0f b6       	in	r0, 0x3f	; 63
    1264:	0f 92       	push	r0
    1266:	11 24       	eor	r1, r1
    1268:	0f 93       	push	r16
    126a:	1f 93       	push	r17
    126c:	2f 93       	push	r18
    126e:	3f 93       	push	r19
    1270:	4f 93       	push	r20
    1272:	5f 93       	push	r21
    1274:	6f 93       	push	r22
    1276:	7f 93       	push	r23
    1278:	8f 93       	push	r24
    127a:	9f 93       	push	r25
    127c:	af 93       	push	r26
    127e:	bf 93       	push	r27
    1280:	ef 93       	push	r30
    1282:	ff 93       	push	r31
    1284:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
    1288:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
    128c:	ac 01       	movw	r20, r24
    128e:	09 2e       	mov	r0, r25
    1290:	00 0c       	add	r0, r0
    1292:	66 0b       	sbc	r22, r22
    1294:	77 0b       	sbc	r23, r23
    1296:	9a 01       	movw	r18, r20
    1298:	11 27       	eor	r17, r17
    129a:	00 27       	eor	r16, r16
    129c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12a0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12a4:	60 e0       	ldi	r22, 0x00	; 0
    12a6:	70 e0       	ldi	r23, 0x00	; 0
    12a8:	40 2b       	or	r20, r16
    12aa:	51 2b       	or	r21, r17
    12ac:	62 2b       	or	r22, r18
    12ae:	73 2b       	or	r23, r19
    12b0:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
    12b4:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
    12b8:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
    12bc:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
    12c0:	b0 9b       	sbis	0x16, 0	; 22
    12c2:	1a c0       	rjmp	.+52     	; 0x12f8 <__vector_21+0x9a>
    12c4:	01 96       	adiw	r24, 0x01	; 1
    12c6:	09 2e       	mov	r0, r25
    12c8:	00 0c       	add	r0, r0
    12ca:	aa 0b       	sbc	r26, r26
    12cc:	bb 0b       	sbc	r27, r27
    12ce:	bc 01       	movw	r22, r24
    12d0:	55 27       	eor	r21, r21
    12d2:	44 27       	eor	r20, r20
    12d4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12d8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12dc:	a0 e0       	ldi	r26, 0x00	; 0
    12de:	b0 e0       	ldi	r27, 0x00	; 0
    12e0:	84 2b       	or	r24, r20
    12e2:	95 2b       	or	r25, r21
    12e4:	a6 2b       	or	r26, r22
    12e6:	b7 2b       	or	r27, r23
    12e8:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
    12ec:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
    12f0:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
    12f4:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
    12f8:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x20>
    12fc:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x21>
    1300:	30 97       	sbiw	r30, 0x00	; 0
    1302:	39 f0       	breq	.+14     	; 0x1312 <__vector_21+0xb4>
    1304:	60 e1       	ldi	r22, 0x10	; 16
    1306:	70 e0       	ldi	r23, 0x00	; 0
    1308:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x20>
    130c:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x21>
    1310:	09 95       	icall
    1312:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
    1316:	ff 91       	pop	r31
    1318:	ef 91       	pop	r30
    131a:	bf 91       	pop	r27
    131c:	af 91       	pop	r26
    131e:	9f 91       	pop	r25
    1320:	8f 91       	pop	r24
    1322:	7f 91       	pop	r23
    1324:	6f 91       	pop	r22
    1326:	5f 91       	pop	r21
    1328:	4f 91       	pop	r20
    132a:	3f 91       	pop	r19
    132c:	2f 91       	pop	r18
    132e:	1f 91       	pop	r17
    1330:	0f 91       	pop	r16
    1332:	0f 90       	pop	r0
    1334:	0f be       	out	0x3f, r0	; 63
    1336:	0f 90       	pop	r0
    1338:	1f 90       	pop	r1
    133a:	18 95       	reti

0000133c <__vector_22>:
    133c:	1f 92       	push	r1
    133e:	0f 92       	push	r0
    1340:	0f b6       	in	r0, 0x3f	; 63
    1342:	0f 92       	push	r0
    1344:	11 24       	eor	r1, r1
    1346:	0f 93       	push	r16
    1348:	1f 93       	push	r17
    134a:	2f 93       	push	r18
    134c:	3f 93       	push	r19
    134e:	4f 93       	push	r20
    1350:	5f 93       	push	r21
    1352:	6f 93       	push	r22
    1354:	7f 93       	push	r23
    1356:	8f 93       	push	r24
    1358:	9f 93       	push	r25
    135a:	af 93       	push	r26
    135c:	bf 93       	push	r27
    135e:	ef 93       	push	r30
    1360:	ff 93       	push	r31
    1362:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
    1366:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
    136a:	ac 01       	movw	r20, r24
    136c:	09 2e       	mov	r0, r25
    136e:	00 0c       	add	r0, r0
    1370:	66 0b       	sbc	r22, r22
    1372:	77 0b       	sbc	r23, r23
    1374:	9a 01       	movw	r18, r20
    1376:	11 27       	eor	r17, r17
    1378:	00 27       	eor	r16, r16
    137a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    137e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1382:	60 e0       	ldi	r22, 0x00	; 0
    1384:	70 e0       	ldi	r23, 0x00	; 0
    1386:	40 2b       	or	r20, r16
    1388:	51 2b       	or	r21, r17
    138a:	62 2b       	or	r22, r18
    138c:	73 2b       	or	r23, r19
    138e:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <timestamp>
    1392:	50 93 35 01 	sts	0x0135, r21	; 0x800135 <timestamp+0x1>
    1396:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <timestamp+0x2>
    139a:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <timestamp+0x3>
    139e:	b0 9b       	sbis	0x16, 0	; 22
    13a0:	1a c0       	rjmp	.+52     	; 0x13d6 <__vector_22+0x9a>
    13a2:	01 96       	adiw	r24, 0x01	; 1
    13a4:	09 2e       	mov	r0, r25
    13a6:	00 0c       	add	r0, r0
    13a8:	aa 0b       	sbc	r26, r26
    13aa:	bb 0b       	sbc	r27, r27
    13ac:	bc 01       	movw	r22, r24
    13ae:	55 27       	eor	r21, r21
    13b0:	44 27       	eor	r20, r20
    13b2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13b6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13ba:	a0 e0       	ldi	r26, 0x00	; 0
    13bc:	b0 e0       	ldi	r27, 0x00	; 0
    13be:	84 2b       	or	r24, r20
    13c0:	95 2b       	or	r25, r21
    13c2:	a6 2b       	or	r26, r22
    13c4:	b7 2b       	or	r27, r23
    13c6:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <timestamp>
    13ca:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <timestamp+0x1>
    13ce:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <timestamp+0x2>
    13d2:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <timestamp+0x3>
    13d6:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x22>
    13da:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x23>
    13de:	30 97       	sbiw	r30, 0x00	; 0
    13e0:	39 f0       	breq	.+14     	; 0x13f0 <__vector_22+0xb4>
    13e2:	61 e1       	ldi	r22, 0x11	; 17
    13e4:	70 e0       	ldi	r23, 0x00	; 0
    13e6:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x22>
    13ea:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x23>
    13ee:	09 95       	icall
    13f0:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
    13f4:	ff 91       	pop	r31
    13f6:	ef 91       	pop	r30
    13f8:	bf 91       	pop	r27
    13fa:	af 91       	pop	r26
    13fc:	9f 91       	pop	r25
    13fe:	8f 91       	pop	r24
    1400:	7f 91       	pop	r23
    1402:	6f 91       	pop	r22
    1404:	5f 91       	pop	r21
    1406:	4f 91       	pop	r20
    1408:	3f 91       	pop	r19
    140a:	2f 91       	pop	r18
    140c:	1f 91       	pop	r17
    140e:	0f 91       	pop	r16
    1410:	0f 90       	pop	r0
    1412:	0f be       	out	0x3f, r0	; 63
    1414:	0f 90       	pop	r0
    1416:	1f 90       	pop	r1
    1418:	18 95       	reti

0000141a <__vector_9>:
        return 1;
    }
    return 0;
}

TIMER_OVERFLOW_INTERRUPT {
    141a:	1f 92       	push	r1
    141c:	0f 92       	push	r0
    141e:	0f b6       	in	r0, 0x3f	; 63
    1420:	0f 92       	push	r0
    1422:	11 24       	eor	r1, r1
    1424:	2f 93       	push	r18
    1426:	3f 93       	push	r19
    1428:	4f 93       	push	r20
    142a:	5f 93       	push	r21
    142c:	6f 93       	push	r22
    142e:	7f 93       	push	r23
    1430:	8f 93       	push	r24
    1432:	9f 93       	push	r25
    1434:	ef 93       	push	r30
    1436:	ff 93       	push	r31
    TIMER_OCLR();
    overflows++;
    1438:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
    143c:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
    1440:	01 96       	adiw	r24, 0x01	; 1
    1442:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <__data_end+0x1>
    1446:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__data_end>
    TIMERSET(timerQ);
    144a:	e0 91 38 01 	lds	r30, 0x0138	; 0x800138 <timerQ>
    144e:	f0 91 39 01 	lds	r31, 0x0139	; 0x800139 <timerQ+0x1>
    1452:	30 97       	sbiw	r30, 0x00	; 0
    1454:	01 f1       	breq	.+64     	; 0x1496 <__vector_9+0x7c>
    1456:	42 81       	ldd	r20, Z+2	; 0x02
    1458:	53 81       	ldd	r21, Z+3	; 0x03
    145a:	64 81       	ldd	r22, Z+4	; 0x04
    145c:	75 81       	ldd	r23, Z+5	; 0x05
    145e:	86 17       	cp	r24, r22
    1460:	97 07       	cpc	r25, r23
    1462:	c9 f4       	brne	.+50     	; 0x1496 <__vector_9+0x7c>
    1464:	ca 01       	movw	r24, r20
    1466:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    146a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    146e:	42 1b       	sub	r20, r18
    1470:	53 0b       	sbc	r21, r19
    1472:	41 30       	cpi	r20, 0x01	; 1
    1474:	51 05       	cpc	r21, r1
    1476:	29 f4       	brne	.+10     	; 0x1482 <__vector_9+0x68>
    1478:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    147c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1480:	01 96       	adiw	r24, 0x01	; 1
    1482:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1486:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    148a:	ef e6       	ldi	r30, 0x6F	; 111
    148c:	f0 e0       	ldi	r31, 0x00	; 0
    148e:	80 81       	ld	r24, Z
    1490:	82 60       	ori	r24, 0x02	; 2
    1492:	80 83       	st	Z, r24
    1494:	05 c0       	rjmp	.+10     	; 0x14a0 <__vector_9+0x86>
    1496:	ef e6       	ldi	r30, 0x6F	; 111
    1498:	f0 e0       	ldi	r31, 0x00	; 0
    149a:	80 81       	ld	r24, Z
    149c:	8d 7f       	andi	r24, 0xFD	; 253
    149e:	80 83       	st	Z, r24
}
    14a0:	ff 91       	pop	r31
    14a2:	ef 91       	pop	r30
    14a4:	9f 91       	pop	r25
    14a6:	8f 91       	pop	r24
    14a8:	7f 91       	pop	r23
    14aa:	6f 91       	pop	r22
    14ac:	5f 91       	pop	r21
    14ae:	4f 91       	pop	r20
    14b0:	3f 91       	pop	r19
    14b2:	2f 91       	pop	r18
    14b4:	0f 90       	pop	r0
    14b6:	0f be       	out	0x3f, r0	; 63
    14b8:	0f 90       	pop	r0
    14ba:	1f 90       	pop	r1
    14bc:	18 95       	reti

000014be <__vector_7>:

TIMER_COMPARE_INTERRUPT {
    14be:	1f 92       	push	r1
    14c0:	0f 92       	push	r0
    14c2:	0f b6       	in	r0, 0x3f	; 63
    14c4:	0f 92       	push	r0
    14c6:	11 24       	eor	r1, r1
    14c8:	cf 92       	push	r12
    14ca:	df 92       	push	r13
    14cc:	ef 92       	push	r14
    14ce:	ff 92       	push	r15
    14d0:	2f 93       	push	r18
    14d2:	3f 93       	push	r19
    14d4:	4f 93       	push	r20
    14d6:	5f 93       	push	r21
    14d8:	6f 93       	push	r22
    14da:	7f 93       	push	r23
    14dc:	8f 93       	push	r24
    14de:	9f 93       	push	r25
    14e0:	af 93       	push	r26
    14e2:	bf 93       	push	r27
    14e4:	ef 93       	push	r30
    14e6:	ff 93       	push	r31
    Time now;
    TIMER_CCLR();
    TIMERGET(now);
    14e8:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
    14ec:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
    14f0:	6c 01       	movw	r12, r24
    14f2:	09 2e       	mov	r0, r25
    14f4:	00 0c       	add	r0, r0
    14f6:	ee 08       	sbc	r14, r14
    14f8:	ff 08       	sbc	r15, r15
    14fa:	76 01       	movw	r14, r12
    14fc:	dd 24       	eor	r13, r13
    14fe:	cc 24       	eor	r12, r12
    1500:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1504:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1508:	60 e0       	ldi	r22, 0x00	; 0
    150a:	70 e0       	ldi	r23, 0x00	; 0
    150c:	c4 2a       	or	r12, r20
    150e:	d5 2a       	or	r13, r21
    1510:	e6 2a       	or	r14, r22
    1512:	f7 2a       	or	r15, r23
    1514:	b0 9b       	sbis	0x16, 0	; 22
    1516:	1e c0       	rjmp	.+60     	; 0x1554 <__vector_7+0x96>
    1518:	6c 01       	movw	r12, r24
    151a:	2f ef       	ldi	r18, 0xFF	; 255
    151c:	c2 1a       	sub	r12, r18
    151e:	d2 0a       	sbc	r13, r18
    1520:	0d 2c       	mov	r0, r13
    1522:	00 0c       	add	r0, r0
    1524:	ee 08       	sbc	r14, r14
    1526:	ff 08       	sbc	r15, r15
    1528:	d6 01       	movw	r26, r12
    152a:	99 27       	eor	r25, r25
    152c:	88 27       	eor	r24, r24
    152e:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1532:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1536:	e1 2c       	mov	r14, r1
    1538:	f1 2c       	mov	r15, r1
    153a:	c8 2a       	or	r12, r24
    153c:	d9 2a       	or	r13, r25
    153e:	ea 2a       	or	r14, r26
    1540:	fb 2a       	or	r15, r27
    1542:	08 c0       	rjmp	.+16     	; 0x1554 <__vector_7+0x96>
    while (timerQ && (timerQ->baseline - now <= 0))
        enqueueByDeadline( dequeue(&timerQ), &msgQ );
    1544:	88 e3       	ldi	r24, 0x38	; 56
    1546:	91 e0       	ldi	r25, 0x01	; 1
    1548:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <dequeue>
    154c:	6a e3       	ldi	r22, 0x3A	; 58
    154e:	71 e0       	ldi	r23, 0x01	; 1
    1550:	0e 94 af 01 	call	0x35e	; 0x35e <enqueueByDeadline>

TIMER_COMPARE_INTERRUPT {
    Time now;
    TIMER_CCLR();
    TIMERGET(now);
    while (timerQ && (timerQ->baseline - now <= 0))
    1554:	e0 91 38 01 	lds	r30, 0x0138	; 0x800138 <timerQ>
    1558:	f0 91 39 01 	lds	r31, 0x0139	; 0x800139 <timerQ+0x1>
    155c:	30 97       	sbiw	r30, 0x00	; 0
    155e:	69 f0       	breq	.+26     	; 0x157a <__vector_7+0xbc>
    1560:	82 81       	ldd	r24, Z+2	; 0x02
    1562:	93 81       	ldd	r25, Z+3	; 0x03
    1564:	a4 81       	ldd	r26, Z+4	; 0x04
    1566:	b5 81       	ldd	r27, Z+5	; 0x05
    1568:	8c 19       	sub	r24, r12
    156a:	9d 09       	sbc	r25, r13
    156c:	ae 09       	sbc	r26, r14
    156e:	bf 09       	sbc	r27, r15
    1570:	18 16       	cp	r1, r24
    1572:	19 06       	cpc	r1, r25
    1574:	1a 06       	cpc	r1, r26
    1576:	1b 06       	cpc	r1, r27
    1578:	2c f7       	brge	.-54     	; 0x1544 <__vector_7+0x86>
        enqueueByDeadline( dequeue(&timerQ), &msgQ );
    TIMERSET(timerQ);
    157a:	30 97       	sbiw	r30, 0x00	; 0
    157c:	21 f1       	breq	.+72     	; 0x15c6 <__vector_7+0x108>
    157e:	82 81       	ldd	r24, Z+2	; 0x02
    1580:	93 81       	ldd	r25, Z+3	; 0x03
    1582:	a4 81       	ldd	r26, Z+4	; 0x04
    1584:	b5 81       	ldd	r27, Z+5	; 0x05
    1586:	20 91 32 01 	lds	r18, 0x0132	; 0x800132 <__data_end>
    158a:	30 91 33 01 	lds	r19, 0x0133	; 0x800133 <__data_end+0x1>
    158e:	2a 17       	cp	r18, r26
    1590:	3b 07       	cpc	r19, r27
    1592:	c9 f4       	brne	.+50     	; 0x15c6 <__vector_7+0x108>
    1594:	9c 01       	movw	r18, r24
    1596:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    159a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    159e:	84 1b       	sub	r24, r20
    15a0:	95 0b       	sbc	r25, r21
    15a2:	01 97       	sbiw	r24, 0x01	; 1
    15a4:	31 f4       	brne	.+12     	; 0x15b2 <__vector_7+0xf4>
    15a6:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15aa:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15ae:	2f 5f       	subi	r18, 0xFF	; 255
    15b0:	3f 4f       	sbci	r19, 0xFF	; 255
    15b2:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    15b6:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    15ba:	ef e6       	ldi	r30, 0x6F	; 111
    15bc:	f0 e0       	ldi	r31, 0x00	; 0
    15be:	80 81       	ld	r24, Z
    15c0:	82 60       	ori	r24, 0x02	; 2
    15c2:	80 83       	st	Z, r24
    15c4:	05 c0       	rjmp	.+10     	; 0x15d0 <__vector_7+0x112>
    15c6:	ef e6       	ldi	r30, 0x6F	; 111
    15c8:	f0 e0       	ldi	r31, 0x00	; 0
    15ca:	80 81       	ld	r24, Z
    15cc:	8d 7f       	andi	r24, 0xFD	; 253
    15ce:	80 83       	st	Z, r24
    schedule();
    15d0:	0e 94 0b 02 	call	0x416	; 0x416 <schedule>
}
    15d4:	ff 91       	pop	r31
    15d6:	ef 91       	pop	r30
    15d8:	bf 91       	pop	r27
    15da:	af 91       	pop	r26
    15dc:	9f 91       	pop	r25
    15de:	8f 91       	pop	r24
    15e0:	7f 91       	pop	r23
    15e2:	6f 91       	pop	r22
    15e4:	5f 91       	pop	r21
    15e6:	4f 91       	pop	r20
    15e8:	3f 91       	pop	r19
    15ea:	2f 91       	pop	r18
    15ec:	ff 90       	pop	r15
    15ee:	ef 90       	pop	r14
    15f0:	df 90       	pop	r13
    15f2:	cf 90       	pop	r12
    15f4:	0f 90       	pop	r0
    15f6:	0f be       	out	0x3f, r0	; 63
    15f8:	0f 90       	pop	r0
    15fa:	1f 90       	pop	r1
    15fc:	18 95       	reti

000015fe <__divmodsi4>:
    15fe:	05 2e       	mov	r0, r21
    1600:	97 fb       	bst	r25, 7
    1602:	1e f4       	brtc	.+6      	; 0x160a <__divmodsi4+0xc>
    1604:	00 94       	com	r0
    1606:	0e 94 16 0b 	call	0x162c	; 0x162c <__negsi2>
    160a:	57 fd       	sbrc	r21, 7
    160c:	07 d0       	rcall	.+14     	; 0x161c <__divmodsi4_neg2>
    160e:	0e 94 1e 0b 	call	0x163c	; 0x163c <__udivmodsi4>
    1612:	07 fc       	sbrc	r0, 7
    1614:	03 d0       	rcall	.+6      	; 0x161c <__divmodsi4_neg2>
    1616:	4e f4       	brtc	.+18     	; 0x162a <__divmodsi4_exit>
    1618:	0c 94 16 0b 	jmp	0x162c	; 0x162c <__negsi2>

0000161c <__divmodsi4_neg2>:
    161c:	50 95       	com	r21
    161e:	40 95       	com	r20
    1620:	30 95       	com	r19
    1622:	21 95       	neg	r18
    1624:	3f 4f       	sbci	r19, 0xFF	; 255
    1626:	4f 4f       	sbci	r20, 0xFF	; 255
    1628:	5f 4f       	sbci	r21, 0xFF	; 255

0000162a <__divmodsi4_exit>:
    162a:	08 95       	ret

0000162c <__negsi2>:
    162c:	90 95       	com	r25
    162e:	80 95       	com	r24
    1630:	70 95       	com	r23
    1632:	61 95       	neg	r22
    1634:	7f 4f       	sbci	r23, 0xFF	; 255
    1636:	8f 4f       	sbci	r24, 0xFF	; 255
    1638:	9f 4f       	sbci	r25, 0xFF	; 255
    163a:	08 95       	ret

0000163c <__udivmodsi4>:
    163c:	a1 e2       	ldi	r26, 0x21	; 33
    163e:	1a 2e       	mov	r1, r26
    1640:	aa 1b       	sub	r26, r26
    1642:	bb 1b       	sub	r27, r27
    1644:	fd 01       	movw	r30, r26
    1646:	0d c0       	rjmp	.+26     	; 0x1662 <__udivmodsi4_ep>

00001648 <__udivmodsi4_loop>:
    1648:	aa 1f       	adc	r26, r26
    164a:	bb 1f       	adc	r27, r27
    164c:	ee 1f       	adc	r30, r30
    164e:	ff 1f       	adc	r31, r31
    1650:	a2 17       	cp	r26, r18
    1652:	b3 07       	cpc	r27, r19
    1654:	e4 07       	cpc	r30, r20
    1656:	f5 07       	cpc	r31, r21
    1658:	20 f0       	brcs	.+8      	; 0x1662 <__udivmodsi4_ep>
    165a:	a2 1b       	sub	r26, r18
    165c:	b3 0b       	sbc	r27, r19
    165e:	e4 0b       	sbc	r30, r20
    1660:	f5 0b       	sbc	r31, r21

00001662 <__udivmodsi4_ep>:
    1662:	66 1f       	adc	r22, r22
    1664:	77 1f       	adc	r23, r23
    1666:	88 1f       	adc	r24, r24
    1668:	99 1f       	adc	r25, r25
    166a:	1a 94       	dec	r1
    166c:	69 f7       	brne	.-38     	; 0x1648 <__udivmodsi4_loop>
    166e:	60 95       	com	r22
    1670:	70 95       	com	r23
    1672:	80 95       	com	r24
    1674:	90 95       	com	r25
    1676:	9b 01       	movw	r18, r22
    1678:	ac 01       	movw	r20, r24
    167a:	bd 01       	movw	r22, r26
    167c:	cf 01       	movw	r24, r30
    167e:	08 95       	ret

00001680 <setjmp>:
    1680:	dc 01       	movw	r26, r24
    1682:	2d 92       	st	X+, r2
    1684:	3d 92       	st	X+, r3
    1686:	4d 92       	st	X+, r4
    1688:	5d 92       	st	X+, r5
    168a:	6d 92       	st	X+, r6
    168c:	7d 92       	st	X+, r7
    168e:	8d 92       	st	X+, r8
    1690:	9d 92       	st	X+, r9
    1692:	ad 92       	st	X+, r10
    1694:	bd 92       	st	X+, r11
    1696:	cd 92       	st	X+, r12
    1698:	dd 92       	st	X+, r13
    169a:	ed 92       	st	X+, r14
    169c:	fd 92       	st	X+, r15
    169e:	0d 93       	st	X+, r16
    16a0:	1d 93       	st	X+, r17
    16a2:	cd 93       	st	X+, r28
    16a4:	dd 93       	st	X+, r29
    16a6:	ff 91       	pop	r31
    16a8:	ef 91       	pop	r30
    16aa:	8d b7       	in	r24, 0x3d	; 61
    16ac:	8d 93       	st	X+, r24
    16ae:	8e b7       	in	r24, 0x3e	; 62
    16b0:	8d 93       	st	X+, r24
    16b2:	8f b7       	in	r24, 0x3f	; 63
    16b4:	8d 93       	st	X+, r24
    16b6:	ed 93       	st	X+, r30
    16b8:	fd 93       	st	X+, r31
    16ba:	88 27       	eor	r24, r24
    16bc:	99 27       	eor	r25, r25
    16be:	09 94       	ijmp

000016c0 <longjmp>:
    16c0:	dc 01       	movw	r26, r24
    16c2:	cb 01       	movw	r24, r22
    16c4:	81 30       	cpi	r24, 0x01	; 1
    16c6:	91 05       	cpc	r25, r1
    16c8:	81 1d       	adc	r24, r1
    16ca:	2d 90       	ld	r2, X+
    16cc:	3d 90       	ld	r3, X+
    16ce:	4d 90       	ld	r4, X+
    16d0:	5d 90       	ld	r5, X+
    16d2:	6d 90       	ld	r6, X+
    16d4:	7d 90       	ld	r7, X+
    16d6:	8d 90       	ld	r8, X+
    16d8:	9d 90       	ld	r9, X+
    16da:	ad 90       	ld	r10, X+
    16dc:	bd 90       	ld	r11, X+
    16de:	cd 90       	ld	r12, X+
    16e0:	dd 90       	ld	r13, X+
    16e2:	ed 90       	ld	r14, X+
    16e4:	fd 90       	ld	r15, X+
    16e6:	0d 91       	ld	r16, X+
    16e8:	1d 91       	ld	r17, X+
    16ea:	cd 91       	ld	r28, X+
    16ec:	dd 91       	ld	r29, X+
    16ee:	ed 91       	ld	r30, X+
    16f0:	fd 91       	ld	r31, X+
    16f2:	0d 90       	ld	r0, X+
    16f4:	f8 94       	cli
    16f6:	fe bf       	out	0x3e, r31	; 62
    16f8:	0f be       	out	0x3f, r0	; 63
    16fa:	ed bf       	out	0x3d, r30	; 61
    16fc:	ed 91       	ld	r30, X+
    16fe:	fd 91       	ld	r31, X+
    1700:	09 94       	ijmp

00001702 <_exit>:
    1702:	f8 94       	cli

00001704 <__stop_program>:
    1704:	ff cf       	rjmp	.-2      	; 0x1704 <__stop_program>
