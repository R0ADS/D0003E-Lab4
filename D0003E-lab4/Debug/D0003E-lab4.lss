
D0003E-lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800100  00002284  00002318  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002284  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000035b  00800136  00800136  0000234e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000234e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002380  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000298  00000000  00000000  000023c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002fa1  00000000  00000000  00002658  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000120d  00000000  00000000  000055f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001750  00000000  00000000  00006806  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d80  00000000  00000000  00007f58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a01  00000000  00000000  00008cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002a07  00000000  00000000  000096d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000248  00000000  00000000  0000c0e0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__vector_1>
       8:	0c 94 51 06 	jmp	0xca2	; 0xca2 <__vector_2>
       c:	0c 94 c0 06 	jmp	0xd80	; 0xd80 <__vector_3>
      10:	0c 94 2f 07 	jmp	0xe5e	; 0xe5e <__vector_4>
      14:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 09 0e 	jmp	0x1c12	; 0x1c12 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 b7 0d 	jmp	0x1b6e	; 0x1b6e <__vector_9>
      28:	0c 94 0d 08 	jmp	0x101a	; 0x101a <__vector_10>
      2c:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <__vector_11>
      30:	0c 94 eb 08 	jmp	0x11d6	; 0x11d6 <__vector_12>
      34:	0c 94 5a 09 	jmp	0x12b4	; 0x12b4 <__vector_13>
      38:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__vector_14>
      3c:	0c 94 38 0a 	jmp	0x1470	; 0x1470 <__vector_15>
      40:	0c 94 a7 0a 	jmp	0x154e	; 0x154e <__vector_16>
      44:	0c 94 16 0b 	jmp	0x162c	; 0x162c <__vector_17>
      48:	0c 94 85 0b 	jmp	0x170a	; 0x170a <__vector_18>
      4c:	0c 94 f4 0b 	jmp	0x17e8	; 0x17e8 <__vector_19>
      50:	0c 94 63 0c 	jmp	0x18c6	; 0x18c6 <__vector_20>
      54:	0c 94 d2 0c 	jmp	0x19a4	; 0x19a4 <__vector_21>
      58:	0c 94 41 0d 	jmp	0x1a82	; 0x1a82 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e4 e8       	ldi	r30, 0x84	; 132
      70:	f2 e2       	ldi	r31, 0x22	; 34
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a6 33       	cpi	r26, 0x36	; 54
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a6 e3       	ldi	r26, 0x36	; 54
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a1 39       	cpi	r26, 0x91	; 145
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 07 04 	call	0x80e	; 0x80e <main>
      92:	0c 94 40 11 	jmp	0x2280	; 0x2280 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <increase>:
#include <avr/io.h>

long currentFreq = 0;
long storedFreq;

void increase(Generators *self) {
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	cd b7       	in	r28, 0x3d	; 61
      ac:	de b7       	in	r29, 0x3e	; 62
      ae:	28 97       	sbiw	r28, 0x08	; 8
      b0:	0f b6       	in	r0, 0x3f	; 63
      b2:	f8 94       	cli
      b4:	de bf       	out	0x3e, r29	; 62
      b6:	0f be       	out	0x3f, r0	; 63
      b8:	cd bf       	out	0x3d, r28	; 61
    currentFreq++;
      ba:	40 91 36 01 	lds	r20, 0x0136	; 0x800136 <__data_end>
      be:	50 91 37 01 	lds	r21, 0x0137	; 0x800137 <__data_end+0x1>
      c2:	60 91 38 01 	lds	r22, 0x0138	; 0x800138 <__data_end+0x2>
      c6:	70 91 39 01 	lds	r23, 0x0139	; 0x800139 <__data_end+0x3>
      ca:	4f 5f       	subi	r20, 0xFF	; 255
      cc:	5f 4f       	sbci	r21, 0xFF	; 255
      ce:	6f 4f       	sbci	r22, 0xFF	; 255
      d0:	7f 4f       	sbci	r23, 0xFF	; 255
      d2:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <__data_end>
      d6:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <__data_end+0x1>
      da:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <__data_end+0x2>
      de:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <__data_end+0x3>
    if (self->isRight) {
      e2:	fc 01       	movw	r30, r24
      e4:	22 81       	ldd	r18, Z+2	; 0x02
      e6:	33 81       	ldd	r19, Z+3	; 0x03
      e8:	23 2b       	or	r18, r19
      ea:	e1 f0       	breq	.+56     	; 0x124 <increase+0x8a>
        long temp[] = {0, currentFreq};
      ec:	19 82       	std	Y+1, r1	; 0x01
      ee:	1a 82       	std	Y+2, r1	; 0x02
      f0:	1b 82       	std	Y+3, r1	; 0x03
      f2:	1c 82       	std	Y+4, r1	; 0x04
      f4:	4d 83       	std	Y+5, r20	; 0x05
      f6:	5e 83       	std	Y+6, r21	; 0x06
      f8:	6f 83       	std	Y+7, r22	; 0x07
      fa:	78 87       	std	Y+8, r23	; 0x08
        ASYNC(self->lcd, printAt, temp);
      fc:	00 81       	ld	r16, Z
      fe:	11 81       	ldd	r17, Z+1	; 0x01
     100:	ce 01       	movw	r24, r28
     102:	01 96       	adiw	r24, 0x01	; 1
     104:	6c 01       	movw	r12, r24
     106:	0f 2e       	mov	r0, r31
     108:	fd eb       	ldi	r31, 0xBD	; 189
     10a:	ef 2e       	mov	r14, r31
     10c:	f3 e0       	ldi	r31, 0x03	; 3
     10e:	ff 2e       	mov	r15, r31
     110:	f0 2d       	mov	r31, r0
     112:	20 e0       	ldi	r18, 0x00	; 0
     114:	30 e0       	ldi	r19, 0x00	; 0
     116:	a9 01       	movw	r20, r18
     118:	60 e0       	ldi	r22, 0x00	; 0
     11a:	70 e0       	ldi	r23, 0x00	; 0
     11c:	cb 01       	movw	r24, r22
     11e:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
     122:	1c c0       	rjmp	.+56     	; 0x15c <increase+0xc2>
    }
    else {
        long temp[] = {0, currentFreq};
     124:	19 82       	std	Y+1, r1	; 0x01
     126:	1a 82       	std	Y+2, r1	; 0x02
     128:	1b 82       	std	Y+3, r1	; 0x03
     12a:	1c 82       	std	Y+4, r1	; 0x04
     12c:	4d 83       	std	Y+5, r20	; 0x05
     12e:	5e 83       	std	Y+6, r21	; 0x06
     130:	6f 83       	std	Y+7, r22	; 0x07
     132:	78 87       	std	Y+8, r23	; 0x08
        ASYNC(self->lcd, printAt, temp);
     134:	fc 01       	movw	r30, r24
     136:	00 81       	ld	r16, Z
     138:	11 81       	ldd	r17, Z+1	; 0x01
     13a:	ce 01       	movw	r24, r28
     13c:	01 96       	adiw	r24, 0x01	; 1
     13e:	6c 01       	movw	r12, r24
     140:	0f 2e       	mov	r0, r31
     142:	fd eb       	ldi	r31, 0xBD	; 189
     144:	ef 2e       	mov	r14, r31
     146:	f3 e0       	ldi	r31, 0x03	; 3
     148:	ff 2e       	mov	r15, r31
     14a:	f0 2d       	mov	r31, r0
     14c:	20 e0       	ldi	r18, 0x00	; 0
     14e:	30 e0       	ldi	r19, 0x00	; 0
     150:	a9 01       	movw	r20, r18
     152:	60 e0       	ldi	r22, 0x00	; 0
     154:	70 e0       	ldi	r23, 0x00	; 0
     156:	cb 01       	movw	r24, r22
     158:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
    }
    // Uppdatera frekvens f√∂r actual pulsgenerering
    
    
}
     15c:	28 96       	adiw	r28, 0x08	; 8
     15e:	0f b6       	in	r0, 0x3f	; 63
     160:	f8 94       	cli
     162:	de bf       	out	0x3e, r29	; 62
     164:	0f be       	out	0x3f, r0	; 63
     166:	cd bf       	out	0x3d, r28	; 61
     168:	df 91       	pop	r29
     16a:	cf 91       	pop	r28
     16c:	1f 91       	pop	r17
     16e:	0f 91       	pop	r16
     170:	ff 90       	pop	r15
     172:	ef 90       	pop	r14
     174:	df 90       	pop	r13
     176:	cf 90       	pop	r12
     178:	08 95       	ret

0000017a <decrease>:

// The thing that happens when pulling joystick down
void decrease(Generators *self) {
     17a:	cf 92       	push	r12
     17c:	df 92       	push	r13
     17e:	ef 92       	push	r14
     180:	ff 92       	push	r15
     182:	0f 93       	push	r16
     184:	1f 93       	push	r17
     186:	cf 93       	push	r28
     188:	df 93       	push	r29
     18a:	cd b7       	in	r28, 0x3d	; 61
     18c:	de b7       	in	r29, 0x3e	; 62
     18e:	28 97       	sbiw	r28, 0x08	; 8
     190:	0f b6       	in	r0, 0x3f	; 63
     192:	f8 94       	cli
     194:	de bf       	out	0x3e, r29	; 62
     196:	0f be       	out	0x3f, r0	; 63
     198:	cd bf       	out	0x3d, r28	; 61
    if (currentFreq > 0) {
     19a:	40 91 36 01 	lds	r20, 0x0136	; 0x800136 <__data_end>
     19e:	50 91 37 01 	lds	r21, 0x0137	; 0x800137 <__data_end+0x1>
     1a2:	60 91 38 01 	lds	r22, 0x0138	; 0x800138 <__data_end+0x2>
     1a6:	70 91 39 01 	lds	r23, 0x0139	; 0x800139 <__data_end+0x3>
     1aa:	14 16       	cp	r1, r20
     1ac:	15 06       	cpc	r1, r21
     1ae:	16 06       	cpc	r1, r22
     1b0:	17 06       	cpc	r1, r23
     1b2:	0c f0       	brlt	.+2      	; 0x1b6 <decrease+0x3c>
     1b4:	4c c0       	rjmp	.+152    	; 0x24e <__EEPROM_REGION_LENGTH__+0x4e>
     1b6:	fc 01       	movw	r30, r24
        currentFreq--;
     1b8:	41 50       	subi	r20, 0x01	; 1
     1ba:	51 09       	sbc	r21, r1
     1bc:	61 09       	sbc	r22, r1
     1be:	71 09       	sbc	r23, r1
     1c0:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <__data_end>
     1c4:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <__data_end+0x1>
     1c8:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <__data_end+0x2>
     1cc:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <__data_end+0x3>
        if (self->isRight) {
     1d0:	82 81       	ldd	r24, Z+2	; 0x02
     1d2:	93 81       	ldd	r25, Z+3	; 0x03
     1d4:	89 2b       	or	r24, r25
     1d6:	e1 f0       	breq	.+56     	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
            long temp[] = {0, currentFreq};
     1d8:	19 82       	std	Y+1, r1	; 0x01
     1da:	1a 82       	std	Y+2, r1	; 0x02
     1dc:	1b 82       	std	Y+3, r1	; 0x03
     1de:	1c 82       	std	Y+4, r1	; 0x04
     1e0:	4d 83       	std	Y+5, r20	; 0x05
     1e2:	5e 83       	std	Y+6, r21	; 0x06
     1e4:	6f 83       	std	Y+7, r22	; 0x07
     1e6:	78 87       	std	Y+8, r23	; 0x08
            ASYNC(self->lcd, printAt, temp);
     1e8:	00 81       	ld	r16, Z
     1ea:	11 81       	ldd	r17, Z+1	; 0x01
     1ec:	ce 01       	movw	r24, r28
     1ee:	01 96       	adiw	r24, 0x01	; 1
     1f0:	6c 01       	movw	r12, r24
     1f2:	0f 2e       	mov	r0, r31
     1f4:	fd eb       	ldi	r31, 0xBD	; 189
     1f6:	ef 2e       	mov	r14, r31
     1f8:	f3 e0       	ldi	r31, 0x03	; 3
     1fa:	ff 2e       	mov	r15, r31
     1fc:	f0 2d       	mov	r31, r0
     1fe:	20 e0       	ldi	r18, 0x00	; 0
     200:	30 e0       	ldi	r19, 0x00	; 0
     202:	a9 01       	movw	r20, r18
     204:	60 e0       	ldi	r22, 0x00	; 0
     206:	70 e0       	ldi	r23, 0x00	; 0
     208:	cb 01       	movw	r24, r22
     20a:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
     20e:	1f c0       	rjmp	.+62     	; 0x24e <__EEPROM_REGION_LENGTH__+0x4e>
        }
        else {
            long temp[] = {4, currentFreq};
     210:	84 e0       	ldi	r24, 0x04	; 4
     212:	90 e0       	ldi	r25, 0x00	; 0
     214:	a0 e0       	ldi	r26, 0x00	; 0
     216:	b0 e0       	ldi	r27, 0x00	; 0
     218:	89 83       	std	Y+1, r24	; 0x01
     21a:	9a 83       	std	Y+2, r25	; 0x02
     21c:	ab 83       	std	Y+3, r26	; 0x03
     21e:	bc 83       	std	Y+4, r27	; 0x04
     220:	4d 83       	std	Y+5, r20	; 0x05
     222:	5e 83       	std	Y+6, r21	; 0x06
     224:	6f 83       	std	Y+7, r22	; 0x07
     226:	78 87       	std	Y+8, r23	; 0x08
            ASYNC(self->lcd, printAt, temp);
     228:	00 81       	ld	r16, Z
     22a:	11 81       	ldd	r17, Z+1	; 0x01
     22c:	ce 01       	movw	r24, r28
     22e:	01 96       	adiw	r24, 0x01	; 1
     230:	6c 01       	movw	r12, r24
     232:	0f 2e       	mov	r0, r31
     234:	fd eb       	ldi	r31, 0xBD	; 189
     236:	ef 2e       	mov	r14, r31
     238:	f3 e0       	ldi	r31, 0x03	; 3
     23a:	ff 2e       	mov	r15, r31
     23c:	f0 2d       	mov	r31, r0
     23e:	20 e0       	ldi	r18, 0x00	; 0
     240:	30 e0       	ldi	r19, 0x00	; 0
     242:	a9 01       	movw	r20, r18
     244:	60 e0       	ldi	r22, 0x00	; 0
     246:	70 e0       	ldi	r23, 0x00	; 0
     248:	cb 01       	movw	r24, r22
     24a:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
        }
        // Uppdatara frekvens (os√§ker om man ska calla SYNC eller ASYNC)
    }
}
     24e:	28 96       	adiw	r28, 0x08	; 8
     250:	0f b6       	in	r0, 0x3f	; 63
     252:	f8 94       	cli
     254:	de bf       	out	0x3e, r29	; 62
     256:	0f be       	out	0x3f, r0	; 63
     258:	cd bf       	out	0x3d, r28	; 61
     25a:	df 91       	pop	r29
     25c:	cf 91       	pop	r28
     25e:	1f 91       	pop	r17
     260:	0f 91       	pop	r16
     262:	ff 90       	pop	r15
     264:	ef 90       	pop	r14
     266:	df 90       	pop	r13
     268:	cf 90       	pop	r12
     26a:	08 95       	ret

0000026c <press>:

// The thing that happens when pressing the joystick
void press(Generators *self) {
    if (currentFreq != 0) {
     26c:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__data_end>
     270:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <__data_end+0x1>
     274:	a0 91 38 01 	lds	r26, 0x0138	; 0x800138 <__data_end+0x2>
     278:	b0 91 39 01 	lds	r27, 0x0139	; 0x800139 <__data_end+0x3>
     27c:	00 97       	sbiw	r24, 0x00	; 0
     27e:	a1 05       	cpc	r26, r1
     280:	b1 05       	cpc	r27, r1
     282:	89 f0       	breq	.+34     	; 0x2a6 <press+0x3a>
        storedFreq = currentFreq;
     284:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <storedFreq>
     288:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <storedFreq+0x1>
     28c:	a0 93 46 01 	sts	0x0146, r26	; 0x800146 <storedFreq+0x2>
     290:	b0 93 47 01 	sts	0x0147, r27	; 0x800147 <storedFreq+0x3>
        currentFreq = 0;
     294:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <__data_end>
     298:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <__data_end+0x1>
     29c:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <__data_end+0x2>
     2a0:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <__data_end+0x3>
     2a4:	08 95       	ret
    }
    else {
        currentFreq = storedFreq;
     2a6:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <storedFreq>
     2aa:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <storedFreq+0x1>
     2ae:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <storedFreq+0x2>
     2b2:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <storedFreq+0x3>
     2b6:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__data_end>
     2ba:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <__data_end+0x1>
     2be:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <__data_end+0x2>
     2c2:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <__data_end+0x3>
     2c6:	08 95       	ret

000002c8 <increaseGui>:
}

void switchGeneratorGui(Gui *self) {
    ASYNC(self->lcd, switchSegment, NULL);
    isRight = !(isRight);
}
     2c8:	cf 92       	push	r12
     2ca:	df 92       	push	r13
     2cc:	ef 92       	push	r14
     2ce:	ff 92       	push	r15
     2d0:	0f 93       	push	r16
     2d2:	1f 93       	push	r17
     2d4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     2d8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     2dc:	23 2b       	or	r18, r19
     2de:	a1 f0       	breq	.+40     	; 0x308 <increaseGui+0x40>
     2e0:	fc 01       	movw	r30, r24
     2e2:	02 81       	ldd	r16, Z+2	; 0x02
     2e4:	13 81       	ldd	r17, Z+3	; 0x03
     2e6:	c1 2c       	mov	r12, r1
     2e8:	d1 2c       	mov	r13, r1
     2ea:	0f 2e       	mov	r0, r31
     2ec:	fd e4       	ldi	r31, 0x4D	; 77
     2ee:	ef 2e       	mov	r14, r31
     2f0:	f0 e0       	ldi	r31, 0x00	; 0
     2f2:	ff 2e       	mov	r15, r31
     2f4:	f0 2d       	mov	r31, r0
     2f6:	20 e0       	ldi	r18, 0x00	; 0
     2f8:	30 e0       	ldi	r19, 0x00	; 0
     2fa:	a9 01       	movw	r20, r18
     2fc:	60 e0       	ldi	r22, 0x00	; 0
     2fe:	70 e0       	ldi	r23, 0x00	; 0
     300:	cb 01       	movw	r24, r22
     302:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
     306:	13 c0       	rjmp	.+38     	; 0x32e <increaseGui+0x66>
     308:	fc 01       	movw	r30, r24
     30a:	00 81       	ld	r16, Z
     30c:	11 81       	ldd	r17, Z+1	; 0x01
     30e:	c1 2c       	mov	r12, r1
     310:	d1 2c       	mov	r13, r1
     312:	0f 2e       	mov	r0, r31
     314:	fd e4       	ldi	r31, 0x4D	; 77
     316:	ef 2e       	mov	r14, r31
     318:	f0 e0       	ldi	r31, 0x00	; 0
     31a:	ff 2e       	mov	r15, r31
     31c:	f0 2d       	mov	r31, r0
     31e:	20 e0       	ldi	r18, 0x00	; 0
     320:	30 e0       	ldi	r19, 0x00	; 0
     322:	a9 01       	movw	r20, r18
     324:	60 e0       	ldi	r22, 0x00	; 0
     326:	70 e0       	ldi	r23, 0x00	; 0
     328:	cb 01       	movw	r24, r22
     32a:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
     32e:	1f 91       	pop	r17
     330:	0f 91       	pop	r16
     332:	ff 90       	pop	r15
     334:	ef 90       	pop	r14
     336:	df 90       	pop	r13
     338:	cf 90       	pop	r12
     33a:	08 95       	ret

0000033c <decreaseGui>:
     33c:	cf 92       	push	r12
     33e:	df 92       	push	r13
     340:	ef 92       	push	r14
     342:	ff 92       	push	r15
     344:	0f 93       	push	r16
     346:	1f 93       	push	r17
     348:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     34c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     350:	23 2b       	or	r18, r19
     352:	a1 f0       	breq	.+40     	; 0x37c <decreaseGui+0x40>
     354:	fc 01       	movw	r30, r24
     356:	02 81       	ldd	r16, Z+2	; 0x02
     358:	13 81       	ldd	r17, Z+3	; 0x03
     35a:	c1 2c       	mov	r12, r1
     35c:	d1 2c       	mov	r13, r1
     35e:	0f 2e       	mov	r0, r31
     360:	fd eb       	ldi	r31, 0xBD	; 189
     362:	ef 2e       	mov	r14, r31
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	ff 2e       	mov	r15, r31
     368:	f0 2d       	mov	r31, r0
     36a:	20 e0       	ldi	r18, 0x00	; 0
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	a9 01       	movw	r20, r18
     370:	60 e0       	ldi	r22, 0x00	; 0
     372:	70 e0       	ldi	r23, 0x00	; 0
     374:	cb 01       	movw	r24, r22
     376:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
     37a:	13 c0       	rjmp	.+38     	; 0x3a2 <decreaseGui+0x66>
     37c:	fc 01       	movw	r30, r24
     37e:	00 81       	ld	r16, Z
     380:	11 81       	ldd	r17, Z+1	; 0x01
     382:	c1 2c       	mov	r12, r1
     384:	d1 2c       	mov	r13, r1
     386:	0f 2e       	mov	r0, r31
     388:	fd eb       	ldi	r31, 0xBD	; 189
     38a:	ef 2e       	mov	r14, r31
     38c:	f3 e0       	ldi	r31, 0x03	; 3
     38e:	ff 2e       	mov	r15, r31
     390:	f0 2d       	mov	r31, r0
     392:	20 e0       	ldi	r18, 0x00	; 0
     394:	30 e0       	ldi	r19, 0x00	; 0
     396:	a9 01       	movw	r20, r18
     398:	60 e0       	ldi	r22, 0x00	; 0
     39a:	70 e0       	ldi	r23, 0x00	; 0
     39c:	cb 01       	movw	r24, r22
     39e:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
     3a2:	1f 91       	pop	r17
     3a4:	0f 91       	pop	r16
     3a6:	ff 90       	pop	r15
     3a8:	ef 90       	pop	r14
     3aa:	df 90       	pop	r13
     3ac:	cf 90       	pop	r12
     3ae:	08 95       	ret

000003b0 <pressGui>:

void pressGui(Gui *self) {
     3b0:	cf 92       	push	r12
     3b2:	df 92       	push	r13
     3b4:	ef 92       	push	r14
     3b6:	ff 92       	push	r15
     3b8:	0f 93       	push	r16
     3ba:	1f 93       	push	r17
    if (isRight) {
     3bc:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     3c0:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     3c4:	23 2b       	or	r18, r19
     3c6:	a1 f0       	breq	.+40     	; 0x3f0 <pressGui+0x40>
        ASYNC(self->genR, press, NULL);
     3c8:	fc 01       	movw	r30, r24
     3ca:	02 81       	ldd	r16, Z+2	; 0x02
     3cc:	13 81       	ldd	r17, Z+3	; 0x03
     3ce:	c1 2c       	mov	r12, r1
     3d0:	d1 2c       	mov	r13, r1
     3d2:	0f 2e       	mov	r0, r31
     3d4:	f6 e3       	ldi	r31, 0x36	; 54
     3d6:	ef 2e       	mov	r14, r31
     3d8:	f1 e0       	ldi	r31, 0x01	; 1
     3da:	ff 2e       	mov	r15, r31
     3dc:	f0 2d       	mov	r31, r0
     3de:	20 e0       	ldi	r18, 0x00	; 0
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	a9 01       	movw	r20, r18
     3e4:	60 e0       	ldi	r22, 0x00	; 0
     3e6:	70 e0       	ldi	r23, 0x00	; 0
     3e8:	cb 01       	movw	r24, r22
     3ea:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
     3ee:	13 c0       	rjmp	.+38     	; 0x416 <__DATA_REGION_LENGTH__+0x16>
    }
    else {
        ASYNC(self->genL, press, NULL);
     3f0:	fc 01       	movw	r30, r24
     3f2:	00 81       	ld	r16, Z
     3f4:	11 81       	ldd	r17, Z+1	; 0x01
     3f6:	c1 2c       	mov	r12, r1
     3f8:	d1 2c       	mov	r13, r1
     3fa:	0f 2e       	mov	r0, r31
     3fc:	f6 e3       	ldi	r31, 0x36	; 54
     3fe:	ef 2e       	mov	r14, r31
     400:	f1 e0       	ldi	r31, 0x01	; 1
     402:	ff 2e       	mov	r15, r31
     404:	f0 2d       	mov	r31, r0
     406:	20 e0       	ldi	r18, 0x00	; 0
     408:	30 e0       	ldi	r19, 0x00	; 0
     40a:	a9 01       	movw	r20, r18
     40c:	60 e0       	ldi	r22, 0x00	; 0
     40e:	70 e0       	ldi	r23, 0x00	; 0
     410:	cb 01       	movw	r24, r22
     412:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
    }
}
     416:	1f 91       	pop	r17
     418:	0f 91       	pop	r16
     41a:	ff 90       	pop	r15
     41c:	ef 90       	pop	r14
     41e:	df 90       	pop	r13
     420:	cf 90       	pop	r12
     422:	08 95       	ret

00000424 <Init>:
 */ 
#include <avr/io.h>
#include "Init.h"

void Init(void) {
	CLKPR = 0x80;    // Fix clock speed
     424:	e1 e6       	ldi	r30, 0x61	; 97
     426:	f0 e0       	ldi	r31, 0x00	; 0
     428:	80 e8       	ldi	r24, 0x80	; 128
     42a:	80 83       	st	Z, r24
	CLKPR = 0x00;
     42c:	10 82       	st	Z, r1
	
	// LCD init
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     42e:	9f e0       	ldi	r25, 0x0F	; 15
     430:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	//       (                      Voltage                              )
	LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     434:	97 eb       	ldi	r25, 0xB7	; 183
     436:	90 93 e5 00 	sts	0x00E5, r25	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	//       (asynch ext)   (        duty cycle           )   (                  segments                 )
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     43a:	97 e0       	ldi	r25, 0x07	; 7
     43c:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	//       (            Delen med D                    )
	LCDCRA = (1 << LCDAB) | (1 << LCDEN);
     440:	90 ec       	ldi	r25, 0xC0	; 192
     442:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	//       (low power )   (enable lcd)
	
	// Stuffs for the joystick and interrupt
	PORTB = SET(PB7) | SET(PB6) | SET(PB4);					// Set corresponding Output pin for up, down and in
     446:	90 ed       	ldi	r25, 0xD0	; 208
     448:	95 b9       	out	0x05, r25	; 5
	DDRB = SET(DDB7);										// Unsure
     44a:	84 b9       	out	0x04, r24	; 4

	PORTE = SET(PE2) | SET(PE3);							// Set corresponding Output pin for Left and Right
     44c:	8c e0       	ldi	r24, 0x0C	; 12
     44e:	8e b9       	out	0x0e, r24	; 14
	DDRE = SET(DDE2) | SET(DDE3);						
     450:	8d b9       	out	0x0d, r24	; 13
	PCMSK1 |= SET(PCINT15) | SET(PCINT14) | SET(PCINT12);	// Pin change interrupt 1
     452:	ec e6       	ldi	r30, 0x6C	; 108
     454:	f0 e0       	ldi	r31, 0x00	; 0
     456:	80 81       	ld	r24, Z
     458:	80 6d       	ori	r24, 0xD0	; 208
     45a:	80 83       	st	Z, r24
	PCMSK0 |= SET(PCINT2) | SET(PCINT3);
     45c:	eb e6       	ldi	r30, 0x6B	; 107
     45e:	f0 e0       	ldi	r31, 0x00	; 0
     460:	80 81       	ld	r24, Z
     462:	8c 60       	ori	r24, 0x0C	; 12
     464:	80 83       	st	Z, r24
	EIMSK |= SET(PCIE1) | SET(PCIE0);						// Enalbe pin change on I/O pin 7
     466:	8d b3       	in	r24, 0x1d	; 29
     468:	80 6c       	ori	r24, 0xC0	; 192
     46a:	8d bb       	out	0x1d, r24	; 29
     46c:	08 95       	ret

0000046e <FreqChange>:
#include <avr/io.h>
#include "InteruptHandler.h"
#include "TinyTimber.h"
#include "Joystick.h"

void FreqChange(InteruptHandler *self){
     46e:	cf 92       	push	r12
     470:	df 92       	push	r13
     472:	ef 92       	push	r14
     474:	ff 92       	push	r15
     476:	0f 93       	push	r16
     478:	1f 93       	push	r17
    ASYNC(self->Joystick, joystickVert, NULL);
     47a:	fc 01       	movw	r30, r24
     47c:	00 81       	ld	r16, Z
     47e:	11 81       	ldd	r17, Z+1	; 0x01
     480:	c1 2c       	mov	r12, r1
     482:	d1 2c       	mov	r13, r1
     484:	0f 2e       	mov	r0, r31
     486:	ff e7       	ldi	r31, 0x7F	; 127
     488:	ef 2e       	mov	r14, r31
     48a:	f2 e0       	ldi	r31, 0x02	; 2
     48c:	ff 2e       	mov	r15, r31
     48e:	f0 2d       	mov	r31, r0
     490:	20 e0       	ldi	r18, 0x00	; 0
     492:	30 e0       	ldi	r19, 0x00	; 0
     494:	a9 01       	movw	r20, r18
     496:	60 e0       	ldi	r22, 0x00	; 0
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	cb 01       	movw	r24, r22
     49c:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
}
     4a0:	1f 91       	pop	r17
     4a2:	0f 91       	pop	r16
     4a4:	ff 90       	pop	r15
     4a6:	ef 90       	pop	r14
     4a8:	df 90       	pop	r13
     4aa:	cf 90       	pop	r12
     4ac:	08 95       	ret

000004ae <genSwitch>:

void genSwitch(InteruptHandler *self) {
     4ae:	cf 92       	push	r12
     4b0:	df 92       	push	r13
     4b2:	ef 92       	push	r14
     4b4:	ff 92       	push	r15
     4b6:	0f 93       	push	r16
     4b8:	1f 93       	push	r17
	if (self->risingEdge) {
     4ba:	fc 01       	movw	r30, r24
     4bc:	24 81       	ldd	r18, Z+4	; 0x04
     4be:	22 23       	and	r18, r18
     4c0:	a1 f0       	breq	.+40     	; 0x4ea <genSwitch+0x3c>
		self->risingEdge = false;
     4c2:	14 82       	std	Z+4, r1	; 0x04
		ASYNC(self->gui, pressGui, NULL);
     4c4:	02 81       	ldd	r16, Z+2	; 0x02
     4c6:	13 81       	ldd	r17, Z+3	; 0x03
     4c8:	c1 2c       	mov	r12, r1
     4ca:	d1 2c       	mov	r13, r1
     4cc:	0f 2e       	mov	r0, r31
     4ce:	f8 ed       	ldi	r31, 0xD8	; 216
     4d0:	ef 2e       	mov	r14, r31
     4d2:	f1 e0       	ldi	r31, 0x01	; 1
     4d4:	ff 2e       	mov	r15, r31
     4d6:	f0 2d       	mov	r31, r0
     4d8:	20 e0       	ldi	r18, 0x00	; 0
     4da:	30 e0       	ldi	r19, 0x00	; 0
     4dc:	a9 01       	movw	r20, r18
     4de:	60 e0       	ldi	r22, 0x00	; 0
     4e0:	70 e0       	ldi	r23, 0x00	; 0
     4e2:	cb 01       	movw	r24, r22
     4e4:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
     4e8:	03 c0       	rjmp	.+6      	; 0x4f0 <genSwitch+0x42>
	}
	else{
		self->risingEdge = true;
     4ea:	21 e0       	ldi	r18, 0x01	; 1
     4ec:	fc 01       	movw	r30, r24
     4ee:	24 83       	std	Z+4, r18	; 0x04
	}
}
     4f0:	1f 91       	pop	r17
     4f2:	0f 91       	pop	r16
     4f4:	ff 90       	pop	r15
     4f6:	ef 90       	pop	r14
     4f8:	df 90       	pop	r13
     4fa:	cf 90       	pop	r12
     4fc:	08 95       	ret

000004fe <joystickVert>:
#include <stdbool.h>
#include <avr/io.h>
#include "Joystick.h"


int joystickVert(Joystick *self){
     4fe:	cf 92       	push	r12
     500:	df 92       	push	r13
     502:	ef 92       	push	r14
     504:	ff 92       	push	r15
     506:	0f 93       	push	r16
     508:	1f 93       	push	r17
     50a:	cf 93       	push	r28
     50c:	df 93       	push	r29
     50e:	ec 01       	movw	r28, r24
	if (!(PINB & (1 << PB7))) { //ner klickning
     510:	1f 99       	sbic	0x03, 7	; 3
     512:	22 c0       	rjmp	.+68     	; 0x558 <__stack+0x59>
		ASYNC(self->gui, decreaseGui, NULL); // Kalla pÔøΩ GUI fÔøΩr att sÔøΩnka frekvensen
     514:	08 81       	ld	r16, Y
     516:	19 81       	ldd	r17, Y+1	; 0x01
     518:	c1 2c       	mov	r12, r1
     51a:	d1 2c       	mov	r13, r1
     51c:	0f 2e       	mov	r0, r31
     51e:	fe e9       	ldi	r31, 0x9E	; 158
     520:	ef 2e       	mov	r14, r31
     522:	f1 e0       	ldi	r31, 0x01	; 1
     524:	ff 2e       	mov	r15, r31
     526:	f0 2d       	mov	r31, r0
     528:	20 e0       	ldi	r18, 0x00	; 0
     52a:	30 e0       	ldi	r19, 0x00	; 0
     52c:	a9 01       	movw	r20, r18
     52e:	60 e0       	ldi	r22, 0x00	; 0
     530:	70 e0       	ldi	r23, 0x00	; 0
     532:	cb 01       	movw	r24, r22
     534:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
		AFTER(MSEC(100), self, joystickVert, NULL);	// Kalla pÔøΩ sig sjÔøΩlv igen (loop)
     538:	0f 2e       	mov	r0, r31
     53a:	ff e7       	ldi	r31, 0x7F	; 127
     53c:	ef 2e       	mov	r14, r31
     53e:	f2 e0       	ldi	r31, 0x02	; 2
     540:	ff 2e       	mov	r15, r31
     542:	f0 2d       	mov	r31, r0
     544:	8e 01       	movw	r16, r28
     546:	20 e0       	ldi	r18, 0x00	; 0
     548:	30 e0       	ldi	r19, 0x00	; 0
     54a:	a9 01       	movw	r20, r18
     54c:	65 e3       	ldi	r22, 0x35	; 53
     54e:	7c e0       	ldi	r23, 0x0C	; 12
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
	}
	if (!(PINB & (1 << PB6))) {
     558:	1e 99       	sbic	0x03, 6	; 3
     55a:	22 c0       	rjmp	.+68     	; 0x5a0 <__stack+0xa1>
		ASYNC(self->gui, increaseGui, NULL);
     55c:	08 81       	ld	r16, Y
     55e:	19 81       	ldd	r17, Y+1	; 0x01
     560:	c1 2c       	mov	r12, r1
     562:	d1 2c       	mov	r13, r1
     564:	0f 2e       	mov	r0, r31
     566:	f4 e6       	ldi	r31, 0x64	; 100
     568:	ef 2e       	mov	r14, r31
     56a:	f1 e0       	ldi	r31, 0x01	; 1
     56c:	ff 2e       	mov	r15, r31
     56e:	f0 2d       	mov	r31, r0
     570:	20 e0       	ldi	r18, 0x00	; 0
     572:	30 e0       	ldi	r19, 0x00	; 0
     574:	a9 01       	movw	r20, r18
     576:	60 e0       	ldi	r22, 0x00	; 0
     578:	70 e0       	ldi	r23, 0x00	; 0
     57a:	cb 01       	movw	r24, r22
     57c:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
		AFTER(MSEC(100), self, joystickVert, NULL);
     580:	0f 2e       	mov	r0, r31
     582:	ff e7       	ldi	r31, 0x7F	; 127
     584:	ef 2e       	mov	r14, r31
     586:	f2 e0       	ldi	r31, 0x02	; 2
     588:	ff 2e       	mov	r15, r31
     58a:	f0 2d       	mov	r31, r0
     58c:	8e 01       	movw	r16, r28
     58e:	20 e0       	ldi	r18, 0x00	; 0
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	a9 01       	movw	r20, r18
     594:	65 e3       	ldi	r22, 0x35	; 53
     596:	7c e0       	ldi	r23, 0x0C	; 12
     598:	80 e0       	ldi	r24, 0x00	; 0
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
	}
	if (!(PINB & (1 << PB4))) { // press
     5a0:	1c 99       	sbic	0x03, 4	; 3
     5a2:	19 c0       	rjmp	.+50     	; 0x5d6 <__stack+0xd7>
		if (self->risingEdge) {
     5a4:	8a 81       	ldd	r24, Y+2	; 0x02
     5a6:	88 23       	and	r24, r24
     5a8:	a1 f0       	breq	.+40     	; 0x5d2 <__stack+0xd3>
			self->risingEdge = false;
     5aa:	1a 82       	std	Y+2, r1	; 0x02
			ASYNC(self->gui, pressGui, NULL);
     5ac:	08 81       	ld	r16, Y
     5ae:	19 81       	ldd	r17, Y+1	; 0x01
     5b0:	c1 2c       	mov	r12, r1
     5b2:	d1 2c       	mov	r13, r1
     5b4:	0f 2e       	mov	r0, r31
     5b6:	f8 ed       	ldi	r31, 0xD8	; 216
     5b8:	ef 2e       	mov	r14, r31
     5ba:	f1 e0       	ldi	r31, 0x01	; 1
     5bc:	ff 2e       	mov	r15, r31
     5be:	f0 2d       	mov	r31, r0
     5c0:	20 e0       	ldi	r18, 0x00	; 0
     5c2:	30 e0       	ldi	r19, 0x00	; 0
     5c4:	a9 01       	movw	r20, r18
     5c6:	60 e0       	ldi	r22, 0x00	; 0
     5c8:	70 e0       	ldi	r23, 0x00	; 0
     5ca:	cb 01       	movw	r24, r22
     5cc:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
     5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <__stack+0xd7>
		}
		else{
			self->risingEdge = true;
     5d2:	81 e0       	ldi	r24, 0x01	; 1
     5d4:	8a 83       	std	Y+2, r24	; 0x02
		}
	}
	return 0;
}
     5d6:	80 e0       	ldi	r24, 0x00	; 0
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	df 91       	pop	r29
     5dc:	cf 91       	pop	r28
     5de:	1f 91       	pop	r17
     5e0:	0f 91       	pop	r16
     5e2:	ff 90       	pop	r15
     5e4:	ef 90       	pop	r14
     5e6:	df 90       	pop	r13
     5e8:	cf 90       	pop	r12
     5ea:	08 95       	ret

000005ec <displayChar>:
};

// Switches between two segments 
void switchSegment() {
    LCDDR13 = !(LCDDR13 & 1);
    LCDDR18 = !(LCDDR18 & 1);
     5ec:	cf 93       	push	r28
     5ee:	df 93       	push	r29
     5f0:	00 d0       	rcall	.+0      	; 0x5f2 <displayChar+0x6>
     5f2:	00 d0       	rcall	.+0      	; 0x5f4 <displayChar+0x8>
     5f4:	cd b7       	in	r28, 0x3d	; 61
     5f6:	de b7       	in	r29, 0x3e	; 62
     5f8:	da 01       	movw	r26, r20
     5fa:	90 ed       	ldi	r25, 0xD0	; 208
     5fc:	98 0f       	add	r25, r24
     5fe:	9a 30       	cpi	r25, 0x0A	; 10
     600:	80 f4       	brcc	.+32     	; 0x622 <displayChar+0x36>
     602:	20 e0       	ldi	r18, 0x00	; 0
     604:	30 e0       	ldi	r19, 0x00	; 0
     606:	28 c0       	rjmp	.+80     	; 0x658 <displayChar+0x6c>
     608:	fc 01       	movw	r30, r24
     60a:	e6 5f       	subi	r30, 0xF6	; 246
     60c:	fe 4f       	sbci	r31, 0xFE	; 254
     60e:	20 a5       	ldd	r18, Z+40	; 0x28
     610:	e1 e0       	ldi	r30, 0x01	; 1
     612:	f0 e0       	ldi	r31, 0x00	; 0
     614:	ec 0f       	add	r30, r28
     616:	fd 1f       	adc	r31, r29
     618:	e8 0f       	add	r30, r24
     61a:	f9 1f       	adc	r31, r25
     61c:	20 83       	st	Z, r18
     61e:	01 96       	adiw	r24, 0x01	; 1
     620:	02 c0       	rjmp	.+4      	; 0x626 <displayChar+0x3a>
     622:	80 e0       	ldi	r24, 0x00	; 0
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	84 30       	cpi	r24, 0x04	; 4
     628:	91 05       	cpc	r25, r1
     62a:	74 f3       	brlt	.-36     	; 0x608 <displayChar+0x1c>
     62c:	18 c0       	rjmp	.+48     	; 0x65e <displayChar+0x72>
     62e:	e8 2f       	mov	r30, r24
     630:	f0 e0       	ldi	r31, 0x00	; 0
     632:	f0 97       	sbiw	r30, 0x30	; 48
     634:	ee 0f       	add	r30, r30
     636:	ff 1f       	adc	r31, r31
     638:	ee 0f       	add	r30, r30
     63a:	ff 1f       	adc	r31, r31
     63c:	e6 5f       	subi	r30, 0xF6	; 246
     63e:	fe 4f       	sbci	r31, 0xFE	; 254
     640:	e2 0f       	add	r30, r18
     642:	f3 1f       	adc	r31, r19
     644:	90 81       	ld	r25, Z
     646:	e1 e0       	ldi	r30, 0x01	; 1
     648:	f0 e0       	ldi	r31, 0x00	; 0
     64a:	ec 0f       	add	r30, r28
     64c:	fd 1f       	adc	r31, r29
     64e:	e2 0f       	add	r30, r18
     650:	f3 1f       	adc	r31, r19
     652:	90 83       	st	Z, r25
     654:	2f 5f       	subi	r18, 0xFF	; 255
     656:	3f 4f       	sbci	r19, 0xFF	; 255
     658:	24 30       	cpi	r18, 0x04	; 4
     65a:	31 05       	cpc	r19, r1
     65c:	44 f3       	brlt	.-48     	; 0x62e <displayChar+0x42>
     65e:	61 11       	cpse	r22, r1
     660:	0d c0       	rjmp	.+26     	; 0x67c <displayChar+0x90>
     662:	11 c0       	rjmp	.+34     	; 0x686 <displayChar+0x9a>
     664:	e1 e0       	ldi	r30, 0x01	; 1
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	ec 0f       	add	r30, r28
     66a:	fd 1f       	adc	r31, r29
     66c:	e8 0f       	add	r30, r24
     66e:	f9 1f       	adc	r31, r25
     670:	20 81       	ld	r18, Z
     672:	22 95       	swap	r18
     674:	20 7f       	andi	r18, 0xF0	; 240
     676:	20 83       	st	Z, r18
     678:	01 96       	adiw	r24, 0x01	; 1
     67a:	02 c0       	rjmp	.+4      	; 0x680 <displayChar+0x94>
     67c:	80 e0       	ldi	r24, 0x00	; 0
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	84 30       	cpi	r24, 0x04	; 4
     682:	91 05       	cpc	r25, r1
     684:	7c f3       	brlt	.-34     	; 0x664 <displayChar+0x78>
     686:	9c 91       	ld	r25, X
     688:	89 81       	ldd	r24, Y+1	; 0x01
     68a:	89 2b       	or	r24, r25
     68c:	8c 93       	st	X, r24
     68e:	15 96       	adiw	r26, 0x05	; 5
     690:	9c 91       	ld	r25, X
     692:	15 97       	sbiw	r26, 0x05	; 5
     694:	8a 81       	ldd	r24, Y+2	; 0x02
     696:	89 2b       	or	r24, r25
     698:	15 96       	adiw	r26, 0x05	; 5
     69a:	8c 93       	st	X, r24
     69c:	15 97       	sbiw	r26, 0x05	; 5
     69e:	1a 96       	adiw	r26, 0x0a	; 10
     6a0:	9c 91       	ld	r25, X
     6a2:	1a 97       	sbiw	r26, 0x0a	; 10
     6a4:	8b 81       	ldd	r24, Y+3	; 0x03
     6a6:	89 2b       	or	r24, r25
     6a8:	1a 96       	adiw	r26, 0x0a	; 10
     6aa:	8c 93       	st	X, r24
     6ac:	1a 97       	sbiw	r26, 0x0a	; 10
     6ae:	1f 96       	adiw	r26, 0x0f	; 15
     6b0:	9c 91       	ld	r25, X
     6b2:	1f 97       	sbiw	r26, 0x0f	; 15
     6b4:	8c 81       	ldd	r24, Y+4	; 0x04
     6b6:	89 2b       	or	r24, r25
     6b8:	1f 96       	adiw	r26, 0x0f	; 15
     6ba:	8c 93       	st	X, r24
     6bc:	0f 90       	pop	r0
     6be:	0f 90       	pop	r0
     6c0:	0f 90       	pop	r0
     6c2:	0f 90       	pop	r0
     6c4:	df 91       	pop	r29
     6c6:	cf 91       	pop	r28
     6c8:	08 95       	ret

000006ca <removeOldChar>:
     6ca:	88 23       	and	r24, r24
     6cc:	91 f0       	breq	.+36     	; 0x6f2 <removeOldChar+0x28>
     6ce:	fb 01       	movw	r30, r22
     6d0:	80 81       	ld	r24, Z
     6d2:	89 70       	andi	r24, 0x09	; 9
     6d4:	80 83       	st	Z, r24
     6d6:	85 e0       	ldi	r24, 0x05	; 5
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	07 c0       	rjmp	.+14     	; 0x6ea <removeOldChar+0x20>
     6dc:	fb 01       	movw	r30, r22
     6de:	e8 0f       	add	r30, r24
     6e0:	f9 1f       	adc	r31, r25
     6e2:	20 81       	ld	r18, Z
     6e4:	2f 70       	andi	r18, 0x0F	; 15
     6e6:	20 83       	st	Z, r18
     6e8:	05 96       	adiw	r24, 0x05	; 5
     6ea:	84 31       	cpi	r24, 0x14	; 20
     6ec:	91 05       	cpc	r25, r1
     6ee:	b4 f3       	brlt	.-20     	; 0x6dc <removeOldChar+0x12>
     6f0:	08 95       	ret
     6f2:	fb 01       	movw	r30, r22
     6f4:	80 81       	ld	r24, Z
     6f6:	80 79       	andi	r24, 0x90	; 144
     6f8:	80 83       	st	Z, r24
     6fa:	85 e0       	ldi	r24, 0x05	; 5
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	07 c0       	rjmp	.+14     	; 0x70e <removeOldChar+0x44>
     700:	fb 01       	movw	r30, r22
     702:	e8 0f       	add	r30, r24
     704:	f9 1f       	adc	r31, r25
     706:	20 81       	ld	r18, Z
     708:	20 7f       	andi	r18, 0xF0	; 240
     70a:	20 83       	st	Z, r18
     70c:	05 96       	adiw	r24, 0x05	; 5
     70e:	84 31       	cpi	r24, 0x14	; 20
     710:	91 05       	cpc	r25, r1
     712:	b4 f3       	brlt	.-20     	; 0x700 <removeOldChar+0x36>
     714:	08 95       	ret

00000716 <writeChar>:
     716:	1f 93       	push	r17
     718:	cf 93       	push	r28
     71a:	df 93       	push	r29
     71c:	18 2f       	mov	r17, r24
     71e:	60 fd       	sbrc	r22, 0
     720:	14 c0       	rjmp	.+40     	; 0x74a <writeChar+0x34>
     722:	ab 01       	movw	r20, r22
     724:	77 23       	and	r23, r23
     726:	14 f4       	brge	.+4      	; 0x72c <writeChar+0x16>
     728:	4f 5f       	subi	r20, 0xFF	; 255
     72a:	5f 4f       	sbci	r21, 0xFF	; 255
     72c:	55 95       	asr	r21
     72e:	47 95       	ror	r20
     730:	ea 01       	movw	r28, r20
     732:	c4 51       	subi	r28, 0x14	; 20
     734:	df 4f       	sbci	r29, 0xFF	; 255
     736:	be 01       	movw	r22, r28
     738:	80 e0       	ldi	r24, 0x00	; 0
     73a:	0e 94 65 03 	call	0x6ca	; 0x6ca <removeOldChar>
     73e:	ae 01       	movw	r20, r28
     740:	60 e0       	ldi	r22, 0x00	; 0
     742:	81 2f       	mov	r24, r17
     744:	0e 94 f6 02 	call	0x5ec	; 0x5ec <displayChar>
     748:	14 c0       	rjmp	.+40     	; 0x772 <writeChar+0x5c>
     74a:	61 50       	subi	r22, 0x01	; 1
     74c:	71 09       	sbc	r23, r1
     74e:	ab 01       	movw	r20, r22
     750:	12 f4       	brpl	.+4      	; 0x756 <writeChar+0x40>
     752:	4f 5f       	subi	r20, 0xFF	; 255
     754:	5f 4f       	sbci	r21, 0xFF	; 255
     756:	55 95       	asr	r21
     758:	47 95       	ror	r20
     75a:	ea 01       	movw	r28, r20
     75c:	c4 51       	subi	r28, 0x14	; 20
     75e:	df 4f       	sbci	r29, 0xFF	; 255
     760:	be 01       	movw	r22, r28
     762:	81 e0       	ldi	r24, 0x01	; 1
     764:	0e 94 65 03 	call	0x6ca	; 0x6ca <removeOldChar>
     768:	ae 01       	movw	r20, r28
     76a:	61 e0       	ldi	r22, 0x01	; 1
     76c:	81 2f       	mov	r24, r17
     76e:	0e 94 f6 02 	call	0x5ec	; 0x5ec <displayChar>
     772:	df 91       	pop	r29
     774:	cf 91       	pop	r28
     776:	1f 91       	pop	r17
     778:	08 95       	ret

0000077a <printAt>:
}
 
// Displays last two digits of num in pos and pos+1
void printAt(long input[]) {  // [pos, num]
     77a:	4f 92       	push	r4
     77c:	5f 92       	push	r5
     77e:	6f 92       	push	r6
     780:	7f 92       	push	r7
     782:	8f 92       	push	r8
     784:	9f 92       	push	r9
     786:	af 92       	push	r10
     788:	bf 92       	push	r11
     78a:	cf 92       	push	r12
     78c:	df 92       	push	r13
     78e:	ef 92       	push	r14
     790:	ff 92       	push	r15
    long pp = input[0];
     792:	fc 01       	movw	r30, r24
     794:	c0 80       	ld	r12, Z
     796:	d1 80       	ldd	r13, Z+1	; 0x01
     798:	e2 80       	ldd	r14, Z+2	; 0x02
     79a:	f3 80       	ldd	r15, Z+3	; 0x03
    long num = input[1];
     79c:	44 80       	ldd	r4, Z+4	; 0x04
     79e:	55 80       	ldd	r5, Z+5	; 0x05
     7a0:	66 80       	ldd	r6, Z+6	; 0x06
     7a2:	77 80       	ldd	r7, Z+7	; 0x07
    writeChar((num % 100) / 10 + '0', pp);
     7a4:	c3 01       	movw	r24, r6
     7a6:	b2 01       	movw	r22, r4
     7a8:	24 e6       	ldi	r18, 0x64	; 100
     7aa:	30 e0       	ldi	r19, 0x00	; 0
     7ac:	40 e0       	ldi	r20, 0x00	; 0
     7ae:	50 e0       	ldi	r21, 0x00	; 0
     7b0:	0e 94 be 10 	call	0x217c	; 0x217c <__divmodsi4>
     7b4:	0f 2e       	mov	r0, r31
     7b6:	fa e0       	ldi	r31, 0x0A	; 10
     7b8:	8f 2e       	mov	r8, r31
     7ba:	91 2c       	mov	r9, r1
     7bc:	a1 2c       	mov	r10, r1
     7be:	b1 2c       	mov	r11, r1
     7c0:	f0 2d       	mov	r31, r0
     7c2:	a5 01       	movw	r20, r10
     7c4:	94 01       	movw	r18, r8
     7c6:	0e 94 be 10 	call	0x217c	; 0x217c <__divmodsi4>
     7ca:	b6 01       	movw	r22, r12
     7cc:	80 e3       	ldi	r24, 0x30	; 48
     7ce:	82 0f       	add	r24, r18
     7d0:	0e 94 8b 03 	call	0x716	; 0x716 <writeChar>
    pp++;
     7d4:	ff ef       	ldi	r31, 0xFF	; 255
     7d6:	cf 1a       	sub	r12, r31
     7d8:	df 0a       	sbc	r13, r31
     7da:	ef 0a       	sbc	r14, r31
     7dc:	ff 0a       	sbc	r15, r31
    writeChar( num % 10 + '0', pp);
     7de:	c3 01       	movw	r24, r6
     7e0:	b2 01       	movw	r22, r4
     7e2:	a5 01       	movw	r20, r10
     7e4:	94 01       	movw	r18, r8
     7e6:	0e 94 be 10 	call	0x217c	; 0x217c <__divmodsi4>
     7ea:	86 2f       	mov	r24, r22
     7ec:	b6 01       	movw	r22, r12
     7ee:	80 5d       	subi	r24, 0xD0	; 208
     7f0:	0e 94 8b 03 	call	0x716	; 0x716 <writeChar>
}
     7f4:	ff 90       	pop	r15
     7f6:	ef 90       	pop	r14
     7f8:	df 90       	pop	r13
     7fa:	cf 90       	pop	r12
     7fc:	bf 90       	pop	r11
     7fe:	af 90       	pop	r10
     800:	9f 90       	pop	r9
     802:	8f 90       	pop	r8
     804:	7f 90       	pop	r7
     806:	6f 90       	pop	r6
     808:	5f 90       	pop	r5
     80a:	4f 90       	pop	r4
     80c:	08 95       	ret

0000080e <main>:
#include "Joystick.h"
#include "Lcd.h"
#include "TinyTimber.h"


int main() {
     80e:	cf 93       	push	r28
     810:	df 93       	push	r29
     812:	cd b7       	in	r28, 0x3d	; 61
     814:	de b7       	in	r29, 0x3e	; 62
     816:	6a 97       	sbiw	r28, 0x1a	; 26
     818:	0f b6       	in	r0, 0x3f	; 63
     81a:	f8 94       	cli
     81c:	de bf       	out	0x3e, r29	; 62
     81e:	0f be       	out	0x3f, r0	; 63
     820:	cd bf       	out	0x3d, r28	; 61
	Init();
     822:	0e 94 12 02 	call	0x424	; 0x424 <Init>
	Lcd display = initLcd();
     826:	19 82       	std	Y+1, r1	; 0x01
     828:	1a 82       	std	Y+2, r1	; 0x02
     82a:	1b 82       	std	Y+3, r1	; 0x03
     82c:	1c 82       	std	Y+4, r1	; 0x04
	Generators genL = initGenerator(&display, 0);
     82e:	ce 01       	movw	r24, r28
     830:	01 96       	adiw	r24, 0x01	; 1
     832:	9e 83       	std	Y+6, r25	; 0x06
     834:	8d 83       	std	Y+5, r24	; 0x05
     836:	18 86       	std	Y+8, r1	; 0x08
     838:	1f 82       	std	Y+7, r1	; 0x07
	Generators genR = initGenerator(&display, 1);
     83a:	9a 87       	std	Y+10, r25	; 0x0a
     83c:	89 87       	std	Y+9, r24	; 0x09
     83e:	21 e0       	ldi	r18, 0x01	; 1
     840:	30 e0       	ldi	r19, 0x00	; 0
     842:	3c 87       	std	Y+12, r19	; 0x0c
     844:	2b 87       	std	Y+11, r18	; 0x0b
	Gui gui = initGui(&genL, &genR, &display);
     846:	9e 01       	movw	r18, r28
     848:	2b 5f       	subi	r18, 0xFB	; 251
     84a:	3f 4f       	sbci	r19, 0xFF	; 255
     84c:	3e 87       	std	Y+14, r19	; 0x0e
     84e:	2d 87       	std	Y+13, r18	; 0x0d
     850:	2c 5f       	subi	r18, 0xFC	; 252
     852:	3f 4f       	sbci	r19, 0xFF	; 255
     854:	38 8b       	std	Y+16, r19	; 0x10
     856:	2f 87       	std	Y+15, r18	; 0x0f
     858:	9a 8b       	std	Y+18, r25	; 0x12
     85a:	89 8b       	std	Y+17, r24	; 0x11
	Joystick joy = initJoystick(&gui);
     85c:	1b 8a       	std	Y+19, r1	; 0x13
     85e:	1c 8a       	std	Y+20, r1	; 0x14
     860:	1d 8a       	std	Y+21, r1	; 0x15
     862:	0c 96       	adiw	r24, 0x0c	; 12
     864:	9c 8b       	std	Y+20, r25	; 0x14
     866:	8b 8b       	std	Y+19, r24	; 0x13
	InteruptHandler inter = initInteruptHandler(&joy);
     868:	1f 8a       	std	Y+23, r1	; 0x17
     86a:	1e 8a       	std	Y+22, r1	; 0x16
     86c:	06 96       	adiw	r24, 0x06	; 6
     86e:	99 8f       	std	Y+25, r25	; 0x19
     870:	88 8f       	std	Y+24, r24	; 0x18
     872:	1a 8e       	std	Y+26, r1	; 0x1a
	INSTALL(&inter, FreqChange, IRQ_PCINT1);
     874:	42 e0       	ldi	r20, 0x02	; 2
     876:	67 e3       	ldi	r22, 0x37	; 55
     878:	72 e0       	ldi	r23, 0x02	; 2
     87a:	03 96       	adiw	r24, 0x03	; 3
     87c:	0e 94 8c 10 	call	0x2118	; 0x2118 <install>
	INSTALL(&inter, genSwitch, IRQ_PCINT0);
     880:	41 e0       	ldi	r20, 0x01	; 1
     882:	67 e5       	ldi	r22, 0x57	; 87
     884:	72 e0       	ldi	r23, 0x02	; 2
     886:	ce 01       	movw	r24, r28
     888:	46 96       	adiw	r24, 0x16	; 22
     88a:	0e 94 8c 10 	call	0x2118	; 0x2118 <install>
	return tinytimber(NULL,NULL,NULL);		
     88e:	40 e0       	ldi	r20, 0x00	; 0
     890:	50 e0       	ldi	r21, 0x00	; 0
     892:	60 e0       	ldi	r22, 0x00	; 0
     894:	70 e0       	ldi	r23, 0x00	; 0
     896:	80 e0       	ldi	r24, 0x00	; 0
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	0e 94 a7 10 	call	0x214e	; 0x214e <tinytimber>
     89e:	6a 96       	adiw	r28, 0x1a	; 26
     8a0:	0f b6       	in	r0, 0x3f	; 63
     8a2:	f8 94       	cli
     8a4:	de bf       	out	0x3e, r29	; 62
     8a6:	0f be       	out	0x3f, r0	; 63
     8a8:	cd bf       	out	0x3d, r28	; 61
     8aa:	df 91       	pop	r29
     8ac:	cf 91       	pop	r28
     8ae:	08 95       	ret

000008b0 <initialize>:
     8b0:	cf 93       	push	r28
     8b2:	df 93       	push	r29
     8b4:	00 d0       	rcall	.+0      	; 0x8b6 <initialize+0x6>
     8b6:	00 d0       	rcall	.+0      	; 0x8b8 <initialize+0x8>
     8b8:	cd b7       	in	r28, 0x3d	; 61
     8ba:	de b7       	in	r29, 0x3e	; 62
     8bc:	80 e0       	ldi	r24, 0x00	; 0
     8be:	90 e0       	ldi	r25, 0x00	; 0
     8c0:	18 c0       	rjmp	.+48     	; 0x8f2 <initialize+0x42>
     8c2:	ac 01       	movw	r20, r24
     8c4:	4f 5f       	subi	r20, 0xFF	; 255
     8c6:	5f 4f       	sbci	r21, 0xFF	; 255
     8c8:	9a 01       	movw	r18, r20
     8ca:	22 95       	swap	r18
     8cc:	32 95       	swap	r19
     8ce:	30 7f       	andi	r19, 0xF0	; 240
     8d0:	32 27       	eor	r19, r18
     8d2:	20 7f       	andi	r18, 0xF0	; 240
     8d4:	32 27       	eor	r19, r18
     8d6:	2f 5d       	subi	r18, 0xDF	; 223
     8d8:	3d 4f       	sbci	r19, 0xFD	; 253
     8da:	82 95       	swap	r24
     8dc:	92 95       	swap	r25
     8de:	90 7f       	andi	r25, 0xF0	; 240
     8e0:	98 27       	eor	r25, r24
     8e2:	80 7f       	andi	r24, 0xF0	; 240
     8e4:	98 27       	eor	r25, r24
     8e6:	fc 01       	movw	r30, r24
     8e8:	ef 5d       	subi	r30, 0xDF	; 223
     8ea:	fd 4f       	sbci	r31, 0xFD	; 253
     8ec:	31 83       	std	Z+1, r19	; 0x01
     8ee:	20 83       	st	Z, r18
     8f0:	ca 01       	movw	r24, r20
     8f2:	8e 30       	cpi	r24, 0x0E	; 14
     8f4:	91 05       	cpc	r25, r1
     8f6:	2c f3       	brlt	.-54     	; 0x8c2 <initialize+0x12>
     8f8:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <messages+0xe1>
     8fc:	10 92 01 03 	sts	0x0301, r1	; 0x800301 <messages+0xe0>
     900:	80 e0       	ldi	r24, 0x00	; 0
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	15 c0       	rjmp	.+42     	; 0x930 <initialize+0x80>
     906:	ac 01       	movw	r20, r24
     908:	4f 5f       	subi	r20, 0xFF	; 255
     90a:	5f 4f       	sbci	r21, 0xFF	; 255
     90c:	6d e1       	ldi	r22, 0x1D	; 29
     90e:	64 9f       	mul	r22, r20
     910:	90 01       	movw	r18, r0
     912:	65 9f       	mul	r22, r21
     914:	30 0d       	add	r19, r0
     916:	11 24       	eor	r1, r1
     918:	24 59       	subi	r18, 0x94	; 148
     91a:	3e 4f       	sbci	r19, 0xFE	; 254
     91c:	68 9f       	mul	r22, r24
     91e:	f0 01       	movw	r30, r0
     920:	69 9f       	mul	r22, r25
     922:	f0 0d       	add	r31, r0
     924:	11 24       	eor	r1, r1
     926:	e4 59       	subi	r30, 0x94	; 148
     928:	fe 4f       	sbci	r31, 0xFE	; 254
     92a:	31 83       	std	Z+1, r19	; 0x01
     92c:	20 83       	st	Z, r18
     92e:	ca 01       	movw	r24, r20
     930:	83 30       	cpi	r24, 0x03	; 3
     932:	91 05       	cpc	r25, r1
     934:	44 f3       	brlt	.-48     	; 0x906 <initialize+0x56>
     936:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <threads+0x58>
     93a:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <threads+0x57>
     93e:	1a 82       	std	Y+2, r1	; 0x02
     940:	19 82       	std	Y+1, r1	; 0x01
     942:	32 c0       	rjmp	.+100    	; 0x9a8 <initialize+0xf8>
     944:	2d e1       	ldi	r18, 0x1D	; 29
     946:	49 81       	ldd	r20, Y+1	; 0x01
     948:	5a 81       	ldd	r21, Y+2	; 0x02
     94a:	24 9f       	mul	r18, r20
     94c:	c0 01       	movw	r24, r0
     94e:	25 9f       	mul	r18, r21
     950:	90 0d       	add	r25, r0
     952:	11 24       	eor	r1, r1
     954:	fc 01       	movw	r30, r24
     956:	ee 58       	subi	r30, 0x8E	; 142
     958:	fe 4f       	sbci	r31, 0xFE	; 254
     95a:	fc 83       	std	Y+4, r31	; 0x04
     95c:	eb 83       	std	Y+3, r30	; 0x03
     95e:	cf 01       	movw	r24, r30
     960:	0e 94 ff 10 	call	0x21fe	; 0x21fe <setjmp>
     964:	20 e6       	ldi	r18, 0x60	; 96
     966:	49 81       	ldd	r20, Y+1	; 0x01
     968:	5a 81       	ldd	r21, Y+2	; 0x02
     96a:	24 9f       	mul	r18, r20
     96c:	c0 01       	movw	r24, r0
     96e:	25 9f       	mul	r18, r21
     970:	90 0d       	add	r25, r0
     972:	11 24       	eor	r1, r1
     974:	83 59       	subi	r24, 0x93	; 147
     976:	9c 4f       	sbci	r25, 0xFC	; 252
     978:	eb 81       	ldd	r30, Y+3	; 0x03
     97a:	fc 81       	ldd	r31, Y+4	; 0x04
     97c:	91 8b       	std	Z+17, r25	; 0x11
     97e:	80 8b       	std	Z+16, r24	; 0x10
     980:	93 8b       	std	Z+19, r25	; 0x13
     982:	82 8b       	std	Z+18, r24	; 0x12
     984:	84 e3       	ldi	r24, 0x34	; 52
     986:	90 e1       	ldi	r25, 0x10	; 16
     988:	96 8b       	std	Z+22, r25	; 0x16
     98a:	85 8b       	std	Z+21, r24	; 0x15
     98c:	8d e1       	ldi	r24, 0x1D	; 29
     98e:	84 9f       	mul	r24, r20
     990:	f0 01       	movw	r30, r0
     992:	85 9f       	mul	r24, r21
     994:	f0 0d       	add	r31, r0
     996:	11 24       	eor	r1, r1
     998:	e4 59       	subi	r30, 0x94	; 148
     99a:	fe 4f       	sbci	r31, 0xFE	; 254
     99c:	15 82       	std	Z+5, r1	; 0x05
     99e:	14 82       	std	Z+4, r1	; 0x04
     9a0:	4f 5f       	subi	r20, 0xFF	; 255
     9a2:	5f 4f       	sbci	r21, 0xFF	; 255
     9a4:	5a 83       	std	Y+2, r21	; 0x02
     9a6:	49 83       	std	Y+1, r20	; 0x01
     9a8:	29 81       	ldd	r18, Y+1	; 0x01
     9aa:	3a 81       	ldd	r19, Y+2	; 0x02
     9ac:	24 30       	cpi	r18, 0x04	; 4
     9ae:	31 05       	cpc	r19, r1
     9b0:	4c f2       	brlt	.-110    	; 0x944 <initialize+0x94>
     9b2:	e4 e0       	ldi	r30, 0x04	; 4
     9b4:	f2 e0       	ldi	r31, 0x02	; 2
     9b6:	11 82       	std	Z+1, r1	; 0x01
     9b8:	10 82       	st	Z, r1
     9ba:	15 82       	std	Z+5, r1	; 0x05
     9bc:	14 82       	std	Z+4, r1	; 0x04
     9be:	13 82       	std	Z+3, r1	; 0x03
     9c0:	12 82       	std	Z+2, r1	; 0x02
     9c2:	e1 e6       	ldi	r30, 0x61	; 97
     9c4:	f0 e0       	ldi	r31, 0x00	; 0
     9c6:	80 e8       	ldi	r24, 0x80	; 128
     9c8:	80 83       	st	Z, r24
     9ca:	10 82       	st	Z, r1
     9cc:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9d0:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9d4:	84 e0       	ldi	r24, 0x04	; 4
     9d6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     9da:	81 e0       	ldi	r24, 0x01	; 1
     9dc:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     9e0:	0f 90       	pop	r0
     9e2:	0f 90       	pop	r0
     9e4:	0f 90       	pop	r0
     9e6:	0f 90       	pop	r0
     9e8:	df 91       	pop	r29
     9ea:	cf 91       	pop	r28
     9ec:	08 95       	ret

000009ee <dispatch>:
     9ee:	cf 93       	push	r28
     9f0:	df 93       	push	r29
     9f2:	00 d0       	rcall	.+0      	; 0x9f4 <dispatch+0x6>
     9f4:	cd b7       	in	r28, 0x3d	; 61
     9f6:	de b7       	in	r29, 0x3e	; 62
     9f8:	9a 83       	std	Y+2, r25	; 0x02
     9fa:	89 83       	std	Y+1, r24	; 0x01
     9fc:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <current>
     a00:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <current+0x1>
     a04:	06 96       	adiw	r24, 0x06	; 6
     a06:	0e 94 ff 10 	call	0x21fe	; 0x21fe <setjmp>
     a0a:	89 2b       	or	r24, r25
     a0c:	59 f4       	brne	.+22     	; 0xa24 <dispatch+0x36>
     a0e:	89 81       	ldd	r24, Y+1	; 0x01
     a10:	9a 81       	ldd	r25, Y+2	; 0x02
     a12:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <current+0x1>
     a16:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <current>
     a1a:	61 e0       	ldi	r22, 0x01	; 1
     a1c:	70 e0       	ldi	r23, 0x00	; 0
     a1e:	06 96       	adiw	r24, 0x06	; 6
     a20:	0e 94 1f 11 	call	0x223e	; 0x223e <longjmp>
     a24:	0f 90       	pop	r0
     a26:	0f 90       	pop	r0
     a28:	df 91       	pop	r29
     a2a:	cf 91       	pop	r28
     a2c:	08 95       	ret

00000a2e <enqueueByDeadline>:
     a2e:	0f 93       	push	r16
     a30:	1f 93       	push	r17
     a32:	cf 93       	push	r28
     a34:	df 93       	push	r29
     a36:	dc 01       	movw	r26, r24
     a38:	cb 01       	movw	r24, r22
     a3a:	eb 01       	movw	r28, r22
     a3c:	e8 81       	ld	r30, Y
     a3e:	f9 81       	ldd	r31, Y+1	; 0x01
     a40:	c0 e0       	ldi	r28, 0x00	; 0
     a42:	d0 e0       	ldi	r29, 0x00	; 0
     a44:	04 c0       	rjmp	.+8      	; 0xa4e <enqueueByDeadline+0x20>
     a46:	ef 01       	movw	r28, r30
     a48:	01 90       	ld	r0, Z+
     a4a:	f0 81       	ld	r31, Z
     a4c:	e0 2d       	mov	r30, r0
     a4e:	30 97       	sbiw	r30, 0x00	; 0
     a50:	79 f0       	breq	.+30     	; 0xa70 <enqueueByDeadline+0x42>
     a52:	06 81       	ldd	r16, Z+6	; 0x06
     a54:	17 81       	ldd	r17, Z+7	; 0x07
     a56:	20 85       	ldd	r18, Z+8	; 0x08
     a58:	31 85       	ldd	r19, Z+9	; 0x09
     a5a:	16 96       	adiw	r26, 0x06	; 6
     a5c:	4d 91       	ld	r20, X+
     a5e:	5d 91       	ld	r21, X+
     a60:	6d 91       	ld	r22, X+
     a62:	7c 91       	ld	r23, X
     a64:	19 97       	sbiw	r26, 0x09	; 9
     a66:	40 17       	cp	r20, r16
     a68:	51 07       	cpc	r21, r17
     a6a:	62 07       	cpc	r22, r18
     a6c:	73 07       	cpc	r23, r19
     a6e:	5c f7       	brge	.-42     	; 0xa46 <enqueueByDeadline+0x18>
     a70:	11 96       	adiw	r26, 0x01	; 1
     a72:	fc 93       	st	X, r31
     a74:	ee 93       	st	-X, r30
     a76:	20 97       	sbiw	r28, 0x00	; 0
     a78:	21 f4       	brne	.+8      	; 0xa82 <enqueueByDeadline+0x54>
     a7a:	fc 01       	movw	r30, r24
     a7c:	b1 83       	std	Z+1, r27	; 0x01
     a7e:	a0 83       	st	Z, r26
     a80:	02 c0       	rjmp	.+4      	; 0xa86 <enqueueByDeadline+0x58>
     a82:	b9 83       	std	Y+1, r27	; 0x01
     a84:	a8 83       	st	Y, r26
     a86:	df 91       	pop	r29
     a88:	cf 91       	pop	r28
     a8a:	1f 91       	pop	r17
     a8c:	0f 91       	pop	r16
     a8e:	08 95       	ret

00000a90 <enqueueByBaseline>:
     a90:	0f 93       	push	r16
     a92:	1f 93       	push	r17
     a94:	cf 93       	push	r28
     a96:	df 93       	push	r29
     a98:	dc 01       	movw	r26, r24
     a9a:	cb 01       	movw	r24, r22
     a9c:	eb 01       	movw	r28, r22
     a9e:	e8 81       	ld	r30, Y
     aa0:	f9 81       	ldd	r31, Y+1	; 0x01
     aa2:	c0 e0       	ldi	r28, 0x00	; 0
     aa4:	d0 e0       	ldi	r29, 0x00	; 0
     aa6:	04 c0       	rjmp	.+8      	; 0xab0 <enqueueByBaseline+0x20>
     aa8:	ef 01       	movw	r28, r30
     aaa:	01 90       	ld	r0, Z+
     aac:	f0 81       	ld	r31, Z
     aae:	e0 2d       	mov	r30, r0
     ab0:	30 97       	sbiw	r30, 0x00	; 0
     ab2:	79 f0       	breq	.+30     	; 0xad2 <enqueueByBaseline+0x42>
     ab4:	02 81       	ldd	r16, Z+2	; 0x02
     ab6:	13 81       	ldd	r17, Z+3	; 0x03
     ab8:	24 81       	ldd	r18, Z+4	; 0x04
     aba:	35 81       	ldd	r19, Z+5	; 0x05
     abc:	12 96       	adiw	r26, 0x02	; 2
     abe:	4d 91       	ld	r20, X+
     ac0:	5d 91       	ld	r21, X+
     ac2:	6d 91       	ld	r22, X+
     ac4:	7c 91       	ld	r23, X
     ac6:	15 97       	sbiw	r26, 0x05	; 5
     ac8:	40 17       	cp	r20, r16
     aca:	51 07       	cpc	r21, r17
     acc:	62 07       	cpc	r22, r18
     ace:	73 07       	cpc	r23, r19
     ad0:	5c f7       	brge	.-42     	; 0xaa8 <enqueueByBaseline+0x18>
     ad2:	11 96       	adiw	r26, 0x01	; 1
     ad4:	fc 93       	st	X, r31
     ad6:	ee 93       	st	-X, r30
     ad8:	20 97       	sbiw	r28, 0x00	; 0
     ada:	21 f4       	brne	.+8      	; 0xae4 <enqueueByBaseline+0x54>
     adc:	fc 01       	movw	r30, r24
     ade:	b1 83       	std	Z+1, r27	; 0x01
     ae0:	a0 83       	st	Z, r26
     ae2:	02 c0       	rjmp	.+4      	; 0xae8 <enqueueByBaseline+0x58>
     ae4:	b9 83       	std	Y+1, r27	; 0x01
     ae6:	a8 83       	st	Y, r26
     ae8:	df 91       	pop	r29
     aea:	cf 91       	pop	r28
     aec:	1f 91       	pop	r17
     aee:	0f 91       	pop	r16
     af0:	08 95       	ret

00000af2 <dequeue>:
     af2:	dc 01       	movw	r26, r24
     af4:	ed 91       	ld	r30, X+
     af6:	fc 91       	ld	r31, X
     af8:	11 97       	sbiw	r26, 0x01	; 1
     afa:	30 97       	sbiw	r30, 0x00	; 0
     afc:	59 f4       	brne	.+22     	; 0xb14 <dequeue+0x22>
     afe:	8f ef       	ldi	r24, 0xFF	; 255
     b00:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     b04:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     b08:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     b0c:	81 e0       	ldi	r24, 0x01	; 1
     b0e:	83 bf       	out	0x33, r24	; 51
     b10:	88 95       	sleep
     b12:	fc cf       	rjmp	.-8      	; 0xb0c <dequeue+0x1a>
     b14:	20 81       	ld	r18, Z
     b16:	31 81       	ldd	r19, Z+1	; 0x01
     b18:	2d 93       	st	X+, r18
     b1a:	3c 93       	st	X, r19
     b1c:	cf 01       	movw	r24, r30
     b1e:	08 95       	ret

00000b20 <insert>:
     b20:	fb 01       	movw	r30, r22
     b22:	20 81       	ld	r18, Z
     b24:	31 81       	ldd	r19, Z+1	; 0x01
     b26:	fc 01       	movw	r30, r24
     b28:	31 83       	std	Z+1, r19	; 0x01
     b2a:	20 83       	st	Z, r18
     b2c:	fb 01       	movw	r30, r22
     b2e:	91 83       	std	Z+1, r25	; 0x01
     b30:	80 83       	st	Z, r24
     b32:	08 95       	ret

00000b34 <push>:
     b34:	fb 01       	movw	r30, r22
     b36:	20 81       	ld	r18, Z
     b38:	31 81       	ldd	r19, Z+1	; 0x01
     b3a:	fc 01       	movw	r30, r24
     b3c:	31 83       	std	Z+1, r19	; 0x01
     b3e:	20 83       	st	Z, r18
     b40:	fb 01       	movw	r30, r22
     b42:	91 83       	std	Z+1, r25	; 0x01
     b44:	80 83       	st	Z, r24
     b46:	08 95       	ret

00000b48 <pop>:
     b48:	dc 01       	movw	r26, r24
     b4a:	ed 91       	ld	r30, X+
     b4c:	fc 91       	ld	r31, X
     b4e:	11 97       	sbiw	r26, 0x01	; 1
     b50:	20 81       	ld	r18, Z
     b52:	31 81       	ldd	r19, Z+1	; 0x01
     b54:	2d 93       	st	X+, r18
     b56:	3c 93       	st	X, r19
     b58:	cf 01       	movw	r24, r30
     b5a:	08 95       	ret

00000b5c <schedule>:
     b5c:	cf 93       	push	r28
     b5e:	df 93       	push	r29
     b60:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
     b64:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
     b68:	c2 81       	ldd	r28, Z+2	; 0x02
     b6a:	d3 81       	ldd	r29, Z+3	; 0x03
     b6c:	e0 91 42 01 	lds	r30, 0x0142	; 0x800142 <msgQ>
     b70:	f0 91 43 01 	lds	r31, 0x0143	; 0x800143 <msgQ+0x1>
     b74:	30 97       	sbiw	r30, 0x00	; 0
     b76:	19 f1       	breq	.+70     	; 0xbbe <schedule+0x62>
     b78:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
     b7c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
     b80:	89 2b       	or	r24, r25
     b82:	e9 f0       	breq	.+58     	; 0xbbe <schedule+0x62>
     b84:	20 97       	sbiw	r28, 0x00	; 0
     b86:	69 f0       	breq	.+26     	; 0xba2 <schedule+0x46>
     b88:	86 81       	ldd	r24, Z+6	; 0x06
     b8a:	97 81       	ldd	r25, Z+7	; 0x07
     b8c:	a0 85       	ldd	r26, Z+8	; 0x08
     b8e:	b1 85       	ldd	r27, Z+9	; 0x09
     b90:	4e 81       	ldd	r20, Y+6	; 0x06
     b92:	5f 81       	ldd	r21, Y+7	; 0x07
     b94:	68 85       	ldd	r22, Y+8	; 0x08
     b96:	79 85       	ldd	r23, Y+9	; 0x09
     b98:	84 1b       	sub	r24, r20
     b9a:	95 0b       	sbc	r25, r21
     b9c:	a6 0b       	sbc	r26, r22
     b9e:	b7 0b       	sbc	r27, r23
     ba0:	72 f4       	brpl	.+28     	; 0xbbe <schedule+0x62>
     ba2:	86 e0       	ldi	r24, 0x06	; 6
     ba4:	91 e0       	ldi	r25, 0x01	; 1
     ba6:	0e 94 a4 05 	call	0xb48	; 0xb48 <pop>
     baa:	64 e0       	ldi	r22, 0x04	; 4
     bac:	71 e0       	ldi	r23, 0x01	; 1
     bae:	0e 94 9a 05 	call	0xb34	; 0xb34 <push>
     bb2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <activeStack>
     bb6:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <activeStack+0x1>
     bba:	0e 94 f7 04 	call	0x9ee	; 0x9ee <dispatch>
     bbe:	df 91       	pop	r29
     bc0:	cf 91       	pop	r28
     bc2:	08 95       	ret

00000bc4 <__vector_1>:
     bc4:	1f 92       	push	r1
     bc6:	0f 92       	push	r0
     bc8:	0f b6       	in	r0, 0x3f	; 63
     bca:	0f 92       	push	r0
     bcc:	11 24       	eor	r1, r1
     bce:	0f 93       	push	r16
     bd0:	1f 93       	push	r17
     bd2:	2f 93       	push	r18
     bd4:	3f 93       	push	r19
     bd6:	4f 93       	push	r20
     bd8:	5f 93       	push	r21
     bda:	6f 93       	push	r22
     bdc:	7f 93       	push	r23
     bde:	8f 93       	push	r24
     be0:	9f 93       	push	r25
     be2:	af 93       	push	r26
     be4:	bf 93       	push	r27
     be6:	ef 93       	push	r30
     be8:	ff 93       	push	r31
     bea:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
     bee:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
     bf2:	ac 01       	movw	r20, r24
     bf4:	09 2e       	mov	r0, r25
     bf6:	00 0c       	add	r0, r0
     bf8:	66 0b       	sbc	r22, r22
     bfa:	77 0b       	sbc	r23, r23
     bfc:	9a 01       	movw	r18, r20
     bfe:	11 27       	eor	r17, r17
     c00:	00 27       	eor	r16, r16
     c02:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c06:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c0a:	60 e0       	ldi	r22, 0x00	; 0
     c0c:	70 e0       	ldi	r23, 0x00	; 0
     c0e:	40 2b       	or	r20, r16
     c10:	51 2b       	or	r21, r17
     c12:	62 2b       	or	r22, r18
     c14:	73 2b       	or	r23, r19
     c16:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
     c1a:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
     c1e:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
     c22:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
     c26:	b0 9b       	sbis	0x16, 0	; 22
     c28:	1a c0       	rjmp	.+52     	; 0xc5e <__vector_1+0x9a>
     c2a:	01 96       	adiw	r24, 0x01	; 1
     c2c:	09 2e       	mov	r0, r25
     c2e:	00 0c       	add	r0, r0
     c30:	aa 0b       	sbc	r26, r26
     c32:	bb 0b       	sbc	r27, r27
     c34:	bc 01       	movw	r22, r24
     c36:	55 27       	eor	r21, r21
     c38:	44 27       	eor	r20, r20
     c3a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c3e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c42:	a0 e0       	ldi	r26, 0x00	; 0
     c44:	b0 e0       	ldi	r27, 0x00	; 0
     c46:	84 2b       	or	r24, r20
     c48:	95 2b       	or	r25, r21
     c4a:	a6 2b       	or	r26, r22
     c4c:	b7 2b       	or	r27, r23
     c4e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     c52:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     c56:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     c5a:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     c5e:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable>
     c62:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x1>
     c66:	30 97       	sbiw	r30, 0x00	; 0
     c68:	39 f0       	breq	.+14     	; 0xc78 <__vector_1+0xb4>
     c6a:	60 e0       	ldi	r22, 0x00	; 0
     c6c:	70 e0       	ldi	r23, 0x00	; 0
     c6e:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable>
     c72:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x1>
     c76:	09 95       	icall
     c78:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
     c7c:	ff 91       	pop	r31
     c7e:	ef 91       	pop	r30
     c80:	bf 91       	pop	r27
     c82:	af 91       	pop	r26
     c84:	9f 91       	pop	r25
     c86:	8f 91       	pop	r24
     c88:	7f 91       	pop	r23
     c8a:	6f 91       	pop	r22
     c8c:	5f 91       	pop	r21
     c8e:	4f 91       	pop	r20
     c90:	3f 91       	pop	r19
     c92:	2f 91       	pop	r18
     c94:	1f 91       	pop	r17
     c96:	0f 91       	pop	r16
     c98:	0f 90       	pop	r0
     c9a:	0f be       	out	0x3f, r0	; 63
     c9c:	0f 90       	pop	r0
     c9e:	1f 90       	pop	r1
     ca0:	18 95       	reti

00000ca2 <__vector_2>:
     ca2:	1f 92       	push	r1
     ca4:	0f 92       	push	r0
     ca6:	0f b6       	in	r0, 0x3f	; 63
     ca8:	0f 92       	push	r0
     caa:	11 24       	eor	r1, r1
     cac:	0f 93       	push	r16
     cae:	1f 93       	push	r17
     cb0:	2f 93       	push	r18
     cb2:	3f 93       	push	r19
     cb4:	4f 93       	push	r20
     cb6:	5f 93       	push	r21
     cb8:	6f 93       	push	r22
     cba:	7f 93       	push	r23
     cbc:	8f 93       	push	r24
     cbe:	9f 93       	push	r25
     cc0:	af 93       	push	r26
     cc2:	bf 93       	push	r27
     cc4:	ef 93       	push	r30
     cc6:	ff 93       	push	r31
     cc8:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
     ccc:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
     cd0:	ac 01       	movw	r20, r24
     cd2:	09 2e       	mov	r0, r25
     cd4:	00 0c       	add	r0, r0
     cd6:	66 0b       	sbc	r22, r22
     cd8:	77 0b       	sbc	r23, r23
     cda:	9a 01       	movw	r18, r20
     cdc:	11 27       	eor	r17, r17
     cde:	00 27       	eor	r16, r16
     ce0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ce4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ce8:	60 e0       	ldi	r22, 0x00	; 0
     cea:	70 e0       	ldi	r23, 0x00	; 0
     cec:	40 2b       	or	r20, r16
     cee:	51 2b       	or	r21, r17
     cf0:	62 2b       	or	r22, r18
     cf2:	73 2b       	or	r23, r19
     cf4:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
     cf8:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
     cfc:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
     d00:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
     d04:	b0 9b       	sbis	0x16, 0	; 22
     d06:	1a c0       	rjmp	.+52     	; 0xd3c <__vector_2+0x9a>
     d08:	01 96       	adiw	r24, 0x01	; 1
     d0a:	09 2e       	mov	r0, r25
     d0c:	00 0c       	add	r0, r0
     d0e:	aa 0b       	sbc	r26, r26
     d10:	bb 0b       	sbc	r27, r27
     d12:	bc 01       	movw	r22, r24
     d14:	55 27       	eor	r21, r21
     d16:	44 27       	eor	r20, r20
     d18:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d1c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d20:	a0 e0       	ldi	r26, 0x00	; 0
     d22:	b0 e0       	ldi	r27, 0x00	; 0
     d24:	84 2b       	or	r24, r20
     d26:	95 2b       	or	r25, r21
     d28:	a6 2b       	or	r26, r22
     d2a:	b7 2b       	or	r27, r23
     d2c:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     d30:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     d34:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     d38:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     d3c:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x2>
     d40:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x3>
     d44:	30 97       	sbiw	r30, 0x00	; 0
     d46:	39 f0       	breq	.+14     	; 0xd56 <__vector_2+0xb4>
     d48:	61 e0       	ldi	r22, 0x01	; 1
     d4a:	70 e0       	ldi	r23, 0x00	; 0
     d4c:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x2>
     d50:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x3>
     d54:	09 95       	icall
     d56:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
     d5a:	ff 91       	pop	r31
     d5c:	ef 91       	pop	r30
     d5e:	bf 91       	pop	r27
     d60:	af 91       	pop	r26
     d62:	9f 91       	pop	r25
     d64:	8f 91       	pop	r24
     d66:	7f 91       	pop	r23
     d68:	6f 91       	pop	r22
     d6a:	5f 91       	pop	r21
     d6c:	4f 91       	pop	r20
     d6e:	3f 91       	pop	r19
     d70:	2f 91       	pop	r18
     d72:	1f 91       	pop	r17
     d74:	0f 91       	pop	r16
     d76:	0f 90       	pop	r0
     d78:	0f be       	out	0x3f, r0	; 63
     d7a:	0f 90       	pop	r0
     d7c:	1f 90       	pop	r1
     d7e:	18 95       	reti

00000d80 <__vector_3>:
     d80:	1f 92       	push	r1
     d82:	0f 92       	push	r0
     d84:	0f b6       	in	r0, 0x3f	; 63
     d86:	0f 92       	push	r0
     d88:	11 24       	eor	r1, r1
     d8a:	0f 93       	push	r16
     d8c:	1f 93       	push	r17
     d8e:	2f 93       	push	r18
     d90:	3f 93       	push	r19
     d92:	4f 93       	push	r20
     d94:	5f 93       	push	r21
     d96:	6f 93       	push	r22
     d98:	7f 93       	push	r23
     d9a:	8f 93       	push	r24
     d9c:	9f 93       	push	r25
     d9e:	af 93       	push	r26
     da0:	bf 93       	push	r27
     da2:	ef 93       	push	r30
     da4:	ff 93       	push	r31
     da6:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
     daa:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
     dae:	ac 01       	movw	r20, r24
     db0:	09 2e       	mov	r0, r25
     db2:	00 0c       	add	r0, r0
     db4:	66 0b       	sbc	r22, r22
     db6:	77 0b       	sbc	r23, r23
     db8:	9a 01       	movw	r18, r20
     dba:	11 27       	eor	r17, r17
     dbc:	00 27       	eor	r16, r16
     dbe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dc2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dc6:	60 e0       	ldi	r22, 0x00	; 0
     dc8:	70 e0       	ldi	r23, 0x00	; 0
     dca:	40 2b       	or	r20, r16
     dcc:	51 2b       	or	r21, r17
     dce:	62 2b       	or	r22, r18
     dd0:	73 2b       	or	r23, r19
     dd2:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
     dd6:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
     dda:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
     dde:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
     de2:	b0 9b       	sbis	0x16, 0	; 22
     de4:	1a c0       	rjmp	.+52     	; 0xe1a <__vector_3+0x9a>
     de6:	01 96       	adiw	r24, 0x01	; 1
     de8:	09 2e       	mov	r0, r25
     dea:	00 0c       	add	r0, r0
     dec:	aa 0b       	sbc	r26, r26
     dee:	bb 0b       	sbc	r27, r27
     df0:	bc 01       	movw	r22, r24
     df2:	55 27       	eor	r21, r21
     df4:	44 27       	eor	r20, r20
     df6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dfa:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dfe:	a0 e0       	ldi	r26, 0x00	; 0
     e00:	b0 e0       	ldi	r27, 0x00	; 0
     e02:	84 2b       	or	r24, r20
     e04:	95 2b       	or	r25, r21
     e06:	a6 2b       	or	r26, r22
     e08:	b7 2b       	or	r27, r23
     e0a:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     e0e:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     e12:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     e16:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     e1a:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0x4>
     e1e:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0x5>
     e22:	30 97       	sbiw	r30, 0x00	; 0
     e24:	39 f0       	breq	.+14     	; 0xe34 <__vector_3+0xb4>
     e26:	62 e0       	ldi	r22, 0x02	; 2
     e28:	70 e0       	ldi	r23, 0x00	; 0
     e2a:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0x4>
     e2e:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0x5>
     e32:	09 95       	icall
     e34:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
     e38:	ff 91       	pop	r31
     e3a:	ef 91       	pop	r30
     e3c:	bf 91       	pop	r27
     e3e:	af 91       	pop	r26
     e40:	9f 91       	pop	r25
     e42:	8f 91       	pop	r24
     e44:	7f 91       	pop	r23
     e46:	6f 91       	pop	r22
     e48:	5f 91       	pop	r21
     e4a:	4f 91       	pop	r20
     e4c:	3f 91       	pop	r19
     e4e:	2f 91       	pop	r18
     e50:	1f 91       	pop	r17
     e52:	0f 91       	pop	r16
     e54:	0f 90       	pop	r0
     e56:	0f be       	out	0x3f, r0	; 63
     e58:	0f 90       	pop	r0
     e5a:	1f 90       	pop	r1
     e5c:	18 95       	reti

00000e5e <__vector_4>:
     e5e:	1f 92       	push	r1
     e60:	0f 92       	push	r0
     e62:	0f b6       	in	r0, 0x3f	; 63
     e64:	0f 92       	push	r0
     e66:	11 24       	eor	r1, r1
     e68:	0f 93       	push	r16
     e6a:	1f 93       	push	r17
     e6c:	2f 93       	push	r18
     e6e:	3f 93       	push	r19
     e70:	4f 93       	push	r20
     e72:	5f 93       	push	r21
     e74:	6f 93       	push	r22
     e76:	7f 93       	push	r23
     e78:	8f 93       	push	r24
     e7a:	9f 93       	push	r25
     e7c:	af 93       	push	r26
     e7e:	bf 93       	push	r27
     e80:	ef 93       	push	r30
     e82:	ff 93       	push	r31
     e84:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
     e88:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
     e8c:	ac 01       	movw	r20, r24
     e8e:	09 2e       	mov	r0, r25
     e90:	00 0c       	add	r0, r0
     e92:	66 0b       	sbc	r22, r22
     e94:	77 0b       	sbc	r23, r23
     e96:	9a 01       	movw	r18, r20
     e98:	11 27       	eor	r17, r17
     e9a:	00 27       	eor	r16, r16
     e9c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ea0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ea4:	60 e0       	ldi	r22, 0x00	; 0
     ea6:	70 e0       	ldi	r23, 0x00	; 0
     ea8:	40 2b       	or	r20, r16
     eaa:	51 2b       	or	r21, r17
     eac:	62 2b       	or	r22, r18
     eae:	73 2b       	or	r23, r19
     eb0:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
     eb4:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
     eb8:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
     ebc:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
     ec0:	b0 9b       	sbis	0x16, 0	; 22
     ec2:	1a c0       	rjmp	.+52     	; 0xef8 <__vector_4+0x9a>
     ec4:	01 96       	adiw	r24, 0x01	; 1
     ec6:	09 2e       	mov	r0, r25
     ec8:	00 0c       	add	r0, r0
     eca:	aa 0b       	sbc	r26, r26
     ecc:	bb 0b       	sbc	r27, r27
     ece:	bc 01       	movw	r22, r24
     ed0:	55 27       	eor	r21, r21
     ed2:	44 27       	eor	r20, r20
     ed4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ed8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     edc:	a0 e0       	ldi	r26, 0x00	; 0
     ede:	b0 e0       	ldi	r27, 0x00	; 0
     ee0:	84 2b       	or	r24, r20
     ee2:	95 2b       	or	r25, r21
     ee4:	a6 2b       	or	r26, r22
     ee6:	b7 2b       	or	r27, r23
     ee8:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     eec:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     ef0:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     ef4:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     ef8:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0x6>
     efc:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0x7>
     f00:	30 97       	sbiw	r30, 0x00	; 0
     f02:	39 f0       	breq	.+14     	; 0xf12 <__vector_4+0xb4>
     f04:	63 e0       	ldi	r22, 0x03	; 3
     f06:	70 e0       	ldi	r23, 0x00	; 0
     f08:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0x6>
     f0c:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0x7>
     f10:	09 95       	icall
     f12:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
     f16:	ff 91       	pop	r31
     f18:	ef 91       	pop	r30
     f1a:	bf 91       	pop	r27
     f1c:	af 91       	pop	r26
     f1e:	9f 91       	pop	r25
     f20:	8f 91       	pop	r24
     f22:	7f 91       	pop	r23
     f24:	6f 91       	pop	r22
     f26:	5f 91       	pop	r21
     f28:	4f 91       	pop	r20
     f2a:	3f 91       	pop	r19
     f2c:	2f 91       	pop	r18
     f2e:	1f 91       	pop	r17
     f30:	0f 91       	pop	r16
     f32:	0f 90       	pop	r0
     f34:	0f be       	out	0x3f, r0	; 63
     f36:	0f 90       	pop	r0
     f38:	1f 90       	pop	r1
     f3a:	18 95       	reti

00000f3c <__vector_5>:
     f3c:	1f 92       	push	r1
     f3e:	0f 92       	push	r0
     f40:	0f b6       	in	r0, 0x3f	; 63
     f42:	0f 92       	push	r0
     f44:	11 24       	eor	r1, r1
     f46:	0f 93       	push	r16
     f48:	1f 93       	push	r17
     f4a:	2f 93       	push	r18
     f4c:	3f 93       	push	r19
     f4e:	4f 93       	push	r20
     f50:	5f 93       	push	r21
     f52:	6f 93       	push	r22
     f54:	7f 93       	push	r23
     f56:	8f 93       	push	r24
     f58:	9f 93       	push	r25
     f5a:	af 93       	push	r26
     f5c:	bf 93       	push	r27
     f5e:	ef 93       	push	r30
     f60:	ff 93       	push	r31
     f62:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
     f66:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
     f6a:	ac 01       	movw	r20, r24
     f6c:	09 2e       	mov	r0, r25
     f6e:	00 0c       	add	r0, r0
     f70:	66 0b       	sbc	r22, r22
     f72:	77 0b       	sbc	r23, r23
     f74:	9a 01       	movw	r18, r20
     f76:	11 27       	eor	r17, r17
     f78:	00 27       	eor	r16, r16
     f7a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f7e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f82:	60 e0       	ldi	r22, 0x00	; 0
     f84:	70 e0       	ldi	r23, 0x00	; 0
     f86:	40 2b       	or	r20, r16
     f88:	51 2b       	or	r21, r17
     f8a:	62 2b       	or	r22, r18
     f8c:	73 2b       	or	r23, r19
     f8e:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
     f92:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
     f96:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
     f9a:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
     f9e:	b0 9b       	sbis	0x16, 0	; 22
     fa0:	1a c0       	rjmp	.+52     	; 0xfd6 <__vector_5+0x9a>
     fa2:	01 96       	adiw	r24, 0x01	; 1
     fa4:	09 2e       	mov	r0, r25
     fa6:	00 0c       	add	r0, r0
     fa8:	aa 0b       	sbc	r26, r26
     faa:	bb 0b       	sbc	r27, r27
     fac:	bc 01       	movw	r22, r24
     fae:	55 27       	eor	r21, r21
     fb0:	44 27       	eor	r20, r20
     fb2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fb6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fba:	a0 e0       	ldi	r26, 0x00	; 0
     fbc:	b0 e0       	ldi	r27, 0x00	; 0
     fbe:	84 2b       	or	r24, r20
     fc0:	95 2b       	or	r25, r21
     fc2:	a6 2b       	or	r26, r22
     fc4:	b7 2b       	or	r27, r23
     fc6:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
     fca:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
     fce:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
     fd2:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
     fd6:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0x8>
     fda:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0x9>
     fde:	30 97       	sbiw	r30, 0x00	; 0
     fe0:	39 f0       	breq	.+14     	; 0xff0 <__vector_5+0xb4>
     fe2:	64 e0       	ldi	r22, 0x04	; 4
     fe4:	70 e0       	ldi	r23, 0x00	; 0
     fe6:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0x8>
     fea:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0x9>
     fee:	09 95       	icall
     ff0:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
     ff4:	ff 91       	pop	r31
     ff6:	ef 91       	pop	r30
     ff8:	bf 91       	pop	r27
     ffa:	af 91       	pop	r26
     ffc:	9f 91       	pop	r25
     ffe:	8f 91       	pop	r24
    1000:	7f 91       	pop	r23
    1002:	6f 91       	pop	r22
    1004:	5f 91       	pop	r21
    1006:	4f 91       	pop	r20
    1008:	3f 91       	pop	r19
    100a:	2f 91       	pop	r18
    100c:	1f 91       	pop	r17
    100e:	0f 91       	pop	r16
    1010:	0f 90       	pop	r0
    1012:	0f be       	out	0x3f, r0	; 63
    1014:	0f 90       	pop	r0
    1016:	1f 90       	pop	r1
    1018:	18 95       	reti

0000101a <__vector_10>:
    101a:	1f 92       	push	r1
    101c:	0f 92       	push	r0
    101e:	0f b6       	in	r0, 0x3f	; 63
    1020:	0f 92       	push	r0
    1022:	11 24       	eor	r1, r1
    1024:	0f 93       	push	r16
    1026:	1f 93       	push	r17
    1028:	2f 93       	push	r18
    102a:	3f 93       	push	r19
    102c:	4f 93       	push	r20
    102e:	5f 93       	push	r21
    1030:	6f 93       	push	r22
    1032:	7f 93       	push	r23
    1034:	8f 93       	push	r24
    1036:	9f 93       	push	r25
    1038:	af 93       	push	r26
    103a:	bf 93       	push	r27
    103c:	ef 93       	push	r30
    103e:	ff 93       	push	r31
    1040:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1044:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1048:	ac 01       	movw	r20, r24
    104a:	09 2e       	mov	r0, r25
    104c:	00 0c       	add	r0, r0
    104e:	66 0b       	sbc	r22, r22
    1050:	77 0b       	sbc	r23, r23
    1052:	9a 01       	movw	r18, r20
    1054:	11 27       	eor	r17, r17
    1056:	00 27       	eor	r16, r16
    1058:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    105c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1060:	60 e0       	ldi	r22, 0x00	; 0
    1062:	70 e0       	ldi	r23, 0x00	; 0
    1064:	40 2b       	or	r20, r16
    1066:	51 2b       	or	r21, r17
    1068:	62 2b       	or	r22, r18
    106a:	73 2b       	or	r23, r19
    106c:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    1070:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    1074:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    1078:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    107c:	b0 9b       	sbis	0x16, 0	; 22
    107e:	1a c0       	rjmp	.+52     	; 0x10b4 <__vector_10+0x9a>
    1080:	01 96       	adiw	r24, 0x01	; 1
    1082:	09 2e       	mov	r0, r25
    1084:	00 0c       	add	r0, r0
    1086:	aa 0b       	sbc	r26, r26
    1088:	bb 0b       	sbc	r27, r27
    108a:	bc 01       	movw	r22, r24
    108c:	55 27       	eor	r21, r21
    108e:	44 27       	eor	r20, r20
    1090:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1094:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1098:	a0 e0       	ldi	r26, 0x00	; 0
    109a:	b0 e0       	ldi	r27, 0x00	; 0
    109c:	84 2b       	or	r24, r20
    109e:	95 2b       	or	r25, r21
    10a0:	a6 2b       	or	r26, r22
    10a2:	b7 2b       	or	r27, r23
    10a4:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    10a8:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    10ac:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    10b0:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    10b4:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0xa>
    10b8:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0xb>
    10bc:	30 97       	sbiw	r30, 0x00	; 0
    10be:	39 f0       	breq	.+14     	; 0x10ce <__vector_10+0xb4>
    10c0:	65 e0       	ldi	r22, 0x05	; 5
    10c2:	70 e0       	ldi	r23, 0x00	; 0
    10c4:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0xa>
    10c8:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0xb>
    10cc:	09 95       	icall
    10ce:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    10d2:	ff 91       	pop	r31
    10d4:	ef 91       	pop	r30
    10d6:	bf 91       	pop	r27
    10d8:	af 91       	pop	r26
    10da:	9f 91       	pop	r25
    10dc:	8f 91       	pop	r24
    10de:	7f 91       	pop	r23
    10e0:	6f 91       	pop	r22
    10e2:	5f 91       	pop	r21
    10e4:	4f 91       	pop	r20
    10e6:	3f 91       	pop	r19
    10e8:	2f 91       	pop	r18
    10ea:	1f 91       	pop	r17
    10ec:	0f 91       	pop	r16
    10ee:	0f 90       	pop	r0
    10f0:	0f be       	out	0x3f, r0	; 63
    10f2:	0f 90       	pop	r0
    10f4:	1f 90       	pop	r1
    10f6:	18 95       	reti

000010f8 <__vector_11>:
    10f8:	1f 92       	push	r1
    10fa:	0f 92       	push	r0
    10fc:	0f b6       	in	r0, 0x3f	; 63
    10fe:	0f 92       	push	r0
    1100:	11 24       	eor	r1, r1
    1102:	0f 93       	push	r16
    1104:	1f 93       	push	r17
    1106:	2f 93       	push	r18
    1108:	3f 93       	push	r19
    110a:	4f 93       	push	r20
    110c:	5f 93       	push	r21
    110e:	6f 93       	push	r22
    1110:	7f 93       	push	r23
    1112:	8f 93       	push	r24
    1114:	9f 93       	push	r25
    1116:	af 93       	push	r26
    1118:	bf 93       	push	r27
    111a:	ef 93       	push	r30
    111c:	ff 93       	push	r31
    111e:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1122:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1126:	ac 01       	movw	r20, r24
    1128:	09 2e       	mov	r0, r25
    112a:	00 0c       	add	r0, r0
    112c:	66 0b       	sbc	r22, r22
    112e:	77 0b       	sbc	r23, r23
    1130:	9a 01       	movw	r18, r20
    1132:	11 27       	eor	r17, r17
    1134:	00 27       	eor	r16, r16
    1136:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    113a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    113e:	60 e0       	ldi	r22, 0x00	; 0
    1140:	70 e0       	ldi	r23, 0x00	; 0
    1142:	40 2b       	or	r20, r16
    1144:	51 2b       	or	r21, r17
    1146:	62 2b       	or	r22, r18
    1148:	73 2b       	or	r23, r19
    114a:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    114e:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    1152:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    1156:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    115a:	b0 9b       	sbis	0x16, 0	; 22
    115c:	1a c0       	rjmp	.+52     	; 0x1192 <__vector_11+0x9a>
    115e:	01 96       	adiw	r24, 0x01	; 1
    1160:	09 2e       	mov	r0, r25
    1162:	00 0c       	add	r0, r0
    1164:	aa 0b       	sbc	r26, r26
    1166:	bb 0b       	sbc	r27, r27
    1168:	bc 01       	movw	r22, r24
    116a:	55 27       	eor	r21, r21
    116c:	44 27       	eor	r20, r20
    116e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1172:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1176:	a0 e0       	ldi	r26, 0x00	; 0
    1178:	b0 e0       	ldi	r27, 0x00	; 0
    117a:	84 2b       	or	r24, r20
    117c:	95 2b       	or	r25, r21
    117e:	a6 2b       	or	r26, r22
    1180:	b7 2b       	or	r27, r23
    1182:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1186:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    118a:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    118e:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1192:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0xc>
    1196:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0xd>
    119a:	30 97       	sbiw	r30, 0x00	; 0
    119c:	39 f0       	breq	.+14     	; 0x11ac <__vector_11+0xb4>
    119e:	66 e0       	ldi	r22, 0x06	; 6
    11a0:	70 e0       	ldi	r23, 0x00	; 0
    11a2:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0xc>
    11a6:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0xd>
    11aa:	09 95       	icall
    11ac:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    11b0:	ff 91       	pop	r31
    11b2:	ef 91       	pop	r30
    11b4:	bf 91       	pop	r27
    11b6:	af 91       	pop	r26
    11b8:	9f 91       	pop	r25
    11ba:	8f 91       	pop	r24
    11bc:	7f 91       	pop	r23
    11be:	6f 91       	pop	r22
    11c0:	5f 91       	pop	r21
    11c2:	4f 91       	pop	r20
    11c4:	3f 91       	pop	r19
    11c6:	2f 91       	pop	r18
    11c8:	1f 91       	pop	r17
    11ca:	0f 91       	pop	r16
    11cc:	0f 90       	pop	r0
    11ce:	0f be       	out	0x3f, r0	; 63
    11d0:	0f 90       	pop	r0
    11d2:	1f 90       	pop	r1
    11d4:	18 95       	reti

000011d6 <__vector_12>:
    11d6:	1f 92       	push	r1
    11d8:	0f 92       	push	r0
    11da:	0f b6       	in	r0, 0x3f	; 63
    11dc:	0f 92       	push	r0
    11de:	11 24       	eor	r1, r1
    11e0:	0f 93       	push	r16
    11e2:	1f 93       	push	r17
    11e4:	2f 93       	push	r18
    11e6:	3f 93       	push	r19
    11e8:	4f 93       	push	r20
    11ea:	5f 93       	push	r21
    11ec:	6f 93       	push	r22
    11ee:	7f 93       	push	r23
    11f0:	8f 93       	push	r24
    11f2:	9f 93       	push	r25
    11f4:	af 93       	push	r26
    11f6:	bf 93       	push	r27
    11f8:	ef 93       	push	r30
    11fa:	ff 93       	push	r31
    11fc:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1200:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1204:	ac 01       	movw	r20, r24
    1206:	09 2e       	mov	r0, r25
    1208:	00 0c       	add	r0, r0
    120a:	66 0b       	sbc	r22, r22
    120c:	77 0b       	sbc	r23, r23
    120e:	9a 01       	movw	r18, r20
    1210:	11 27       	eor	r17, r17
    1212:	00 27       	eor	r16, r16
    1214:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1218:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    121c:	60 e0       	ldi	r22, 0x00	; 0
    121e:	70 e0       	ldi	r23, 0x00	; 0
    1220:	40 2b       	or	r20, r16
    1222:	51 2b       	or	r21, r17
    1224:	62 2b       	or	r22, r18
    1226:	73 2b       	or	r23, r19
    1228:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    122c:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    1230:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    1234:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    1238:	b0 9b       	sbis	0x16, 0	; 22
    123a:	1a c0       	rjmp	.+52     	; 0x1270 <__vector_12+0x9a>
    123c:	01 96       	adiw	r24, 0x01	; 1
    123e:	09 2e       	mov	r0, r25
    1240:	00 0c       	add	r0, r0
    1242:	aa 0b       	sbc	r26, r26
    1244:	bb 0b       	sbc	r27, r27
    1246:	bc 01       	movw	r22, r24
    1248:	55 27       	eor	r21, r21
    124a:	44 27       	eor	r20, r20
    124c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1250:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1254:	a0 e0       	ldi	r26, 0x00	; 0
    1256:	b0 e0       	ldi	r27, 0x00	; 0
    1258:	84 2b       	or	r24, r20
    125a:	95 2b       	or	r25, r21
    125c:	a6 2b       	or	r26, r22
    125e:	b7 2b       	or	r27, r23
    1260:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1264:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1268:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    126c:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1270:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0xe>
    1274:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0xf>
    1278:	30 97       	sbiw	r30, 0x00	; 0
    127a:	39 f0       	breq	.+14     	; 0x128a <__vector_12+0xb4>
    127c:	67 e0       	ldi	r22, 0x07	; 7
    127e:	70 e0       	ldi	r23, 0x00	; 0
    1280:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0xe>
    1284:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0xf>
    1288:	09 95       	icall
    128a:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    128e:	ff 91       	pop	r31
    1290:	ef 91       	pop	r30
    1292:	bf 91       	pop	r27
    1294:	af 91       	pop	r26
    1296:	9f 91       	pop	r25
    1298:	8f 91       	pop	r24
    129a:	7f 91       	pop	r23
    129c:	6f 91       	pop	r22
    129e:	5f 91       	pop	r21
    12a0:	4f 91       	pop	r20
    12a2:	3f 91       	pop	r19
    12a4:	2f 91       	pop	r18
    12a6:	1f 91       	pop	r17
    12a8:	0f 91       	pop	r16
    12aa:	0f 90       	pop	r0
    12ac:	0f be       	out	0x3f, r0	; 63
    12ae:	0f 90       	pop	r0
    12b0:	1f 90       	pop	r1
    12b2:	18 95       	reti

000012b4 <__vector_13>:
    12b4:	1f 92       	push	r1
    12b6:	0f 92       	push	r0
    12b8:	0f b6       	in	r0, 0x3f	; 63
    12ba:	0f 92       	push	r0
    12bc:	11 24       	eor	r1, r1
    12be:	0f 93       	push	r16
    12c0:	1f 93       	push	r17
    12c2:	2f 93       	push	r18
    12c4:	3f 93       	push	r19
    12c6:	4f 93       	push	r20
    12c8:	5f 93       	push	r21
    12ca:	6f 93       	push	r22
    12cc:	7f 93       	push	r23
    12ce:	8f 93       	push	r24
    12d0:	9f 93       	push	r25
    12d2:	af 93       	push	r26
    12d4:	bf 93       	push	r27
    12d6:	ef 93       	push	r30
    12d8:	ff 93       	push	r31
    12da:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    12de:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    12e2:	ac 01       	movw	r20, r24
    12e4:	09 2e       	mov	r0, r25
    12e6:	00 0c       	add	r0, r0
    12e8:	66 0b       	sbc	r22, r22
    12ea:	77 0b       	sbc	r23, r23
    12ec:	9a 01       	movw	r18, r20
    12ee:	11 27       	eor	r17, r17
    12f0:	00 27       	eor	r16, r16
    12f2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12f6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12fa:	60 e0       	ldi	r22, 0x00	; 0
    12fc:	70 e0       	ldi	r23, 0x00	; 0
    12fe:	40 2b       	or	r20, r16
    1300:	51 2b       	or	r21, r17
    1302:	62 2b       	or	r22, r18
    1304:	73 2b       	or	r23, r19
    1306:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    130a:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    130e:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    1312:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    1316:	b0 9b       	sbis	0x16, 0	; 22
    1318:	1a c0       	rjmp	.+52     	; 0x134e <__vector_13+0x9a>
    131a:	01 96       	adiw	r24, 0x01	; 1
    131c:	09 2e       	mov	r0, r25
    131e:	00 0c       	add	r0, r0
    1320:	aa 0b       	sbc	r26, r26
    1322:	bb 0b       	sbc	r27, r27
    1324:	bc 01       	movw	r22, r24
    1326:	55 27       	eor	r21, r21
    1328:	44 27       	eor	r20, r20
    132a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    132e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1332:	a0 e0       	ldi	r26, 0x00	; 0
    1334:	b0 e0       	ldi	r27, 0x00	; 0
    1336:	84 2b       	or	r24, r20
    1338:	95 2b       	or	r25, r21
    133a:	a6 2b       	or	r26, r22
    133c:	b7 2b       	or	r27, r23
    133e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1342:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1346:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    134a:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    134e:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x10>
    1352:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x11>
    1356:	30 97       	sbiw	r30, 0x00	; 0
    1358:	39 f0       	breq	.+14     	; 0x1368 <__vector_13+0xb4>
    135a:	68 e0       	ldi	r22, 0x08	; 8
    135c:	70 e0       	ldi	r23, 0x00	; 0
    135e:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x10>
    1362:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x11>
    1366:	09 95       	icall
    1368:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    136c:	ff 91       	pop	r31
    136e:	ef 91       	pop	r30
    1370:	bf 91       	pop	r27
    1372:	af 91       	pop	r26
    1374:	9f 91       	pop	r25
    1376:	8f 91       	pop	r24
    1378:	7f 91       	pop	r23
    137a:	6f 91       	pop	r22
    137c:	5f 91       	pop	r21
    137e:	4f 91       	pop	r20
    1380:	3f 91       	pop	r19
    1382:	2f 91       	pop	r18
    1384:	1f 91       	pop	r17
    1386:	0f 91       	pop	r16
    1388:	0f 90       	pop	r0
    138a:	0f be       	out	0x3f, r0	; 63
    138c:	0f 90       	pop	r0
    138e:	1f 90       	pop	r1
    1390:	18 95       	reti

00001392 <__vector_14>:
    1392:	1f 92       	push	r1
    1394:	0f 92       	push	r0
    1396:	0f b6       	in	r0, 0x3f	; 63
    1398:	0f 92       	push	r0
    139a:	11 24       	eor	r1, r1
    139c:	0f 93       	push	r16
    139e:	1f 93       	push	r17
    13a0:	2f 93       	push	r18
    13a2:	3f 93       	push	r19
    13a4:	4f 93       	push	r20
    13a6:	5f 93       	push	r21
    13a8:	6f 93       	push	r22
    13aa:	7f 93       	push	r23
    13ac:	8f 93       	push	r24
    13ae:	9f 93       	push	r25
    13b0:	af 93       	push	r26
    13b2:	bf 93       	push	r27
    13b4:	ef 93       	push	r30
    13b6:	ff 93       	push	r31
    13b8:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    13bc:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    13c0:	ac 01       	movw	r20, r24
    13c2:	09 2e       	mov	r0, r25
    13c4:	00 0c       	add	r0, r0
    13c6:	66 0b       	sbc	r22, r22
    13c8:	77 0b       	sbc	r23, r23
    13ca:	9a 01       	movw	r18, r20
    13cc:	11 27       	eor	r17, r17
    13ce:	00 27       	eor	r16, r16
    13d0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13d4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13d8:	60 e0       	ldi	r22, 0x00	; 0
    13da:	70 e0       	ldi	r23, 0x00	; 0
    13dc:	40 2b       	or	r20, r16
    13de:	51 2b       	or	r21, r17
    13e0:	62 2b       	or	r22, r18
    13e2:	73 2b       	or	r23, r19
    13e4:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    13e8:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    13ec:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    13f0:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    13f4:	b0 9b       	sbis	0x16, 0	; 22
    13f6:	1a c0       	rjmp	.+52     	; 0x142c <__vector_14+0x9a>
    13f8:	01 96       	adiw	r24, 0x01	; 1
    13fa:	09 2e       	mov	r0, r25
    13fc:	00 0c       	add	r0, r0
    13fe:	aa 0b       	sbc	r26, r26
    1400:	bb 0b       	sbc	r27, r27
    1402:	bc 01       	movw	r22, r24
    1404:	55 27       	eor	r21, r21
    1406:	44 27       	eor	r20, r20
    1408:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    140c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1410:	a0 e0       	ldi	r26, 0x00	; 0
    1412:	b0 e0       	ldi	r27, 0x00	; 0
    1414:	84 2b       	or	r24, r20
    1416:	95 2b       	or	r25, r21
    1418:	a6 2b       	or	r26, r22
    141a:	b7 2b       	or	r27, r23
    141c:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1420:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1424:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1428:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    142c:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x12>
    1430:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x13>
    1434:	30 97       	sbiw	r30, 0x00	; 0
    1436:	39 f0       	breq	.+14     	; 0x1446 <__vector_14+0xb4>
    1438:	69 e0       	ldi	r22, 0x09	; 9
    143a:	70 e0       	ldi	r23, 0x00	; 0
    143c:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x12>
    1440:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x13>
    1444:	09 95       	icall
    1446:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    144a:	ff 91       	pop	r31
    144c:	ef 91       	pop	r30
    144e:	bf 91       	pop	r27
    1450:	af 91       	pop	r26
    1452:	9f 91       	pop	r25
    1454:	8f 91       	pop	r24
    1456:	7f 91       	pop	r23
    1458:	6f 91       	pop	r22
    145a:	5f 91       	pop	r21
    145c:	4f 91       	pop	r20
    145e:	3f 91       	pop	r19
    1460:	2f 91       	pop	r18
    1462:	1f 91       	pop	r17
    1464:	0f 91       	pop	r16
    1466:	0f 90       	pop	r0
    1468:	0f be       	out	0x3f, r0	; 63
    146a:	0f 90       	pop	r0
    146c:	1f 90       	pop	r1
    146e:	18 95       	reti

00001470 <__vector_15>:
    1470:	1f 92       	push	r1
    1472:	0f 92       	push	r0
    1474:	0f b6       	in	r0, 0x3f	; 63
    1476:	0f 92       	push	r0
    1478:	11 24       	eor	r1, r1
    147a:	0f 93       	push	r16
    147c:	1f 93       	push	r17
    147e:	2f 93       	push	r18
    1480:	3f 93       	push	r19
    1482:	4f 93       	push	r20
    1484:	5f 93       	push	r21
    1486:	6f 93       	push	r22
    1488:	7f 93       	push	r23
    148a:	8f 93       	push	r24
    148c:	9f 93       	push	r25
    148e:	af 93       	push	r26
    1490:	bf 93       	push	r27
    1492:	ef 93       	push	r30
    1494:	ff 93       	push	r31
    1496:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    149a:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    149e:	ac 01       	movw	r20, r24
    14a0:	09 2e       	mov	r0, r25
    14a2:	00 0c       	add	r0, r0
    14a4:	66 0b       	sbc	r22, r22
    14a6:	77 0b       	sbc	r23, r23
    14a8:	9a 01       	movw	r18, r20
    14aa:	11 27       	eor	r17, r17
    14ac:	00 27       	eor	r16, r16
    14ae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14b2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14b6:	60 e0       	ldi	r22, 0x00	; 0
    14b8:	70 e0       	ldi	r23, 0x00	; 0
    14ba:	40 2b       	or	r20, r16
    14bc:	51 2b       	or	r21, r17
    14be:	62 2b       	or	r22, r18
    14c0:	73 2b       	or	r23, r19
    14c2:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    14c6:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    14ca:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    14ce:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    14d2:	b0 9b       	sbis	0x16, 0	; 22
    14d4:	1a c0       	rjmp	.+52     	; 0x150a <__vector_15+0x9a>
    14d6:	01 96       	adiw	r24, 0x01	; 1
    14d8:	09 2e       	mov	r0, r25
    14da:	00 0c       	add	r0, r0
    14dc:	aa 0b       	sbc	r26, r26
    14de:	bb 0b       	sbc	r27, r27
    14e0:	bc 01       	movw	r22, r24
    14e2:	55 27       	eor	r21, r21
    14e4:	44 27       	eor	r20, r20
    14e6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14ea:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14ee:	a0 e0       	ldi	r26, 0x00	; 0
    14f0:	b0 e0       	ldi	r27, 0x00	; 0
    14f2:	84 2b       	or	r24, r20
    14f4:	95 2b       	or	r25, r21
    14f6:	a6 2b       	or	r26, r22
    14f8:	b7 2b       	or	r27, r23
    14fa:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    14fe:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1502:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1506:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    150a:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x14>
    150e:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x15>
    1512:	30 97       	sbiw	r30, 0x00	; 0
    1514:	39 f0       	breq	.+14     	; 0x1524 <__vector_15+0xb4>
    1516:	6a e0       	ldi	r22, 0x0A	; 10
    1518:	70 e0       	ldi	r23, 0x00	; 0
    151a:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x14>
    151e:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x15>
    1522:	09 95       	icall
    1524:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    1528:	ff 91       	pop	r31
    152a:	ef 91       	pop	r30
    152c:	bf 91       	pop	r27
    152e:	af 91       	pop	r26
    1530:	9f 91       	pop	r25
    1532:	8f 91       	pop	r24
    1534:	7f 91       	pop	r23
    1536:	6f 91       	pop	r22
    1538:	5f 91       	pop	r21
    153a:	4f 91       	pop	r20
    153c:	3f 91       	pop	r19
    153e:	2f 91       	pop	r18
    1540:	1f 91       	pop	r17
    1542:	0f 91       	pop	r16
    1544:	0f 90       	pop	r0
    1546:	0f be       	out	0x3f, r0	; 63
    1548:	0f 90       	pop	r0
    154a:	1f 90       	pop	r1
    154c:	18 95       	reti

0000154e <__vector_16>:
    154e:	1f 92       	push	r1
    1550:	0f 92       	push	r0
    1552:	0f b6       	in	r0, 0x3f	; 63
    1554:	0f 92       	push	r0
    1556:	11 24       	eor	r1, r1
    1558:	0f 93       	push	r16
    155a:	1f 93       	push	r17
    155c:	2f 93       	push	r18
    155e:	3f 93       	push	r19
    1560:	4f 93       	push	r20
    1562:	5f 93       	push	r21
    1564:	6f 93       	push	r22
    1566:	7f 93       	push	r23
    1568:	8f 93       	push	r24
    156a:	9f 93       	push	r25
    156c:	af 93       	push	r26
    156e:	bf 93       	push	r27
    1570:	ef 93       	push	r30
    1572:	ff 93       	push	r31
    1574:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1578:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    157c:	ac 01       	movw	r20, r24
    157e:	09 2e       	mov	r0, r25
    1580:	00 0c       	add	r0, r0
    1582:	66 0b       	sbc	r22, r22
    1584:	77 0b       	sbc	r23, r23
    1586:	9a 01       	movw	r18, r20
    1588:	11 27       	eor	r17, r17
    158a:	00 27       	eor	r16, r16
    158c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1590:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1594:	60 e0       	ldi	r22, 0x00	; 0
    1596:	70 e0       	ldi	r23, 0x00	; 0
    1598:	40 2b       	or	r20, r16
    159a:	51 2b       	or	r21, r17
    159c:	62 2b       	or	r22, r18
    159e:	73 2b       	or	r23, r19
    15a0:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    15a4:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    15a8:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    15ac:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    15b0:	b0 9b       	sbis	0x16, 0	; 22
    15b2:	1a c0       	rjmp	.+52     	; 0x15e8 <__vector_16+0x9a>
    15b4:	01 96       	adiw	r24, 0x01	; 1
    15b6:	09 2e       	mov	r0, r25
    15b8:	00 0c       	add	r0, r0
    15ba:	aa 0b       	sbc	r26, r26
    15bc:	bb 0b       	sbc	r27, r27
    15be:	bc 01       	movw	r22, r24
    15c0:	55 27       	eor	r21, r21
    15c2:	44 27       	eor	r20, r20
    15c4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15c8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15cc:	a0 e0       	ldi	r26, 0x00	; 0
    15ce:	b0 e0       	ldi	r27, 0x00	; 0
    15d0:	84 2b       	or	r24, r20
    15d2:	95 2b       	or	r25, r21
    15d4:	a6 2b       	or	r26, r22
    15d6:	b7 2b       	or	r27, r23
    15d8:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    15dc:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    15e0:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    15e4:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    15e8:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x16>
    15ec:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x17>
    15f0:	30 97       	sbiw	r30, 0x00	; 0
    15f2:	39 f0       	breq	.+14     	; 0x1602 <__vector_16+0xb4>
    15f4:	6b e0       	ldi	r22, 0x0B	; 11
    15f6:	70 e0       	ldi	r23, 0x00	; 0
    15f8:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x16>
    15fc:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x17>
    1600:	09 95       	icall
    1602:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    1606:	ff 91       	pop	r31
    1608:	ef 91       	pop	r30
    160a:	bf 91       	pop	r27
    160c:	af 91       	pop	r26
    160e:	9f 91       	pop	r25
    1610:	8f 91       	pop	r24
    1612:	7f 91       	pop	r23
    1614:	6f 91       	pop	r22
    1616:	5f 91       	pop	r21
    1618:	4f 91       	pop	r20
    161a:	3f 91       	pop	r19
    161c:	2f 91       	pop	r18
    161e:	1f 91       	pop	r17
    1620:	0f 91       	pop	r16
    1622:	0f 90       	pop	r0
    1624:	0f be       	out	0x3f, r0	; 63
    1626:	0f 90       	pop	r0
    1628:	1f 90       	pop	r1
    162a:	18 95       	reti

0000162c <__vector_17>:
    162c:	1f 92       	push	r1
    162e:	0f 92       	push	r0
    1630:	0f b6       	in	r0, 0x3f	; 63
    1632:	0f 92       	push	r0
    1634:	11 24       	eor	r1, r1
    1636:	0f 93       	push	r16
    1638:	1f 93       	push	r17
    163a:	2f 93       	push	r18
    163c:	3f 93       	push	r19
    163e:	4f 93       	push	r20
    1640:	5f 93       	push	r21
    1642:	6f 93       	push	r22
    1644:	7f 93       	push	r23
    1646:	8f 93       	push	r24
    1648:	9f 93       	push	r25
    164a:	af 93       	push	r26
    164c:	bf 93       	push	r27
    164e:	ef 93       	push	r30
    1650:	ff 93       	push	r31
    1652:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1656:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    165a:	ac 01       	movw	r20, r24
    165c:	09 2e       	mov	r0, r25
    165e:	00 0c       	add	r0, r0
    1660:	66 0b       	sbc	r22, r22
    1662:	77 0b       	sbc	r23, r23
    1664:	9a 01       	movw	r18, r20
    1666:	11 27       	eor	r17, r17
    1668:	00 27       	eor	r16, r16
    166a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    166e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1672:	60 e0       	ldi	r22, 0x00	; 0
    1674:	70 e0       	ldi	r23, 0x00	; 0
    1676:	40 2b       	or	r20, r16
    1678:	51 2b       	or	r21, r17
    167a:	62 2b       	or	r22, r18
    167c:	73 2b       	or	r23, r19
    167e:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    1682:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    1686:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    168a:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    168e:	b0 9b       	sbis	0x16, 0	; 22
    1690:	1a c0       	rjmp	.+52     	; 0x16c6 <__vector_17+0x9a>
    1692:	01 96       	adiw	r24, 0x01	; 1
    1694:	09 2e       	mov	r0, r25
    1696:	00 0c       	add	r0, r0
    1698:	aa 0b       	sbc	r26, r26
    169a:	bb 0b       	sbc	r27, r27
    169c:	bc 01       	movw	r22, r24
    169e:	55 27       	eor	r21, r21
    16a0:	44 27       	eor	r20, r20
    16a2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16a6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16aa:	a0 e0       	ldi	r26, 0x00	; 0
    16ac:	b0 e0       	ldi	r27, 0x00	; 0
    16ae:	84 2b       	or	r24, r20
    16b0:	95 2b       	or	r25, r21
    16b2:	a6 2b       	or	r26, r22
    16b4:	b7 2b       	or	r27, r23
    16b6:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    16ba:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    16be:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    16c2:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    16c6:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x18>
    16ca:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x19>
    16ce:	30 97       	sbiw	r30, 0x00	; 0
    16d0:	39 f0       	breq	.+14     	; 0x16e0 <__vector_17+0xb4>
    16d2:	6c e0       	ldi	r22, 0x0C	; 12
    16d4:	70 e0       	ldi	r23, 0x00	; 0
    16d6:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x18>
    16da:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x19>
    16de:	09 95       	icall
    16e0:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    16e4:	ff 91       	pop	r31
    16e6:	ef 91       	pop	r30
    16e8:	bf 91       	pop	r27
    16ea:	af 91       	pop	r26
    16ec:	9f 91       	pop	r25
    16ee:	8f 91       	pop	r24
    16f0:	7f 91       	pop	r23
    16f2:	6f 91       	pop	r22
    16f4:	5f 91       	pop	r21
    16f6:	4f 91       	pop	r20
    16f8:	3f 91       	pop	r19
    16fa:	2f 91       	pop	r18
    16fc:	1f 91       	pop	r17
    16fe:	0f 91       	pop	r16
    1700:	0f 90       	pop	r0
    1702:	0f be       	out	0x3f, r0	; 63
    1704:	0f 90       	pop	r0
    1706:	1f 90       	pop	r1
    1708:	18 95       	reti

0000170a <__vector_18>:
    170a:	1f 92       	push	r1
    170c:	0f 92       	push	r0
    170e:	0f b6       	in	r0, 0x3f	; 63
    1710:	0f 92       	push	r0
    1712:	11 24       	eor	r1, r1
    1714:	0f 93       	push	r16
    1716:	1f 93       	push	r17
    1718:	2f 93       	push	r18
    171a:	3f 93       	push	r19
    171c:	4f 93       	push	r20
    171e:	5f 93       	push	r21
    1720:	6f 93       	push	r22
    1722:	7f 93       	push	r23
    1724:	8f 93       	push	r24
    1726:	9f 93       	push	r25
    1728:	af 93       	push	r26
    172a:	bf 93       	push	r27
    172c:	ef 93       	push	r30
    172e:	ff 93       	push	r31
    1730:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1734:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1738:	ac 01       	movw	r20, r24
    173a:	09 2e       	mov	r0, r25
    173c:	00 0c       	add	r0, r0
    173e:	66 0b       	sbc	r22, r22
    1740:	77 0b       	sbc	r23, r23
    1742:	9a 01       	movw	r18, r20
    1744:	11 27       	eor	r17, r17
    1746:	00 27       	eor	r16, r16
    1748:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    174c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1750:	60 e0       	ldi	r22, 0x00	; 0
    1752:	70 e0       	ldi	r23, 0x00	; 0
    1754:	40 2b       	or	r20, r16
    1756:	51 2b       	or	r21, r17
    1758:	62 2b       	or	r22, r18
    175a:	73 2b       	or	r23, r19
    175c:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    1760:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    1764:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    1768:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    176c:	b0 9b       	sbis	0x16, 0	; 22
    176e:	1a c0       	rjmp	.+52     	; 0x17a4 <__vector_18+0x9a>
    1770:	01 96       	adiw	r24, 0x01	; 1
    1772:	09 2e       	mov	r0, r25
    1774:	00 0c       	add	r0, r0
    1776:	aa 0b       	sbc	r26, r26
    1778:	bb 0b       	sbc	r27, r27
    177a:	bc 01       	movw	r22, r24
    177c:	55 27       	eor	r21, r21
    177e:	44 27       	eor	r20, r20
    1780:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1784:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1788:	a0 e0       	ldi	r26, 0x00	; 0
    178a:	b0 e0       	ldi	r27, 0x00	; 0
    178c:	84 2b       	or	r24, r20
    178e:	95 2b       	or	r25, r21
    1790:	a6 2b       	or	r26, r22
    1792:	b7 2b       	or	r27, r23
    1794:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1798:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    179c:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    17a0:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    17a4:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x1a>
    17a8:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x1b>
    17ac:	30 97       	sbiw	r30, 0x00	; 0
    17ae:	39 f0       	breq	.+14     	; 0x17be <__vector_18+0xb4>
    17b0:	6d e0       	ldi	r22, 0x0D	; 13
    17b2:	70 e0       	ldi	r23, 0x00	; 0
    17b4:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x1a>
    17b8:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x1b>
    17bc:	09 95       	icall
    17be:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    17c2:	ff 91       	pop	r31
    17c4:	ef 91       	pop	r30
    17c6:	bf 91       	pop	r27
    17c8:	af 91       	pop	r26
    17ca:	9f 91       	pop	r25
    17cc:	8f 91       	pop	r24
    17ce:	7f 91       	pop	r23
    17d0:	6f 91       	pop	r22
    17d2:	5f 91       	pop	r21
    17d4:	4f 91       	pop	r20
    17d6:	3f 91       	pop	r19
    17d8:	2f 91       	pop	r18
    17da:	1f 91       	pop	r17
    17dc:	0f 91       	pop	r16
    17de:	0f 90       	pop	r0
    17e0:	0f be       	out	0x3f, r0	; 63
    17e2:	0f 90       	pop	r0
    17e4:	1f 90       	pop	r1
    17e6:	18 95       	reti

000017e8 <__vector_19>:
    17e8:	1f 92       	push	r1
    17ea:	0f 92       	push	r0
    17ec:	0f b6       	in	r0, 0x3f	; 63
    17ee:	0f 92       	push	r0
    17f0:	11 24       	eor	r1, r1
    17f2:	0f 93       	push	r16
    17f4:	1f 93       	push	r17
    17f6:	2f 93       	push	r18
    17f8:	3f 93       	push	r19
    17fa:	4f 93       	push	r20
    17fc:	5f 93       	push	r21
    17fe:	6f 93       	push	r22
    1800:	7f 93       	push	r23
    1802:	8f 93       	push	r24
    1804:	9f 93       	push	r25
    1806:	af 93       	push	r26
    1808:	bf 93       	push	r27
    180a:	ef 93       	push	r30
    180c:	ff 93       	push	r31
    180e:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1812:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1816:	ac 01       	movw	r20, r24
    1818:	09 2e       	mov	r0, r25
    181a:	00 0c       	add	r0, r0
    181c:	66 0b       	sbc	r22, r22
    181e:	77 0b       	sbc	r23, r23
    1820:	9a 01       	movw	r18, r20
    1822:	11 27       	eor	r17, r17
    1824:	00 27       	eor	r16, r16
    1826:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    182a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    182e:	60 e0       	ldi	r22, 0x00	; 0
    1830:	70 e0       	ldi	r23, 0x00	; 0
    1832:	40 2b       	or	r20, r16
    1834:	51 2b       	or	r21, r17
    1836:	62 2b       	or	r22, r18
    1838:	73 2b       	or	r23, r19
    183a:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    183e:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    1842:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    1846:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    184a:	b0 9b       	sbis	0x16, 0	; 22
    184c:	1a c0       	rjmp	.+52     	; 0x1882 <__vector_19+0x9a>
    184e:	01 96       	adiw	r24, 0x01	; 1
    1850:	09 2e       	mov	r0, r25
    1852:	00 0c       	add	r0, r0
    1854:	aa 0b       	sbc	r26, r26
    1856:	bb 0b       	sbc	r27, r27
    1858:	bc 01       	movw	r22, r24
    185a:	55 27       	eor	r21, r21
    185c:	44 27       	eor	r20, r20
    185e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1862:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1866:	a0 e0       	ldi	r26, 0x00	; 0
    1868:	b0 e0       	ldi	r27, 0x00	; 0
    186a:	84 2b       	or	r24, r20
    186c:	95 2b       	or	r25, r21
    186e:	a6 2b       	or	r26, r22
    1870:	b7 2b       	or	r27, r23
    1872:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1876:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    187a:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    187e:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1882:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x1c>
    1886:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x1d>
    188a:	30 97       	sbiw	r30, 0x00	; 0
    188c:	39 f0       	breq	.+14     	; 0x189c <__vector_19+0xb4>
    188e:	6e e0       	ldi	r22, 0x0E	; 14
    1890:	70 e0       	ldi	r23, 0x00	; 0
    1892:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x1c>
    1896:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x1d>
    189a:	09 95       	icall
    189c:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    18a0:	ff 91       	pop	r31
    18a2:	ef 91       	pop	r30
    18a4:	bf 91       	pop	r27
    18a6:	af 91       	pop	r26
    18a8:	9f 91       	pop	r25
    18aa:	8f 91       	pop	r24
    18ac:	7f 91       	pop	r23
    18ae:	6f 91       	pop	r22
    18b0:	5f 91       	pop	r21
    18b2:	4f 91       	pop	r20
    18b4:	3f 91       	pop	r19
    18b6:	2f 91       	pop	r18
    18b8:	1f 91       	pop	r17
    18ba:	0f 91       	pop	r16
    18bc:	0f 90       	pop	r0
    18be:	0f be       	out	0x3f, r0	; 63
    18c0:	0f 90       	pop	r0
    18c2:	1f 90       	pop	r1
    18c4:	18 95       	reti

000018c6 <__vector_20>:
    18c6:	1f 92       	push	r1
    18c8:	0f 92       	push	r0
    18ca:	0f b6       	in	r0, 0x3f	; 63
    18cc:	0f 92       	push	r0
    18ce:	11 24       	eor	r1, r1
    18d0:	0f 93       	push	r16
    18d2:	1f 93       	push	r17
    18d4:	2f 93       	push	r18
    18d6:	3f 93       	push	r19
    18d8:	4f 93       	push	r20
    18da:	5f 93       	push	r21
    18dc:	6f 93       	push	r22
    18de:	7f 93       	push	r23
    18e0:	8f 93       	push	r24
    18e2:	9f 93       	push	r25
    18e4:	af 93       	push	r26
    18e6:	bf 93       	push	r27
    18e8:	ef 93       	push	r30
    18ea:	ff 93       	push	r31
    18ec:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    18f0:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    18f4:	ac 01       	movw	r20, r24
    18f6:	09 2e       	mov	r0, r25
    18f8:	00 0c       	add	r0, r0
    18fa:	66 0b       	sbc	r22, r22
    18fc:	77 0b       	sbc	r23, r23
    18fe:	9a 01       	movw	r18, r20
    1900:	11 27       	eor	r17, r17
    1902:	00 27       	eor	r16, r16
    1904:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1908:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    190c:	60 e0       	ldi	r22, 0x00	; 0
    190e:	70 e0       	ldi	r23, 0x00	; 0
    1910:	40 2b       	or	r20, r16
    1912:	51 2b       	or	r21, r17
    1914:	62 2b       	or	r22, r18
    1916:	73 2b       	or	r23, r19
    1918:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    191c:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    1920:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    1924:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    1928:	b0 9b       	sbis	0x16, 0	; 22
    192a:	1a c0       	rjmp	.+52     	; 0x1960 <__vector_20+0x9a>
    192c:	01 96       	adiw	r24, 0x01	; 1
    192e:	09 2e       	mov	r0, r25
    1930:	00 0c       	add	r0, r0
    1932:	aa 0b       	sbc	r26, r26
    1934:	bb 0b       	sbc	r27, r27
    1936:	bc 01       	movw	r22, r24
    1938:	55 27       	eor	r21, r21
    193a:	44 27       	eor	r20, r20
    193c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1940:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1944:	a0 e0       	ldi	r26, 0x00	; 0
    1946:	b0 e0       	ldi	r27, 0x00	; 0
    1948:	84 2b       	or	r24, r20
    194a:	95 2b       	or	r25, r21
    194c:	a6 2b       	or	r26, r22
    194e:	b7 2b       	or	r27, r23
    1950:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1954:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1958:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    195c:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1960:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <mtable+0x1e>
    1964:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <mtable+0x1f>
    1968:	30 97       	sbiw	r30, 0x00	; 0
    196a:	39 f0       	breq	.+14     	; 0x197a <__vector_20+0xb4>
    196c:	6f e0       	ldi	r22, 0x0F	; 15
    196e:	70 e0       	ldi	r23, 0x00	; 0
    1970:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <otable+0x1e>
    1974:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <otable+0x1f>
    1978:	09 95       	icall
    197a:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    197e:	ff 91       	pop	r31
    1980:	ef 91       	pop	r30
    1982:	bf 91       	pop	r27
    1984:	af 91       	pop	r26
    1986:	9f 91       	pop	r25
    1988:	8f 91       	pop	r24
    198a:	7f 91       	pop	r23
    198c:	6f 91       	pop	r22
    198e:	5f 91       	pop	r21
    1990:	4f 91       	pop	r20
    1992:	3f 91       	pop	r19
    1994:	2f 91       	pop	r18
    1996:	1f 91       	pop	r17
    1998:	0f 91       	pop	r16
    199a:	0f 90       	pop	r0
    199c:	0f be       	out	0x3f, r0	; 63
    199e:	0f 90       	pop	r0
    19a0:	1f 90       	pop	r1
    19a2:	18 95       	reti

000019a4 <__vector_21>:
    19a4:	1f 92       	push	r1
    19a6:	0f 92       	push	r0
    19a8:	0f b6       	in	r0, 0x3f	; 63
    19aa:	0f 92       	push	r0
    19ac:	11 24       	eor	r1, r1
    19ae:	0f 93       	push	r16
    19b0:	1f 93       	push	r17
    19b2:	2f 93       	push	r18
    19b4:	3f 93       	push	r19
    19b6:	4f 93       	push	r20
    19b8:	5f 93       	push	r21
    19ba:	6f 93       	push	r22
    19bc:	7f 93       	push	r23
    19be:	8f 93       	push	r24
    19c0:	9f 93       	push	r25
    19c2:	af 93       	push	r26
    19c4:	bf 93       	push	r27
    19c6:	ef 93       	push	r30
    19c8:	ff 93       	push	r31
    19ca:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    19ce:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    19d2:	ac 01       	movw	r20, r24
    19d4:	09 2e       	mov	r0, r25
    19d6:	00 0c       	add	r0, r0
    19d8:	66 0b       	sbc	r22, r22
    19da:	77 0b       	sbc	r23, r23
    19dc:	9a 01       	movw	r18, r20
    19de:	11 27       	eor	r17, r17
    19e0:	00 27       	eor	r16, r16
    19e2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19e6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19ea:	60 e0       	ldi	r22, 0x00	; 0
    19ec:	70 e0       	ldi	r23, 0x00	; 0
    19ee:	40 2b       	or	r20, r16
    19f0:	51 2b       	or	r21, r17
    19f2:	62 2b       	or	r22, r18
    19f4:	73 2b       	or	r23, r19
    19f6:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    19fa:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    19fe:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    1a02:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    1a06:	b0 9b       	sbis	0x16, 0	; 22
    1a08:	1a c0       	rjmp	.+52     	; 0x1a3e <__vector_21+0x9a>
    1a0a:	01 96       	adiw	r24, 0x01	; 1
    1a0c:	09 2e       	mov	r0, r25
    1a0e:	00 0c       	add	r0, r0
    1a10:	aa 0b       	sbc	r26, r26
    1a12:	bb 0b       	sbc	r27, r27
    1a14:	bc 01       	movw	r22, r24
    1a16:	55 27       	eor	r21, r21
    1a18:	44 27       	eor	r20, r20
    1a1a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a1e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a22:	a0 e0       	ldi	r26, 0x00	; 0
    1a24:	b0 e0       	ldi	r27, 0x00	; 0
    1a26:	84 2b       	or	r24, r20
    1a28:	95 2b       	or	r25, r21
    1a2a:	a6 2b       	or	r26, r22
    1a2c:	b7 2b       	or	r27, r23
    1a2e:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1a32:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1a36:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1a3a:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1a3e:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <mtable+0x20>
    1a42:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <mtable+0x21>
    1a46:	30 97       	sbiw	r30, 0x00	; 0
    1a48:	39 f0       	breq	.+14     	; 0x1a58 <__vector_21+0xb4>
    1a4a:	60 e1       	ldi	r22, 0x10	; 16
    1a4c:	70 e0       	ldi	r23, 0x00	; 0
    1a4e:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <otable+0x20>
    1a52:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <otable+0x21>
    1a56:	09 95       	icall
    1a58:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    1a5c:	ff 91       	pop	r31
    1a5e:	ef 91       	pop	r30
    1a60:	bf 91       	pop	r27
    1a62:	af 91       	pop	r26
    1a64:	9f 91       	pop	r25
    1a66:	8f 91       	pop	r24
    1a68:	7f 91       	pop	r23
    1a6a:	6f 91       	pop	r22
    1a6c:	5f 91       	pop	r21
    1a6e:	4f 91       	pop	r20
    1a70:	3f 91       	pop	r19
    1a72:	2f 91       	pop	r18
    1a74:	1f 91       	pop	r17
    1a76:	0f 91       	pop	r16
    1a78:	0f 90       	pop	r0
    1a7a:	0f be       	out	0x3f, r0	; 63
    1a7c:	0f 90       	pop	r0
    1a7e:	1f 90       	pop	r1
    1a80:	18 95       	reti

00001a82 <__vector_22>:
    1a82:	1f 92       	push	r1
    1a84:	0f 92       	push	r0
    1a86:	0f b6       	in	r0, 0x3f	; 63
    1a88:	0f 92       	push	r0
    1a8a:	11 24       	eor	r1, r1
    1a8c:	0f 93       	push	r16
    1a8e:	1f 93       	push	r17
    1a90:	2f 93       	push	r18
    1a92:	3f 93       	push	r19
    1a94:	4f 93       	push	r20
    1a96:	5f 93       	push	r21
    1a98:	6f 93       	push	r22
    1a9a:	7f 93       	push	r23
    1a9c:	8f 93       	push	r24
    1a9e:	9f 93       	push	r25
    1aa0:	af 93       	push	r26
    1aa2:	bf 93       	push	r27
    1aa4:	ef 93       	push	r30
    1aa6:	ff 93       	push	r31
    1aa8:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1aac:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1ab0:	ac 01       	movw	r20, r24
    1ab2:	09 2e       	mov	r0, r25
    1ab4:	00 0c       	add	r0, r0
    1ab6:	66 0b       	sbc	r22, r22
    1ab8:	77 0b       	sbc	r23, r23
    1aba:	9a 01       	movw	r18, r20
    1abc:	11 27       	eor	r17, r17
    1abe:	00 27       	eor	r16, r16
    1ac0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ac4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ac8:	60 e0       	ldi	r22, 0x00	; 0
    1aca:	70 e0       	ldi	r23, 0x00	; 0
    1acc:	40 2b       	or	r20, r16
    1ace:	51 2b       	or	r21, r17
    1ad0:	62 2b       	or	r22, r18
    1ad2:	73 2b       	or	r23, r19
    1ad4:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <timestamp>
    1ad8:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <timestamp+0x1>
    1adc:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <timestamp+0x2>
    1ae0:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <timestamp+0x3>
    1ae4:	b0 9b       	sbis	0x16, 0	; 22
    1ae6:	1a c0       	rjmp	.+52     	; 0x1b1c <__vector_22+0x9a>
    1ae8:	01 96       	adiw	r24, 0x01	; 1
    1aea:	09 2e       	mov	r0, r25
    1aec:	00 0c       	add	r0, r0
    1aee:	aa 0b       	sbc	r26, r26
    1af0:	bb 0b       	sbc	r27, r27
    1af2:	bc 01       	movw	r22, r24
    1af4:	55 27       	eor	r21, r21
    1af6:	44 27       	eor	r20, r20
    1af8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1afc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b00:	a0 e0       	ldi	r26, 0x00	; 0
    1b02:	b0 e0       	ldi	r27, 0x00	; 0
    1b04:	84 2b       	or	r24, r20
    1b06:	95 2b       	or	r25, r21
    1b08:	a6 2b       	or	r26, r22
    1b0a:	b7 2b       	or	r27, r23
    1b0c:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <timestamp>
    1b10:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <timestamp+0x1>
    1b14:	a0 93 3e 01 	sts	0x013E, r26	; 0x80013e <timestamp+0x2>
    1b18:	b0 93 3f 01 	sts	0x013F, r27	; 0x80013f <timestamp+0x3>
    1b1c:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <mtable+0x22>
    1b20:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <mtable+0x23>
    1b24:	30 97       	sbiw	r30, 0x00	; 0
    1b26:	39 f0       	breq	.+14     	; 0x1b36 <__vector_22+0xb4>
    1b28:	61 e1       	ldi	r22, 0x11	; 17
    1b2a:	70 e0       	ldi	r23, 0x00	; 0
    1b2c:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <otable+0x22>
    1b30:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <otable+0x23>
    1b34:	09 95       	icall
    1b36:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    1b3a:	ff 91       	pop	r31
    1b3c:	ef 91       	pop	r30
    1b3e:	bf 91       	pop	r27
    1b40:	af 91       	pop	r26
    1b42:	9f 91       	pop	r25
    1b44:	8f 91       	pop	r24
    1b46:	7f 91       	pop	r23
    1b48:	6f 91       	pop	r22
    1b4a:	5f 91       	pop	r21
    1b4c:	4f 91       	pop	r20
    1b4e:	3f 91       	pop	r19
    1b50:	2f 91       	pop	r18
    1b52:	1f 91       	pop	r17
    1b54:	0f 91       	pop	r16
    1b56:	0f 90       	pop	r0
    1b58:	0f be       	out	0x3f, r0	; 63
    1b5a:	0f 90       	pop	r0
    1b5c:	1f 90       	pop	r1
    1b5e:	18 95       	reti

00001b60 <idle>:
    1b60:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    1b64:	78 94       	sei
    1b66:	81 e0       	ldi	r24, 0x01	; 1
    1b68:	83 bf       	out	0x33, r24	; 51
    1b6a:	88 95       	sleep
    1b6c:	fc cf       	rjmp	.-8      	; 0x1b66 <idle+0x6>

00001b6e <__vector_9>:
    1b6e:	1f 92       	push	r1
    1b70:	0f 92       	push	r0
    1b72:	0f b6       	in	r0, 0x3f	; 63
    1b74:	0f 92       	push	r0
    1b76:	11 24       	eor	r1, r1
    1b78:	2f 93       	push	r18
    1b7a:	3f 93       	push	r19
    1b7c:	4f 93       	push	r20
    1b7e:	5f 93       	push	r21
    1b80:	6f 93       	push	r22
    1b82:	7f 93       	push	r23
    1b84:	8f 93       	push	r24
    1b86:	9f 93       	push	r25
    1b88:	ef 93       	push	r30
    1b8a:	ff 93       	push	r31
    1b8c:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1b90:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1b94:	01 96       	adiw	r24, 0x01	; 1
    1b96:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <overflows+0x1>
    1b9a:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <overflows>
    1b9e:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <timerQ>
    1ba2:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <timerQ+0x1>
    1ba6:	30 97       	sbiw	r30, 0x00	; 0
    1ba8:	01 f1       	breq	.+64     	; 0x1bea <__vector_9+0x7c>
    1baa:	42 81       	ldd	r20, Z+2	; 0x02
    1bac:	53 81       	ldd	r21, Z+3	; 0x03
    1bae:	64 81       	ldd	r22, Z+4	; 0x04
    1bb0:	75 81       	ldd	r23, Z+5	; 0x05
    1bb2:	86 17       	cp	r24, r22
    1bb4:	97 07       	cpc	r25, r23
    1bb6:	c9 f4       	brne	.+50     	; 0x1bea <__vector_9+0x7c>
    1bb8:	ca 01       	movw	r24, r20
    1bba:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bbe:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bc2:	42 1b       	sub	r20, r18
    1bc4:	53 0b       	sbc	r21, r19
    1bc6:	41 30       	cpi	r20, 0x01	; 1
    1bc8:	51 05       	cpc	r21, r1
    1bca:	29 f4       	brne	.+10     	; 0x1bd6 <__vector_9+0x68>
    1bcc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bd0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bd4:	01 96       	adiw	r24, 0x01	; 1
    1bd6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1bda:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1bde:	ef e6       	ldi	r30, 0x6F	; 111
    1be0:	f0 e0       	ldi	r31, 0x00	; 0
    1be2:	80 81       	ld	r24, Z
    1be4:	82 60       	ori	r24, 0x02	; 2
    1be6:	80 83       	st	Z, r24
    1be8:	05 c0       	rjmp	.+10     	; 0x1bf4 <__vector_9+0x86>
    1bea:	ef e6       	ldi	r30, 0x6F	; 111
    1bec:	f0 e0       	ldi	r31, 0x00	; 0
    1bee:	80 81       	ld	r24, Z
    1bf0:	8d 7f       	andi	r24, 0xFD	; 253
    1bf2:	80 83       	st	Z, r24
    1bf4:	ff 91       	pop	r31
    1bf6:	ef 91       	pop	r30
    1bf8:	9f 91       	pop	r25
    1bfa:	8f 91       	pop	r24
    1bfc:	7f 91       	pop	r23
    1bfe:	6f 91       	pop	r22
    1c00:	5f 91       	pop	r21
    1c02:	4f 91       	pop	r20
    1c04:	3f 91       	pop	r19
    1c06:	2f 91       	pop	r18
    1c08:	0f 90       	pop	r0
    1c0a:	0f be       	out	0x3f, r0	; 63
    1c0c:	0f 90       	pop	r0
    1c0e:	1f 90       	pop	r1
    1c10:	18 95       	reti

00001c12 <__vector_7>:
    1c12:	1f 92       	push	r1
    1c14:	0f 92       	push	r0
    1c16:	0f b6       	in	r0, 0x3f	; 63
    1c18:	0f 92       	push	r0
    1c1a:	11 24       	eor	r1, r1
    1c1c:	cf 92       	push	r12
    1c1e:	df 92       	push	r13
    1c20:	ef 92       	push	r14
    1c22:	ff 92       	push	r15
    1c24:	2f 93       	push	r18
    1c26:	3f 93       	push	r19
    1c28:	4f 93       	push	r20
    1c2a:	5f 93       	push	r21
    1c2c:	6f 93       	push	r22
    1c2e:	7f 93       	push	r23
    1c30:	8f 93       	push	r24
    1c32:	9f 93       	push	r25
    1c34:	af 93       	push	r26
    1c36:	bf 93       	push	r27
    1c38:	ef 93       	push	r30
    1c3a:	ff 93       	push	r31
    1c3c:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <overflows>
    1c40:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <overflows+0x1>
    1c44:	6c 01       	movw	r12, r24
    1c46:	09 2e       	mov	r0, r25
    1c48:	00 0c       	add	r0, r0
    1c4a:	ee 08       	sbc	r14, r14
    1c4c:	ff 08       	sbc	r15, r15
    1c4e:	76 01       	movw	r14, r12
    1c50:	dd 24       	eor	r13, r13
    1c52:	cc 24       	eor	r12, r12
    1c54:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c58:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c5c:	60 e0       	ldi	r22, 0x00	; 0
    1c5e:	70 e0       	ldi	r23, 0x00	; 0
    1c60:	c4 2a       	or	r12, r20
    1c62:	d5 2a       	or	r13, r21
    1c64:	e6 2a       	or	r14, r22
    1c66:	f7 2a       	or	r15, r23
    1c68:	b0 9b       	sbis	0x16, 0	; 22
    1c6a:	1e c0       	rjmp	.+60     	; 0x1ca8 <__vector_7+0x96>
    1c6c:	6c 01       	movw	r12, r24
    1c6e:	2f ef       	ldi	r18, 0xFF	; 255
    1c70:	c2 1a       	sub	r12, r18
    1c72:	d2 0a       	sbc	r13, r18
    1c74:	0d 2c       	mov	r0, r13
    1c76:	00 0c       	add	r0, r0
    1c78:	ee 08       	sbc	r14, r14
    1c7a:	ff 08       	sbc	r15, r15
    1c7c:	d6 01       	movw	r26, r12
    1c7e:	99 27       	eor	r25, r25
    1c80:	88 27       	eor	r24, r24
    1c82:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c86:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c8a:	e1 2c       	mov	r14, r1
    1c8c:	f1 2c       	mov	r15, r1
    1c8e:	c8 2a       	or	r12, r24
    1c90:	d9 2a       	or	r13, r25
    1c92:	ea 2a       	or	r14, r26
    1c94:	fb 2a       	or	r15, r27
    1c96:	08 c0       	rjmp	.+16     	; 0x1ca8 <__vector_7+0x96>
    1c98:	80 e4       	ldi	r24, 0x40	; 64
    1c9a:	91 e0       	ldi	r25, 0x01	; 1
    1c9c:	0e 94 79 05 	call	0xaf2	; 0xaf2 <dequeue>
    1ca0:	62 e4       	ldi	r22, 0x42	; 66
    1ca2:	71 e0       	ldi	r23, 0x01	; 1
    1ca4:	0e 94 17 05 	call	0xa2e	; 0xa2e <enqueueByDeadline>
    1ca8:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <timerQ>
    1cac:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <timerQ+0x1>
    1cb0:	30 97       	sbiw	r30, 0x00	; 0
    1cb2:	69 f0       	breq	.+26     	; 0x1cce <__vector_7+0xbc>
    1cb4:	82 81       	ldd	r24, Z+2	; 0x02
    1cb6:	93 81       	ldd	r25, Z+3	; 0x03
    1cb8:	a4 81       	ldd	r26, Z+4	; 0x04
    1cba:	b5 81       	ldd	r27, Z+5	; 0x05
    1cbc:	8c 19       	sub	r24, r12
    1cbe:	9d 09       	sbc	r25, r13
    1cc0:	ae 09       	sbc	r26, r14
    1cc2:	bf 09       	sbc	r27, r15
    1cc4:	18 16       	cp	r1, r24
    1cc6:	19 06       	cpc	r1, r25
    1cc8:	1a 06       	cpc	r1, r26
    1cca:	1b 06       	cpc	r1, r27
    1ccc:	2c f7       	brge	.-54     	; 0x1c98 <__vector_7+0x86>
    1cce:	30 97       	sbiw	r30, 0x00	; 0
    1cd0:	21 f1       	breq	.+72     	; 0x1d1a <__vector_7+0x108>
    1cd2:	82 81       	ldd	r24, Z+2	; 0x02
    1cd4:	93 81       	ldd	r25, Z+3	; 0x03
    1cd6:	a4 81       	ldd	r26, Z+4	; 0x04
    1cd8:	b5 81       	ldd	r27, Z+5	; 0x05
    1cda:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    1cde:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    1ce2:	2a 17       	cp	r18, r26
    1ce4:	3b 07       	cpc	r19, r27
    1ce6:	c9 f4       	brne	.+50     	; 0x1d1a <__vector_7+0x108>
    1ce8:	9c 01       	movw	r18, r24
    1cea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cf2:	84 1b       	sub	r24, r20
    1cf4:	95 0b       	sbc	r25, r21
    1cf6:	01 97       	sbiw	r24, 0x01	; 1
    1cf8:	31 f4       	brne	.+12     	; 0x1d06 <__vector_7+0xf4>
    1cfa:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cfe:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d02:	2f 5f       	subi	r18, 0xFF	; 255
    1d04:	3f 4f       	sbci	r19, 0xFF	; 255
    1d06:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1d0a:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1d0e:	ef e6       	ldi	r30, 0x6F	; 111
    1d10:	f0 e0       	ldi	r31, 0x00	; 0
    1d12:	80 81       	ld	r24, Z
    1d14:	82 60       	ori	r24, 0x02	; 2
    1d16:	80 83       	st	Z, r24
    1d18:	05 c0       	rjmp	.+10     	; 0x1d24 <__vector_7+0x112>
    1d1a:	ef e6       	ldi	r30, 0x6F	; 111
    1d1c:	f0 e0       	ldi	r31, 0x00	; 0
    1d1e:	80 81       	ld	r24, Z
    1d20:	8d 7f       	andi	r24, 0xFD	; 253
    1d22:	80 83       	st	Z, r24
    1d24:	0e 94 ae 05 	call	0xb5c	; 0xb5c <schedule>
    1d28:	ff 91       	pop	r31
    1d2a:	ef 91       	pop	r30
    1d2c:	bf 91       	pop	r27
    1d2e:	af 91       	pop	r26
    1d30:	9f 91       	pop	r25
    1d32:	8f 91       	pop	r24
    1d34:	7f 91       	pop	r23
    1d36:	6f 91       	pop	r22
    1d38:	5f 91       	pop	r21
    1d3a:	4f 91       	pop	r20
    1d3c:	3f 91       	pop	r19
    1d3e:	2f 91       	pop	r18
    1d40:	ff 90       	pop	r15
    1d42:	ef 90       	pop	r14
    1d44:	df 90       	pop	r13
    1d46:	cf 90       	pop	r12
    1d48:	0f 90       	pop	r0
    1d4a:	0f be       	out	0x3f, r0	; 63
    1d4c:	0f 90       	pop	r0
    1d4e:	1f 90       	pop	r1
    1d50:	18 95       	reti

00001d52 <async>:
    1d52:	3f 92       	push	r3
    1d54:	4f 92       	push	r4
    1d56:	5f 92       	push	r5
    1d58:	6f 92       	push	r6
    1d5a:	7f 92       	push	r7
    1d5c:	8f 92       	push	r8
    1d5e:	9f 92       	push	r9
    1d60:	af 92       	push	r10
    1d62:	bf 92       	push	r11
    1d64:	cf 92       	push	r12
    1d66:	df 92       	push	r13
    1d68:	ef 92       	push	r14
    1d6a:	ff 92       	push	r15
    1d6c:	0f 93       	push	r16
    1d6e:	1f 93       	push	r17
    1d70:	cf 93       	push	r28
    1d72:	df 93       	push	r29
    1d74:	2b 01       	movw	r4, r22
    1d76:	3c 01       	movw	r6, r24
    1d78:	49 01       	movw	r8, r18
    1d7a:	5a 01       	movw	r10, r20
    1d7c:	8f b7       	in	r24, 0x3f	; 63
    1d7e:	80 78       	andi	r24, 0x80	; 128
    1d80:	38 2e       	mov	r3, r24
    1d82:	f8 94       	cli
    1d84:	88 e0       	ldi	r24, 0x08	; 8
    1d86:	91 e0       	ldi	r25, 0x01	; 1
    1d88:	0e 94 79 05 	call	0xaf2	; 0xaf2 <dequeue>
    1d8c:	ec 01       	movw	r28, r24
    1d8e:	1b 87       	std	Y+11, r17	; 0x0b
    1d90:	0a 87       	std	Y+10, r16	; 0x0a
    1d92:	fd 86       	std	Y+13, r15	; 0x0d
    1d94:	ec 86       	std	Y+12, r14	; 0x0c
    1d96:	df 86       	std	Y+15, r13	; 0x0f
    1d98:	ce 86       	std	Y+14, r12	; 0x0e
    1d9a:	33 20       	and	r3, r3
    1d9c:	61 f0       	breq	.+24     	; 0x1db6 <async+0x64>
    1d9e:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <current>
    1da2:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <current+0x1>
    1da6:	02 80       	ldd	r0, Z+2	; 0x02
    1da8:	f3 81       	ldd	r31, Z+3	; 0x03
    1daa:	e0 2d       	mov	r30, r0
    1dac:	82 81       	ldd	r24, Z+2	; 0x02
    1dae:	93 81       	ldd	r25, Z+3	; 0x03
    1db0:	a4 81       	ldd	r26, Z+4	; 0x04
    1db2:	b5 81       	ldd	r27, Z+5	; 0x05
    1db4:	08 c0       	rjmp	.+16     	; 0x1dc6 <async+0x74>
    1db6:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <timestamp>
    1dba:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <timestamp+0x1>
    1dbe:	a0 91 3e 01 	lds	r26, 0x013E	; 0x80013e <timestamp+0x2>
    1dc2:	b0 91 3f 01 	lds	r27, 0x013F	; 0x80013f <timestamp+0x3>
    1dc6:	48 0e       	add	r4, r24
    1dc8:	59 1e       	adc	r5, r25
    1dca:	6a 1e       	adc	r6, r26
    1dcc:	7b 1e       	adc	r7, r27
    1dce:	4a 82       	std	Y+2, r4	; 0x02
    1dd0:	5b 82       	std	Y+3, r5	; 0x03
    1dd2:	6c 82       	std	Y+4, r6	; 0x04
    1dd4:	7d 82       	std	Y+5, r7	; 0x05
    1dd6:	18 14       	cp	r1, r8
    1dd8:	19 04       	cpc	r1, r9
    1dda:	1a 04       	cpc	r1, r10
    1ddc:	1b 04       	cpc	r1, r11
    1dde:	44 f0       	brlt	.+16     	; 0x1df0 <async+0x9e>
    1de0:	0f 2e       	mov	r0, r31
    1de2:	88 24       	eor	r8, r8
    1de4:	8a 94       	dec	r8
    1de6:	98 2c       	mov	r9, r8
    1de8:	a8 2c       	mov	r10, r8
    1dea:	ff e7       	ldi	r31, 0x7F	; 127
    1dec:	bf 2e       	mov	r11, r31
    1dee:	f0 2d       	mov	r31, r0
    1df0:	84 0c       	add	r8, r4
    1df2:	95 1c       	adc	r9, r5
    1df4:	a6 1c       	adc	r10, r6
    1df6:	b7 1c       	adc	r11, r7
    1df8:	8e 82       	std	Y+6, r8	; 0x06
    1dfa:	9f 82       	std	Y+7, r9	; 0x07
    1dfc:	a8 86       	std	Y+8, r10	; 0x08
    1dfe:	b9 86       	std	Y+9, r11	; 0x09
    1e00:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    1e04:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    1e08:	c9 01       	movw	r24, r18
    1e0a:	03 2e       	mov	r0, r19
    1e0c:	00 0c       	add	r0, r0
    1e0e:	aa 0b       	sbc	r26, r26
    1e10:	bb 0b       	sbc	r27, r27
    1e12:	dc 01       	movw	r26, r24
    1e14:	99 27       	eor	r25, r25
    1e16:	88 27       	eor	r24, r24
    1e18:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e1c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e20:	60 e0       	ldi	r22, 0x00	; 0
    1e22:	70 e0       	ldi	r23, 0x00	; 0
    1e24:	84 2b       	or	r24, r20
    1e26:	95 2b       	or	r25, r21
    1e28:	a6 2b       	or	r26, r22
    1e2a:	b7 2b       	or	r27, r23
    1e2c:	b0 9b       	sbis	0x16, 0	; 22
    1e2e:	13 c0       	rjmp	.+38     	; 0x1e56 <async+0x104>
    1e30:	c9 01       	movw	r24, r18
    1e32:	01 96       	adiw	r24, 0x01	; 1
    1e34:	09 2e       	mov	r0, r25
    1e36:	00 0c       	add	r0, r0
    1e38:	aa 0b       	sbc	r26, r26
    1e3a:	bb 0b       	sbc	r27, r27
    1e3c:	dc 01       	movw	r26, r24
    1e3e:	99 27       	eor	r25, r25
    1e40:	88 27       	eor	r24, r24
    1e42:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e46:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e4a:	60 e0       	ldi	r22, 0x00	; 0
    1e4c:	70 e0       	ldi	r23, 0x00	; 0
    1e4e:	84 2b       	or	r24, r20
    1e50:	95 2b       	or	r25, r21
    1e52:	a6 2b       	or	r26, r22
    1e54:	b7 2b       	or	r27, r23
    1e56:	48 1a       	sub	r4, r24
    1e58:	59 0a       	sbc	r5, r25
    1e5a:	6a 0a       	sbc	r6, r26
    1e5c:	7b 0a       	sbc	r7, r27
    1e5e:	14 14       	cp	r1, r4
    1e60:	15 04       	cpc	r1, r5
    1e62:	16 04       	cpc	r1, r6
    1e64:	17 04       	cpc	r1, r7
    1e66:	ac f5       	brge	.+106    	; 0x1ed2 <async+0x180>
    1e68:	60 e4       	ldi	r22, 0x40	; 64
    1e6a:	71 e0       	ldi	r23, 0x01	; 1
    1e6c:	ce 01       	movw	r24, r28
    1e6e:	0e 94 48 05 	call	0xa90	; 0xa90 <enqueueByBaseline>
    1e72:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <timerQ>
    1e76:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <timerQ+0x1>
    1e7a:	30 97       	sbiw	r30, 0x00	; 0
    1e7c:	21 f1       	breq	.+72     	; 0x1ec6 <async+0x174>
    1e7e:	82 81       	ldd	r24, Z+2	; 0x02
    1e80:	93 81       	ldd	r25, Z+3	; 0x03
    1e82:	a4 81       	ldd	r26, Z+4	; 0x04
    1e84:	b5 81       	ldd	r27, Z+5	; 0x05
    1e86:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <overflows>
    1e8a:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <overflows+0x1>
    1e8e:	2a 17       	cp	r18, r26
    1e90:	3b 07       	cpc	r19, r27
    1e92:	c9 f4       	brne	.+50     	; 0x1ec6 <async+0x174>
    1e94:	9c 01       	movw	r18, r24
    1e96:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e9a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e9e:	84 1b       	sub	r24, r20
    1ea0:	95 0b       	sbc	r25, r21
    1ea2:	01 97       	sbiw	r24, 0x01	; 1
    1ea4:	31 f4       	brne	.+12     	; 0x1eb2 <async+0x160>
    1ea6:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1eaa:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1eae:	2f 5f       	subi	r18, 0xFF	; 255
    1eb0:	3f 4f       	sbci	r19, 0xFF	; 255
    1eb2:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1eb6:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1eba:	ef e6       	ldi	r30, 0x6F	; 111
    1ebc:	f0 e0       	ldi	r31, 0x00	; 0
    1ebe:	80 81       	ld	r24, Z
    1ec0:	82 60       	ori	r24, 0x02	; 2
    1ec2:	80 83       	st	Z, r24
    1ec4:	39 c0       	rjmp	.+114    	; 0x1f38 <async+0x1e6>
    1ec6:	ef e6       	ldi	r30, 0x6F	; 111
    1ec8:	f0 e0       	ldi	r31, 0x00	; 0
    1eca:	80 81       	ld	r24, Z
    1ecc:	8d 7f       	andi	r24, 0xFD	; 253
    1ece:	80 83       	st	Z, r24
    1ed0:	33 c0       	rjmp	.+102    	; 0x1f38 <async+0x1e6>
    1ed2:	62 e4       	ldi	r22, 0x42	; 66
    1ed4:	71 e0       	ldi	r23, 0x01	; 1
    1ed6:	ce 01       	movw	r24, r28
    1ed8:	0e 94 17 05 	call	0xa2e	; 0xa2e <enqueueByDeadline>
    1edc:	33 20       	and	r3, r3
    1ede:	61 f1       	breq	.+88     	; 0x1f38 <async+0x1e6>
    1ee0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <threadPool>
    1ee4:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <threadPool+0x1>
    1ee8:	89 2b       	or	r24, r25
    1eea:	31 f1       	breq	.+76     	; 0x1f38 <async+0x1e6>
    1eec:	e0 91 42 01 	lds	r30, 0x0142	; 0x800142 <msgQ>
    1ef0:	f0 91 43 01 	lds	r31, 0x0143	; 0x800143 <msgQ+0x1>
    1ef4:	86 81       	ldd	r24, Z+6	; 0x06
    1ef6:	97 81       	ldd	r25, Z+7	; 0x07
    1ef8:	a0 85       	ldd	r26, Z+8	; 0x08
    1efa:	b1 85       	ldd	r27, Z+9	; 0x09
    1efc:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
    1f00:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
    1f04:	02 80       	ldd	r0, Z+2	; 0x02
    1f06:	f3 81       	ldd	r31, Z+3	; 0x03
    1f08:	e0 2d       	mov	r30, r0
    1f0a:	46 81       	ldd	r20, Z+6	; 0x06
    1f0c:	57 81       	ldd	r21, Z+7	; 0x07
    1f0e:	60 85       	ldd	r22, Z+8	; 0x08
    1f10:	71 85       	ldd	r23, Z+9	; 0x09
    1f12:	84 1b       	sub	r24, r20
    1f14:	95 0b       	sbc	r25, r21
    1f16:	a6 0b       	sbc	r26, r22
    1f18:	b7 0b       	sbc	r27, r23
    1f1a:	72 f4       	brpl	.+28     	; 0x1f38 <async+0x1e6>
    1f1c:	86 e0       	ldi	r24, 0x06	; 6
    1f1e:	91 e0       	ldi	r25, 0x01	; 1
    1f20:	0e 94 a4 05 	call	0xb48	; 0xb48 <pop>
    1f24:	64 e0       	ldi	r22, 0x04	; 4
    1f26:	71 e0       	ldi	r23, 0x01	; 1
    1f28:	0e 94 9a 05 	call	0xb34	; 0xb34 <push>
    1f2c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <activeStack>
    1f30:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <activeStack+0x1>
    1f34:	0e 94 f7 04 	call	0x9ee	; 0x9ee <dispatch>
    1f38:	33 20       	and	r3, r3
    1f3a:	09 f0       	breq	.+2      	; 0x1f3e <async+0x1ec>
    1f3c:	78 94       	sei
    1f3e:	ce 01       	movw	r24, r28
    1f40:	df 91       	pop	r29
    1f42:	cf 91       	pop	r28
    1f44:	1f 91       	pop	r17
    1f46:	0f 91       	pop	r16
    1f48:	ff 90       	pop	r15
    1f4a:	ef 90       	pop	r14
    1f4c:	df 90       	pop	r13
    1f4e:	cf 90       	pop	r12
    1f50:	bf 90       	pop	r11
    1f52:	af 90       	pop	r10
    1f54:	9f 90       	pop	r9
    1f56:	8f 90       	pop	r8
    1f58:	7f 90       	pop	r7
    1f5a:	6f 90       	pop	r6
    1f5c:	5f 90       	pop	r5
    1f5e:	4f 90       	pop	r4
    1f60:	3f 90       	pop	r3
    1f62:	08 95       	ret

00001f64 <sync>:
    1f64:	cf 92       	push	r12
    1f66:	df 92       	push	r13
    1f68:	ef 92       	push	r14
    1f6a:	ff 92       	push	r15
    1f6c:	0f 93       	push	r16
    1f6e:	1f 93       	push	r17
    1f70:	cf 93       	push	r28
    1f72:	df 93       	push	r29
    1f74:	ec 01       	movw	r28, r24
    1f76:	7b 01       	movw	r14, r22
    1f78:	6a 01       	movw	r12, r20
    1f7a:	1f b7       	in	r17, 0x3f	; 63
    1f7c:	10 78       	andi	r17, 0x80	; 128
    1f7e:	f8 94       	cli
    1f80:	a8 81       	ld	r26, Y
    1f82:	b9 81       	ldd	r27, Y+1	; 0x01
    1f84:	10 97       	sbiw	r26, 0x00	; 0
    1f86:	19 f4       	brne	.+6      	; 0x1f8e <sync+0x2a>
    1f88:	35 c0       	rjmp	.+106    	; 0x1ff4 <sync+0x90>
    1f8a:	a0 81       	ld	r26, Z
    1f8c:	b1 81       	ldd	r27, Z+1	; 0x01
    1f8e:	14 96       	adiw	r26, 0x04	; 4
    1f90:	ed 91       	ld	r30, X+
    1f92:	fc 91       	ld	r31, X
    1f94:	15 97       	sbiw	r26, 0x05	; 5
    1f96:	30 97       	sbiw	r30, 0x00	; 0
    1f98:	c1 f7       	brne	.-16     	; 0x1f8a <sync+0x26>
    1f9a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <current>
    1f9e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <current+0x1>
    1fa2:	a2 17       	cp	r26, r18
    1fa4:	b3 07       	cpc	r27, r19
    1fa6:	11 f0       	breq	.+4      	; 0x1fac <sync+0x48>
    1fa8:	11 11       	cpse	r17, r1
    1faa:	07 c0       	rjmp	.+14     	; 0x1fba <sync+0x56>
    1fac:	11 23       	and	r17, r17
    1fae:	09 f4       	brne	.+2      	; 0x1fb2 <sync+0x4e>
    1fb0:	4a c0       	rjmp	.+148    	; 0x2046 <sync+0xe2>
    1fb2:	78 94       	sei
    1fb4:	8f ef       	ldi	r24, 0xFF	; 255
    1fb6:	9f ef       	ldi	r25, 0xFF	; 255
    1fb8:	4e c0       	rjmp	.+156    	; 0x2056 <sync+0xf2>
    1fba:	8a 81       	ldd	r24, Y+2	; 0x02
    1fbc:	9b 81       	ldd	r25, Y+3	; 0x03
    1fbe:	00 97       	sbiw	r24, 0x00	; 0
    1fc0:	19 f0       	breq	.+6      	; 0x1fc8 <sync+0x64>
    1fc2:	fc 01       	movw	r30, r24
    1fc4:	15 82       	std	Z+5, r1	; 0x05
    1fc6:	14 82       	std	Z+4, r1	; 0x04
    1fc8:	3b 83       	std	Y+3, r19	; 0x03
    1fca:	2a 83       	std	Y+2, r18	; 0x02
    1fcc:	f9 01       	movw	r30, r18
    1fce:	d5 83       	std	Z+5, r29	; 0x05
    1fd0:	c4 83       	std	Z+4, r28	; 0x04
    1fd2:	cd 01       	movw	r24, r26
    1fd4:	0e 94 f7 04 	call	0x9ee	; 0x9ee <dispatch>
    1fd8:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <current>
    1fdc:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <current+0x1>
    1fe0:	82 81       	ldd	r24, Z+2	; 0x02
    1fe2:	93 81       	ldd	r25, Z+3	; 0x03
    1fe4:	89 2b       	or	r24, r25
    1fe6:	31 f4       	brne	.+12     	; 0x1ff4 <sync+0x90>
    1fe8:	11 23       	and	r17, r17
    1fea:	81 f1       	breq	.+96     	; 0x204c <sync+0xe8>
    1fec:	78 94       	sei
    1fee:	80 e0       	ldi	r24, 0x00	; 0
    1ff0:	90 e0       	ldi	r25, 0x00	; 0
    1ff2:	31 c0       	rjmp	.+98     	; 0x2056 <sync+0xf2>
    1ff4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <current>
    1ff8:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <current+0x1>
    1ffc:	99 83       	std	Y+1, r25	; 0x01
    1ffe:	88 83       	st	Y, r24
    2000:	11 23       	and	r17, r17
    2002:	29 f0       	breq	.+10     	; 0x200e <sync+0xaa>
    2004:	8a 81       	ldd	r24, Y+2	; 0x02
    2006:	9b 81       	ldd	r25, Y+3	; 0x03
    2008:	01 97       	sbiw	r24, 0x01	; 1
    200a:	09 f0       	breq	.+2      	; 0x200e <sync+0xaa>
    200c:	78 94       	sei
    200e:	b6 01       	movw	r22, r12
    2010:	ce 01       	movw	r24, r28
    2012:	f7 01       	movw	r30, r14
    2014:	09 95       	icall
    2016:	f8 2e       	mov	r15, r24
    2018:	09 2f       	mov	r16, r25
    201a:	8f b7       	in	r24, 0x3f	; 63
    201c:	f8 94       	cli
    201e:	19 82       	std	Y+1, r1	; 0x01
    2020:	18 82       	st	Y, r1
    2022:	8a 81       	ldd	r24, Y+2	; 0x02
    2024:	9b 81       	ldd	r25, Y+3	; 0x03
    2026:	82 30       	cpi	r24, 0x02	; 2
    2028:	91 05       	cpc	r25, r1
    202a:	38 f0       	brcs	.+14     	; 0x203a <sync+0xd6>
    202c:	1b 82       	std	Y+3, r1	; 0x03
    202e:	1a 82       	std	Y+2, r1	; 0x02
    2030:	fc 01       	movw	r30, r24
    2032:	15 82       	std	Z+5, r1	; 0x05
    2034:	14 82       	std	Z+4, r1	; 0x04
    2036:	0e 94 f7 04 	call	0x9ee	; 0x9ee <dispatch>
    203a:	11 23       	and	r17, r17
    203c:	51 f0       	breq	.+20     	; 0x2052 <sync+0xee>
    203e:	78 94       	sei
    2040:	8f 2d       	mov	r24, r15
    2042:	90 2f       	mov	r25, r16
    2044:	08 c0       	rjmp	.+16     	; 0x2056 <sync+0xf2>
    2046:	8f ef       	ldi	r24, 0xFF	; 255
    2048:	9f ef       	ldi	r25, 0xFF	; 255
    204a:	05 c0       	rjmp	.+10     	; 0x2056 <sync+0xf2>
    204c:	80 e0       	ldi	r24, 0x00	; 0
    204e:	90 e0       	ldi	r25, 0x00	; 0
    2050:	02 c0       	rjmp	.+4      	; 0x2056 <sync+0xf2>
    2052:	8f 2d       	mov	r24, r15
    2054:	90 2f       	mov	r25, r16
    2056:	df 91       	pop	r29
    2058:	cf 91       	pop	r28
    205a:	1f 91       	pop	r17
    205c:	0f 91       	pop	r16
    205e:	ff 90       	pop	r15
    2060:	ef 90       	pop	r14
    2062:	df 90       	pop	r13
    2064:	cf 90       	pop	r12
    2066:	08 95       	ret

00002068 <run>:
    2068:	00 91 02 01 	lds	r16, 0x0102	; 0x800102 <current>
    206c:	10 91 03 01 	lds	r17, 0x0103	; 0x800103 <current+0x1>
    2070:	82 e4       	ldi	r24, 0x42	; 66
    2072:	91 e0       	ldi	r25, 0x01	; 1
    2074:	0e 94 79 05 	call	0xaf2	; 0xaf2 <dequeue>
    2078:	ec 01       	movw	r28, r24
    207a:	f8 01       	movw	r30, r16
    207c:	93 83       	std	Z+3, r25	; 0x03
    207e:	82 83       	std	Z+2, r24	; 0x02
    2080:	78 94       	sei
    2082:	6c 85       	ldd	r22, Y+12	; 0x0c
    2084:	7d 85       	ldd	r23, Y+13	; 0x0d
    2086:	4e 85       	ldd	r20, Y+14	; 0x0e
    2088:	5f 85       	ldd	r21, Y+15	; 0x0f
    208a:	8a 85       	ldd	r24, Y+10	; 0x0a
    208c:	9b 85       	ldd	r25, Y+11	; 0x0b
    208e:	0e 94 b2 0f 	call	0x1f64	; 0x1f64 <sync>
    2092:	8f b7       	in	r24, 0x3f	; 63
    2094:	f8 94       	cli
    2096:	68 e0       	ldi	r22, 0x08	; 8
    2098:	71 e0       	ldi	r23, 0x01	; 1
    209a:	ce 01       	movw	r24, r28
    209c:	0e 94 90 05 	call	0xb20	; 0xb20 <insert>
    20a0:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <activeStack>
    20a4:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <activeStack+0x1>
    20a8:	01 90       	ld	r0, Z+
    20aa:	f0 81       	ld	r31, Z
    20ac:	e0 2d       	mov	r30, r0
    20ae:	c2 81       	ldd	r28, Z+2	; 0x02
    20b0:	d3 81       	ldd	r29, Z+3	; 0x03
    20b2:	e0 91 42 01 	lds	r30, 0x0142	; 0x800142 <msgQ>
    20b6:	f0 91 43 01 	lds	r31, 0x0143	; 0x800143 <msgQ+0x1>
    20ba:	30 97       	sbiw	r30, 0x00	; 0
    20bc:	a1 f0       	breq	.+40     	; 0x20e6 <run+0x7e>
    20be:	20 97       	sbiw	r28, 0x00	; 0
    20c0:	99 f2       	breq	.-90     	; 0x2068 <run>
    20c2:	86 81       	ldd	r24, Z+6	; 0x06
    20c4:	97 81       	ldd	r25, Z+7	; 0x07
    20c6:	a0 85       	ldd	r26, Z+8	; 0x08
    20c8:	b1 85       	ldd	r27, Z+9	; 0x09
    20ca:	4e 81       	ldd	r20, Y+6	; 0x06
    20cc:	5f 81       	ldd	r21, Y+7	; 0x07
    20ce:	68 85       	ldd	r22, Y+8	; 0x08
    20d0:	79 85       	ldd	r23, Y+9	; 0x09
    20d2:	84 1b       	sub	r24, r20
    20d4:	95 0b       	sbc	r25, r21
    20d6:	a6 0b       	sbc	r26, r22
    20d8:	b7 0b       	sbc	r27, r23
    20da:	18 16       	cp	r1, r24
    20dc:	19 06       	cpc	r1, r25
    20de:	1a 06       	cpc	r1, r26
    20e0:	1b 06       	cpc	r1, r27
    20e2:	0c f0       	brlt	.+2      	; 0x20e6 <run+0x7e>
    20e4:	c1 cf       	rjmp	.-126    	; 0x2068 <run>
    20e6:	84 e0       	ldi	r24, 0x04	; 4
    20e8:	91 e0       	ldi	r25, 0x01	; 1
    20ea:	0e 94 a4 05 	call	0xb48	; 0xb48 <pop>
    20ee:	66 e0       	ldi	r22, 0x06	; 6
    20f0:	71 e0       	ldi	r23, 0x01	; 1
    20f2:	0e 94 9a 05 	call	0xb34	; 0xb34 <push>
    20f6:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <activeStack>
    20fa:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <activeStack+0x1>
    20fe:	02 c0       	rjmp	.+4      	; 0x2104 <run+0x9c>
    2100:	a0 81       	ld	r26, Z
    2102:	b1 81       	ldd	r27, Z+1	; 0x01
    2104:	14 96       	adiw	r26, 0x04	; 4
    2106:	ed 91       	ld	r30, X+
    2108:	fc 91       	ld	r31, X
    210a:	15 97       	sbiw	r26, 0x05	; 5
    210c:	30 97       	sbiw	r30, 0x00	; 0
    210e:	c1 f7       	brne	.-16     	; 0x2100 <run+0x98>
    2110:	cd 01       	movw	r24, r26
    2112:	0e 94 f7 04 	call	0x9ee	; 0x9ee <dispatch>
    2116:	a8 cf       	rjmp	.-176    	; 0x2068 <run>

00002118 <install>:
    2118:	fc 01       	movw	r30, r24
    211a:	42 31       	cpi	r20, 0x12	; 18
    211c:	b8 f4       	brcc	.+46     	; 0x214c <install+0x34>
    211e:	9f b7       	in	r25, 0x3f	; 63
    2120:	90 78       	andi	r25, 0x80	; 128
    2122:	f8 94       	cli
    2124:	50 e0       	ldi	r21, 0x00	; 0
    2126:	44 0f       	add	r20, r20
    2128:	55 1f       	adc	r21, r21
    212a:	da 01       	movw	r26, r20
    212c:	a8 5b       	subi	r26, 0xB8	; 184
    212e:	be 4f       	sbci	r27, 0xFE	; 254
    2130:	ed 93       	st	X+, r30
    2132:	fc 93       	st	X, r31
    2134:	da 01       	movw	r26, r20
    2136:	a0 52       	subi	r26, 0x20	; 32
    2138:	be 4f       	sbci	r27, 0xFE	; 254
    213a:	6d 93       	st	X+, r22
    213c:	7c 93       	st	X, r23
    213e:	21 e0       	ldi	r18, 0x01	; 1
    2140:	30 e0       	ldi	r19, 0x00	; 0
    2142:	33 83       	std	Z+3, r19	; 0x03
    2144:	22 83       	std	Z+2, r18	; 0x02
    2146:	99 23       	and	r25, r25
    2148:	09 f0       	breq	.+2      	; 0x214c <install+0x34>
    214a:	78 94       	sei
    214c:	08 95       	ret

0000214e <tinytimber>:
    214e:	8c 01       	movw	r16, r24
    2150:	7b 01       	movw	r14, r22
    2152:	6a 01       	movw	r12, r20
    2154:	8f b7       	in	r24, 0x3f	; 63
    2156:	f8 94       	cli
    2158:	0e 94 58 04 	call	0x8b0	; 0x8b0 <initialize>
    215c:	78 94       	sei
    215e:	e1 14       	cp	r14, r1
    2160:	f1 04       	cpc	r15, r1
    2162:	41 f0       	breq	.+16     	; 0x2174 <tinytimber+0x26>
    2164:	20 e0       	ldi	r18, 0x00	; 0
    2166:	30 e0       	ldi	r19, 0x00	; 0
    2168:	a9 01       	movw	r20, r18
    216a:	60 e0       	ldi	r22, 0x00	; 0
    216c:	70 e0       	ldi	r23, 0x00	; 0
    216e:	cb 01       	movw	r24, r22
    2170:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <async>
    2174:	8f b7       	in	r24, 0x3f	; 63
    2176:	f8 94       	cli
    2178:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <idle>

0000217c <__divmodsi4>:
    217c:	05 2e       	mov	r0, r21
    217e:	97 fb       	bst	r25, 7
    2180:	1e f4       	brtc	.+6      	; 0x2188 <__divmodsi4+0xc>
    2182:	00 94       	com	r0
    2184:	0e 94 d5 10 	call	0x21aa	; 0x21aa <__negsi2>
    2188:	57 fd       	sbrc	r21, 7
    218a:	07 d0       	rcall	.+14     	; 0x219a <__divmodsi4_neg2>
    218c:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__udivmodsi4>
    2190:	07 fc       	sbrc	r0, 7
    2192:	03 d0       	rcall	.+6      	; 0x219a <__divmodsi4_neg2>
    2194:	4e f4       	brtc	.+18     	; 0x21a8 <__divmodsi4_exit>
    2196:	0c 94 d5 10 	jmp	0x21aa	; 0x21aa <__negsi2>

0000219a <__divmodsi4_neg2>:
    219a:	50 95       	com	r21
    219c:	40 95       	com	r20
    219e:	30 95       	com	r19
    21a0:	21 95       	neg	r18
    21a2:	3f 4f       	sbci	r19, 0xFF	; 255
    21a4:	4f 4f       	sbci	r20, 0xFF	; 255
    21a6:	5f 4f       	sbci	r21, 0xFF	; 255

000021a8 <__divmodsi4_exit>:
    21a8:	08 95       	ret

000021aa <__negsi2>:
    21aa:	90 95       	com	r25
    21ac:	80 95       	com	r24
    21ae:	70 95       	com	r23
    21b0:	61 95       	neg	r22
    21b2:	7f 4f       	sbci	r23, 0xFF	; 255
    21b4:	8f 4f       	sbci	r24, 0xFF	; 255
    21b6:	9f 4f       	sbci	r25, 0xFF	; 255
    21b8:	08 95       	ret

000021ba <__udivmodsi4>:
    21ba:	a1 e2       	ldi	r26, 0x21	; 33
    21bc:	1a 2e       	mov	r1, r26
    21be:	aa 1b       	sub	r26, r26
    21c0:	bb 1b       	sub	r27, r27
    21c2:	fd 01       	movw	r30, r26
    21c4:	0d c0       	rjmp	.+26     	; 0x21e0 <__udivmodsi4_ep>

000021c6 <__udivmodsi4_loop>:
    21c6:	aa 1f       	adc	r26, r26
    21c8:	bb 1f       	adc	r27, r27
    21ca:	ee 1f       	adc	r30, r30
    21cc:	ff 1f       	adc	r31, r31
    21ce:	a2 17       	cp	r26, r18
    21d0:	b3 07       	cpc	r27, r19
    21d2:	e4 07       	cpc	r30, r20
    21d4:	f5 07       	cpc	r31, r21
    21d6:	20 f0       	brcs	.+8      	; 0x21e0 <__udivmodsi4_ep>
    21d8:	a2 1b       	sub	r26, r18
    21da:	b3 0b       	sbc	r27, r19
    21dc:	e4 0b       	sbc	r30, r20
    21de:	f5 0b       	sbc	r31, r21

000021e0 <__udivmodsi4_ep>:
    21e0:	66 1f       	adc	r22, r22
    21e2:	77 1f       	adc	r23, r23
    21e4:	88 1f       	adc	r24, r24
    21e6:	99 1f       	adc	r25, r25
    21e8:	1a 94       	dec	r1
    21ea:	69 f7       	brne	.-38     	; 0x21c6 <__udivmodsi4_loop>
    21ec:	60 95       	com	r22
    21ee:	70 95       	com	r23
    21f0:	80 95       	com	r24
    21f2:	90 95       	com	r25
    21f4:	9b 01       	movw	r18, r22
    21f6:	ac 01       	movw	r20, r24
    21f8:	bd 01       	movw	r22, r26
    21fa:	cf 01       	movw	r24, r30
    21fc:	08 95       	ret

000021fe <setjmp>:
    21fe:	dc 01       	movw	r26, r24
    2200:	2d 92       	st	X+, r2
    2202:	3d 92       	st	X+, r3
    2204:	4d 92       	st	X+, r4
    2206:	5d 92       	st	X+, r5
    2208:	6d 92       	st	X+, r6
    220a:	7d 92       	st	X+, r7
    220c:	8d 92       	st	X+, r8
    220e:	9d 92       	st	X+, r9
    2210:	ad 92       	st	X+, r10
    2212:	bd 92       	st	X+, r11
    2214:	cd 92       	st	X+, r12
    2216:	dd 92       	st	X+, r13
    2218:	ed 92       	st	X+, r14
    221a:	fd 92       	st	X+, r15
    221c:	0d 93       	st	X+, r16
    221e:	1d 93       	st	X+, r17
    2220:	cd 93       	st	X+, r28
    2222:	dd 93       	st	X+, r29
    2224:	ff 91       	pop	r31
    2226:	ef 91       	pop	r30
    2228:	8d b7       	in	r24, 0x3d	; 61
    222a:	8d 93       	st	X+, r24
    222c:	8e b7       	in	r24, 0x3e	; 62
    222e:	8d 93       	st	X+, r24
    2230:	8f b7       	in	r24, 0x3f	; 63
    2232:	8d 93       	st	X+, r24
    2234:	ed 93       	st	X+, r30
    2236:	fd 93       	st	X+, r31
    2238:	88 27       	eor	r24, r24
    223a:	99 27       	eor	r25, r25
    223c:	09 94       	ijmp

0000223e <longjmp>:
    223e:	dc 01       	movw	r26, r24
    2240:	cb 01       	movw	r24, r22
    2242:	81 30       	cpi	r24, 0x01	; 1
    2244:	91 05       	cpc	r25, r1
    2246:	81 1d       	adc	r24, r1
    2248:	2d 90       	ld	r2, X+
    224a:	3d 90       	ld	r3, X+
    224c:	4d 90       	ld	r4, X+
    224e:	5d 90       	ld	r5, X+
    2250:	6d 90       	ld	r6, X+
    2252:	7d 90       	ld	r7, X+
    2254:	8d 90       	ld	r8, X+
    2256:	9d 90       	ld	r9, X+
    2258:	ad 90       	ld	r10, X+
    225a:	bd 90       	ld	r11, X+
    225c:	cd 90       	ld	r12, X+
    225e:	dd 90       	ld	r13, X+
    2260:	ed 90       	ld	r14, X+
    2262:	fd 90       	ld	r15, X+
    2264:	0d 91       	ld	r16, X+
    2266:	1d 91       	ld	r17, X+
    2268:	cd 91       	ld	r28, X+
    226a:	dd 91       	ld	r29, X+
    226c:	ed 91       	ld	r30, X+
    226e:	fd 91       	ld	r31, X+
    2270:	0d 90       	ld	r0, X+
    2272:	f8 94       	cli
    2274:	fe bf       	out	0x3e, r31	; 62
    2276:	0f be       	out	0x3f, r0	; 63
    2278:	ed bf       	out	0x3d, r30	; 61
    227a:	ed 91       	ld	r30, X+
    227c:	fd 91       	ld	r31, X+
    227e:	09 94       	ijmp

00002280 <_exit>:
    2280:	f8 94       	cli

00002282 <__stop_program>:
    2282:	ff cf       	rjmp	.-2      	; 0x2282 <__stop_program>
