
D0003E-lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  00001d72  00001e06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d72  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000357  00800134  00800134  00001e3a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001e3a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001e6c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00001eac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002114  00000000  00000000  0000209c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ef1  00000000  00000000  000041b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000133f  00000000  00000000  000050a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b00  00000000  00000000  000063e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008db  00000000  00000000  00006ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000022b0  00000000  00000000  000077bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d0  00000000  00000000  00009a6b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <__vector_1>
       8:	0c 94 c8 03 	jmp	0x790	; 0x790 <__vector_2>
       c:	0c 94 37 04 	jmp	0x86e	; 0x86e <__vector_3>
      10:	0c 94 a6 04 	jmp	0x94c	; 0x94c <__vector_4>
      14:	0c 94 15 05 	jmp	0xa2a	; 0xa2a <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 80 0b 	jmp	0x1700	; 0x1700 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 2e 0b 	jmp	0x165c	; 0x165c <__vector_9>
      28:	0c 94 84 05 	jmp	0xb08	; 0xb08 <__vector_10>
      2c:	0c 94 f3 05 	jmp	0xbe6	; 0xbe6 <__vector_11>
      30:	0c 94 62 06 	jmp	0xcc4	; 0xcc4 <__vector_12>
      34:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <__vector_13>
      38:	0c 94 40 07 	jmp	0xe80	; 0xe80 <__vector_14>
      3c:	0c 94 af 07 	jmp	0xf5e	; 0xf5e <__vector_15>
      40:	0c 94 1e 08 	jmp	0x103c	; 0x103c <__vector_16>
      44:	0c 94 8d 08 	jmp	0x111a	; 0x111a <__vector_17>
      48:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <__vector_18>
      4c:	0c 94 6b 09 	jmp	0x12d6	; 0x12d6 <__vector_19>
      50:	0c 94 da 09 	jmp	0x13b4	; 0x13b4 <__vector_20>
      54:	0c 94 49 0a 	jmp	0x1492	; 0x1492 <__vector_21>
      58:	0c 94 b8 0a 	jmp	0x1570	; 0x1570 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e2 e7       	ldi	r30, 0x72	; 114
      70:	fd e1       	ldi	r31, 0x1D	; 29
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a4 33       	cpi	r26, 0x34	; 52
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a4 e3       	ldi	r26, 0x34	; 52
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	ab 38       	cpi	r26, 0x8B	; 139
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 a9 01 	call	0x352	; 0x352 <main>
      92:	0c 94 b7 0e 	jmp	0x1d6e	; 0x1d6e <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <test>:
#include "generators.h"
#include "Lcd.h"
#include <avr/io.h>
long n = 0;

void test(Generators *self) {
      9a:	cf 93       	push	r28
      9c:	df 93       	push	r29
      9e:	ec 01       	movw	r28, r24
   if (!(PINB & (1 << PB7))) {
      a0:	1f 99       	sbic	0x03, 7	; 3
      a2:	14 c0       	rjmp	.+40     	; 0xcc <test+0x32>
       n=77;
      a4:	8d e4       	ldi	r24, 0x4D	; 77
      a6:	90 e0       	ldi	r25, 0x00	; 0
      a8:	a0 e0       	ldi	r26, 0x00	; 0
      aa:	b0 e0       	ldi	r27, 0x00	; 0
      ac:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
      b0:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__data_end+0x1>
      b4:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <__data_end+0x2>
      b8:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <__data_end+0x3>
       printAt(self->pos, n);
      bc:	4d e4       	ldi	r20, 0x4D	; 77
      be:	50 e0       	ldi	r21, 0x00	; 0
      c0:	60 e0       	ldi	r22, 0x00	; 0
      c2:	70 e0       	ldi	r23, 0x00	; 0
      c4:	8c 81       	ldd	r24, Y+4	; 0x04
      c6:	9d 81       	ldd	r25, Y+5	; 0x05
      c8:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <printAt>
   }
   if (!(PINB & (1 << PB6))) {
      cc:	1e 99       	sbic	0x03, 6	; 3
      ce:	14 c0       	rjmp	.+40     	; 0xf8 <test+0x5e>
       n=66;
      d0:	82 e4       	ldi	r24, 0x42	; 66
      d2:	90 e0       	ldi	r25, 0x00	; 0
      d4:	a0 e0       	ldi	r26, 0x00	; 0
      d6:	b0 e0       	ldi	r27, 0x00	; 0
      d8:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
      dc:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__data_end+0x1>
      e0:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <__data_end+0x2>
      e4:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <__data_end+0x3>
       printAt(self->pos, n);
      e8:	42 e4       	ldi	r20, 0x42	; 66
      ea:	50 e0       	ldi	r21, 0x00	; 0
      ec:	60 e0       	ldi	r22, 0x00	; 0
      ee:	70 e0       	ldi	r23, 0x00	; 0
      f0:	8c 81       	ldd	r24, Y+4	; 0x04
      f2:	9d 81       	ldd	r25, Y+5	; 0x05
      f4:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <printAt>
   }
      f8:	df 91       	pop	r29
      fa:	cf 91       	pop	r28
      fc:	08 95       	ret

000000fe <Init>:
 */ 
#include <avr/io.h>
#include "init.h"

void Init(void) {
	CLKPR = 0x80;    // Fix clock speed
      fe:	e1 e6       	ldi	r30, 0x61	; 97
     100:	f0 e0       	ldi	r31, 0x00	; 0
     102:	80 e8       	ldi	r24, 0x80	; 128
     104:	80 83       	st	Z, r24
	CLKPR = 0x00;
     106:	10 82       	st	Z, r1
	
	// LCD init
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     108:	9f e0       	ldi	r25, 0x0F	; 15
     10a:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	//       (                      Voltage                              )
	LCDCRB = (1 << LCDCS) | (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     10e:	97 eb       	ldi	r25, 0xB7	; 183
     110:	90 93 e5 00 	sts	0x00E5, r25	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	//       (asynch ext)   (        duty cycle           )   (                  segments                 )
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     114:	97 e0       	ldi	r25, 0x07	; 7
     116:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	//       (            Delen med D                    )
	LCDCRA = (1 << LCDAB) | (1 << LCDEN);
     11a:	90 ec       	ldi	r25, 0xC0	; 192
     11c:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	//       (low power )   (enable lcd)
	
	// Stuffs for the joystick and interrupt
	PORTB = SET(PB7) | SET(PB6) | SET(PB4);					// Set corresponding Output pin for up, down and in
     120:	90 ed       	ldi	r25, 0xD0	; 208
     122:	95 b9       	out	0x05, r25	; 5
	DDRB = SET(DDB7);										// Unsure
     124:	84 b9       	out	0x04, r24	; 4

	PORTE = SET(PE2) | SET(PE3);							// Set corresponding Output pin for Left and Right
     126:	8c e0       	ldi	r24, 0x0C	; 12
     128:	8e b9       	out	0x0e, r24	; 14
	DDRE = SET(DDE2) | SET(DDE3);						
     12a:	8d b9       	out	0x0d, r24	; 13
	PCMSK1 |= SET(PCINT15) | SET(PCINT14) | SET(PCINT12);	// Pin change interrupt 1
     12c:	ec e6       	ldi	r30, 0x6C	; 108
     12e:	f0 e0       	ldi	r31, 0x00	; 0
     130:	80 81       	ld	r24, Z
     132:	80 6d       	ori	r24, 0xD0	; 208
     134:	80 83       	st	Z, r24
	PCMSK0 |= SET(PCINT2) | SET(PCINT3);
     136:	eb e6       	ldi	r30, 0x6B	; 107
     138:	f0 e0       	ldi	r31, 0x00	; 0
     13a:	80 81       	ld	r24, Z
     13c:	8c 60       	ori	r24, 0x0C	; 12
     13e:	80 83       	st	Z, r24
	EIMSK |= SET(PCIE1) | SET(PCIE0);						// Enalbe pin change on I/O pin 7
     140:	8d b3       	in	r24, 0x1d	; 29
     142:	80 6c       	ori	r24, 0xC0	; 192
     144:	8d bb       	out	0x1d, r24	; 29
     146:	08 95       	ret

00000148 <displayChar>:
     [9] = {0b0001, 0b0101, 0b1011, 0b0001},
     [10] = {0b1001, 0b1111, 0b1111, 0b1111},// This spot is for the "invalid" character (also used for reset)
 };
 
 //Help function for writeChar (fills array with elements that match character)
 void displayChar(char c, bool odd, volatile uint8_t *address) {
     148:	cf 93       	push	r28
     14a:	df 93       	push	r29
     14c:	00 d0       	rcall	.+0      	; 0x14e <displayChar+0x6>
     14e:	00 d0       	rcall	.+0      	; 0x150 <displayChar+0x8>
     150:	cd b7       	in	r28, 0x3d	; 61
     152:	de b7       	in	r29, 0x3e	; 62
     154:	da 01       	movw	r26, r20
     uint8_t array[4];
     if (c < '0' || c > '9') {	// Invalid character
     156:	90 ed       	ldi	r25, 0xD0	; 208
     158:	98 0f       	add	r25, r24
     15a:	9a 30       	cpi	r25, 0x0A	; 10
     15c:	80 f4       	brcc	.+32     	; 0x17e <displayChar+0x36>
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	28 c0       	rjmp	.+80     	; 0x1b4 <displayChar+0x6c>
         for (int i = 0; i < 4; i++) {
             array[i] = characters[10][i];
     164:	fc 01       	movw	r30, r24
     166:	e8 5f       	subi	r30, 0xF8	; 248
     168:	fe 4f       	sbci	r31, 0xFE	; 254
     16a:	20 a5       	ldd	r18, Z+40	; 0x28
     16c:	e1 e0       	ldi	r30, 0x01	; 1
     16e:	f0 e0       	ldi	r31, 0x00	; 0
     170:	ec 0f       	add	r30, r28
     172:	fd 1f       	adc	r31, r29
     174:	e8 0f       	add	r30, r24
     176:	f9 1f       	adc	r31, r25
     178:	20 83       	st	Z, r18
 
 //Help function for writeChar (fills array with elements that match character)
 void displayChar(char c, bool odd, volatile uint8_t *address) {
     uint8_t array[4];
     if (c < '0' || c > '9') {	// Invalid character
         for (int i = 0; i < 4; i++) {
     17a:	01 96       	adiw	r24, 0x01	; 1
     17c:	02 c0       	rjmp	.+4      	; 0x182 <displayChar+0x3a>
     17e:	80 e0       	ldi	r24, 0x00	; 0
     180:	90 e0       	ldi	r25, 0x00	; 0
     182:	84 30       	cpi	r24, 0x04	; 4
     184:	91 05       	cpc	r25, r1
     186:	74 f3       	brlt	.-36     	; 0x164 <displayChar+0x1c>
     188:	18 c0       	rjmp	.+48     	; 0x1ba <displayChar+0x72>
             array[i] = characters[10][i];
         }
     }
     else {						// Valid character
         for (int i = 0; i < 4; i++) {
             array[i] = characters[c-48][i];
     18a:	e8 2f       	mov	r30, r24
     18c:	f0 e0       	ldi	r31, 0x00	; 0
     18e:	f0 97       	sbiw	r30, 0x30	; 48
     190:	ee 0f       	add	r30, r30
     192:	ff 1f       	adc	r31, r31
     194:	ee 0f       	add	r30, r30
     196:	ff 1f       	adc	r31, r31
     198:	e8 5f       	subi	r30, 0xF8	; 248
     19a:	fe 4f       	sbci	r31, 0xFE	; 254
     19c:	e2 0f       	add	r30, r18
     19e:	f3 1f       	adc	r31, r19
     1a0:	90 81       	ld	r25, Z
     1a2:	e1 e0       	ldi	r30, 0x01	; 1
     1a4:	f0 e0       	ldi	r31, 0x00	; 0
     1a6:	ec 0f       	add	r30, r28
     1a8:	fd 1f       	adc	r31, r29
     1aa:	e2 0f       	add	r30, r18
     1ac:	f3 1f       	adc	r31, r19
     1ae:	90 83       	st	Z, r25
         for (int i = 0; i < 4; i++) {
             array[i] = characters[10][i];
         }
     }
     else {						// Valid character
         for (int i = 0; i < 4; i++) {
     1b0:	2f 5f       	subi	r18, 0xFF	; 255
     1b2:	3f 4f       	sbci	r19, 0xFF	; 255
     1b4:	24 30       	cpi	r18, 0x04	; 4
     1b6:	31 05       	cpc	r19, r1
     1b8:	44 f3       	brlt	.-48     	; 0x18a <displayChar+0x42>
             array[i] = characters[c-48][i];
         }
     }
     if (odd) {					// If odd digit, shifts in order to set correct digit
     1ba:	61 11       	cpse	r22, r1
     1bc:	0d c0       	rjmp	.+26     	; 0x1d8 <displayChar+0x90>
     1be:	11 c0       	rjmp	.+34     	; 0x1e2 <displayChar+0x9a>
         for (int i = 0; i < 4; i++) {
             array[i] <<= 4;
     1c0:	e1 e0       	ldi	r30, 0x01	; 1
     1c2:	f0 e0       	ldi	r31, 0x00	; 0
     1c4:	ec 0f       	add	r30, r28
     1c6:	fd 1f       	adc	r31, r29
     1c8:	e8 0f       	add	r30, r24
     1ca:	f9 1f       	adc	r31, r25
     1cc:	20 81       	ld	r18, Z
     1ce:	22 95       	swap	r18
     1d0:	20 7f       	andi	r18, 0xF0	; 240
     1d2:	20 83       	st	Z, r18
         for (int i = 0; i < 4; i++) {
             array[i] = characters[c-48][i];
         }
     }
     if (odd) {					// If odd digit, shifts in order to set correct digit
         for (int i = 0; i < 4; i++) {
     1d4:	01 96       	adiw	r24, 0x01	; 1
     1d6:	02 c0       	rjmp	.+4      	; 0x1dc <displayChar+0x94>
     1d8:	80 e0       	ldi	r24, 0x00	; 0
     1da:	90 e0       	ldi	r25, 0x00	; 0
     1dc:	84 30       	cpi	r24, 0x04	; 4
     1de:	91 05       	cpc	r25, r1
     1e0:	7c f3       	brlt	.-34     	; 0x1c0 <displayChar+0x78>
             array[i] <<= 4;
         }
     }							// This part sets the character in needed registers
     *address |= array[0];		// (K, -, -, A)
     1e2:	9c 91       	ld	r25, X
     1e4:	89 81       	ldd	r24, Y+1	; 0x01
     1e6:	89 2b       	or	r24, r25
     1e8:	8c 93       	st	X, r24
     *(address+5) |= array[1];	// (J, F, H, B)
     1ea:	15 96       	adiw	r26, 0x05	; 5
     1ec:	9c 91       	ld	r25, X
     1ee:	15 97       	sbiw	r26, 0x05	; 5
     1f0:	8a 81       	ldd	r24, Y+2	; 0x02
     1f2:	89 2b       	or	r24, r25
     1f4:	15 96       	adiw	r26, 0x05	; 5
     1f6:	8c 93       	st	X, r24
     1f8:	15 97       	sbiw	r26, 0x05	; 5
     *(address+10) |= array[2];	// (L, E, G, C)
     1fa:	1a 96       	adiw	r26, 0x0a	; 10
     1fc:	9c 91       	ld	r25, X
     1fe:	1a 97       	sbiw	r26, 0x0a	; 10
     200:	8b 81       	ldd	r24, Y+3	; 0x03
     202:	89 2b       	or	r24, r25
     204:	1a 96       	adiw	r26, 0x0a	; 10
     206:	8c 93       	st	X, r24
     208:	1a 97       	sbiw	r26, 0x0a	; 10
     *(address+15) |= array[3];	// (M, P, N, D)
     20a:	1f 96       	adiw	r26, 0x0f	; 15
     20c:	9c 91       	ld	r25, X
     20e:	1f 97       	sbiw	r26, 0x0f	; 15
     210:	8c 81       	ldd	r24, Y+4	; 0x04
     212:	89 2b       	or	r24, r25
     214:	1f 96       	adiw	r26, 0x0f	; 15
     216:	8c 93       	st	X, r24
 }
     218:	0f 90       	pop	r0
     21a:	0f 90       	pop	r0
     21c:	0f 90       	pop	r0
     21e:	0f 90       	pop	r0
     220:	df 91       	pop	r29
     222:	cf 91       	pop	r28
     224:	08 95       	ret

00000226 <removeOldChar>:
 
 
 // Removes previous character at given location
 void removeOldChar(bool odd, volatile uint8_t *address) {
     // AND:s 0 on the parts that need to be reset
     if (odd) {
     226:	88 23       	and	r24, r24
     228:	91 f0       	breq	.+36     	; 0x24e <removeOldChar+0x28>
         *address &= 0b00001001;
     22a:	fb 01       	movw	r30, r22
     22c:	80 81       	ld	r24, Z
     22e:	89 70       	andi	r24, 0x09	; 9
     230:	80 83       	st	Z, r24
         for (int i = 5; i < 20; i += 5) {
     232:	85 e0       	ldi	r24, 0x05	; 5
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	07 c0       	rjmp	.+14     	; 0x246 <removeOldChar+0x20>
             *(address + i) &= 0b00001111;
     238:	fb 01       	movw	r30, r22
     23a:	e8 0f       	add	r30, r24
     23c:	f9 1f       	adc	r31, r25
     23e:	20 81       	ld	r18, Z
     240:	2f 70       	andi	r18, 0x0F	; 15
     242:	20 83       	st	Z, r18
 // Removes previous character at given location
 void removeOldChar(bool odd, volatile uint8_t *address) {
     // AND:s 0 on the parts that need to be reset
     if (odd) {
         *address &= 0b00001001;
         for (int i = 5; i < 20; i += 5) {
     244:	05 96       	adiw	r24, 0x05	; 5
     246:	84 31       	cpi	r24, 0x14	; 20
     248:	91 05       	cpc	r25, r1
     24a:	b4 f3       	brlt	.-20     	; 0x238 <removeOldChar+0x12>
     24c:	08 95       	ret
             *(address + i) &= 0b00001111;
         }
     }
     else {
         *address &= 0b10010000;
     24e:	fb 01       	movw	r30, r22
     250:	80 81       	ld	r24, Z
     252:	80 79       	andi	r24, 0x90	; 144
     254:	80 83       	st	Z, r24
         for (int i = 5; i < 20; i += 5) {
     256:	85 e0       	ldi	r24, 0x05	; 5
     258:	90 e0       	ldi	r25, 0x00	; 0
     25a:	07 c0       	rjmp	.+14     	; 0x26a <removeOldChar+0x44>
             *(address + i) &= 0b11110000;
     25c:	fb 01       	movw	r30, r22
     25e:	e8 0f       	add	r30, r24
     260:	f9 1f       	adc	r31, r25
     262:	20 81       	ld	r18, Z
     264:	20 7f       	andi	r18, 0xF0	; 240
     266:	20 83       	st	Z, r18
             *(address + i) &= 0b00001111;
         }
     }
     else {
         *address &= 0b10010000;
         for (int i = 5; i < 20; i += 5) {
     268:	05 96       	adiw	r24, 0x05	; 5
     26a:	84 31       	cpi	r24, 0x14	; 20
     26c:	91 05       	cpc	r25, r1
     26e:	b4 f3       	brlt	.-20     	; 0x25c <removeOldChar+0x36>
     270:	08 95       	ret

00000272 <writeChar>:
         }
     }
 }
 
 // Takes character ('0' - '9') and a position (0 - 5 (NOT CHECKED)) and prints it on the screen
 void writeChar(char c, int pos) {
     272:	1f 93       	push	r17
     274:	cf 93       	push	r28
     276:	df 93       	push	r29
     278:	18 2f       	mov	r17, r24
     volatile uint8_t *address = &LCDDR0;	// Create pointer to start register
     if (pos % 2 == 0) {	// Even
     27a:	60 fd       	sbrc	r22, 0
     27c:	14 c0       	rjmp	.+40     	; 0x2a6 <writeChar+0x34>
         address += pos/2;					// Change address according to position
     27e:	ab 01       	movw	r20, r22
     280:	77 23       	and	r23, r23
     282:	14 f4       	brge	.+4      	; 0x288 <writeChar+0x16>
     284:	4f 5f       	subi	r20, 0xFF	; 255
     286:	5f 4f       	sbci	r21, 0xFF	; 255
     288:	55 95       	asr	r21
     28a:	47 95       	ror	r20
     28c:	ea 01       	movw	r28, r20
     28e:	c4 51       	subi	r28, 0x14	; 20
     290:	df 4f       	sbci	r29, 0xFF	; 255
         removeOldChar(false, address);
     292:	be 01       	movw	r22, r28
     294:	80 e0       	ldi	r24, 0x00	; 0
     296:	0e 94 13 01 	call	0x226	; 0x226 <removeOldChar>
         displayChar(c, false, address);
     29a:	ae 01       	movw	r20, r28
     29c:	60 e0       	ldi	r22, 0x00	; 0
     29e:	81 2f       	mov	r24, r17
     2a0:	0e 94 a4 00 	call	0x148	; 0x148 <displayChar>
     2a4:	14 c0       	rjmp	.+40     	; 0x2ce <writeChar+0x5c>
     }
     else {				// Odd
         address += (pos - 1) / 2;			// Change address according to position
     2a6:	61 50       	subi	r22, 0x01	; 1
     2a8:	71 09       	sbc	r23, r1
     2aa:	ab 01       	movw	r20, r22
     2ac:	12 f4       	brpl	.+4      	; 0x2b2 <writeChar+0x40>
     2ae:	4f 5f       	subi	r20, 0xFF	; 255
     2b0:	5f 4f       	sbci	r21, 0xFF	; 255
     2b2:	55 95       	asr	r21
     2b4:	47 95       	ror	r20
     2b6:	ea 01       	movw	r28, r20
     2b8:	c4 51       	subi	r28, 0x14	; 20
     2ba:	df 4f       	sbci	r29, 0xFF	; 255
         removeOldChar(true, address);
     2bc:	be 01       	movw	r22, r28
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	0e 94 13 01 	call	0x226	; 0x226 <removeOldChar>
         displayChar(c, true, address);
     2c4:	ae 01       	movw	r20, r28
     2c6:	61 e0       	ldi	r22, 0x01	; 1
     2c8:	81 2f       	mov	r24, r17
     2ca:	0e 94 a4 00 	call	0x148	; 0x148 <displayChar>
     }
 };
     2ce:	df 91       	pop	r29
     2d0:	cf 91       	pop	r28
     2d2:	1f 91       	pop	r17
     2d4:	08 95       	ret

000002d6 <printAt>:
 
 // Displays last two digits of num in pos and pos+1
void printAt(Lcd *self, long num) {
     2d6:	8f 92       	push	r8
     2d8:	9f 92       	push	r9
     2da:	af 92       	push	r10
     2dc:	bf 92       	push	r11
     2de:	cf 92       	push	r12
     2e0:	df 92       	push	r13
     2e2:	ef 92       	push	r14
     2e4:	ff 92       	push	r15
     2e6:	cf 93       	push	r28
     2e8:	df 93       	push	r29
     2ea:	4a 01       	movw	r8, r20
     2ec:	5b 01       	movw	r10, r22
	int pp = self->pos;
     2ee:	fc 01       	movw	r30, r24
     2f0:	c4 81       	ldd	r28, Z+4	; 0x04
     2f2:	d5 81       	ldd	r29, Z+5	; 0x05
    writeChar( (num % 100) / 10 + '0', pp);
     2f4:	cb 01       	movw	r24, r22
     2f6:	ba 01       	movw	r22, r20
     2f8:	24 e6       	ldi	r18, 0x64	; 100
     2fa:	30 e0       	ldi	r19, 0x00	; 0
     2fc:	40 e0       	ldi	r20, 0x00	; 0
     2fe:	50 e0       	ldi	r21, 0x00	; 0
     300:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__divmodsi4>
     304:	0f 2e       	mov	r0, r31
     306:	fa e0       	ldi	r31, 0x0A	; 10
     308:	cf 2e       	mov	r12, r31
     30a:	d1 2c       	mov	r13, r1
     30c:	e1 2c       	mov	r14, r1
     30e:	f1 2c       	mov	r15, r1
     310:	f0 2d       	mov	r31, r0
     312:	a7 01       	movw	r20, r14
     314:	96 01       	movw	r18, r12
     316:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__divmodsi4>
     31a:	be 01       	movw	r22, r28
     31c:	80 e3       	ldi	r24, 0x30	; 48
     31e:	82 0f       	add	r24, r18
     320:	0e 94 39 01 	call	0x272	; 0x272 <writeChar>
    pp++;
     324:	21 96       	adiw	r28, 0x01	; 1
    writeChar( num % 10 + '0', pp);
     326:	c5 01       	movw	r24, r10
     328:	b4 01       	movw	r22, r8
     32a:	a7 01       	movw	r20, r14
     32c:	96 01       	movw	r18, r12
     32e:	0e 94 35 0e 	call	0x1c6a	; 0x1c6a <__divmodsi4>
     332:	86 2f       	mov	r24, r22
     334:	be 01       	movw	r22, r28
     336:	80 5d       	subi	r24, 0xD0	; 208
     338:	0e 94 39 01 	call	0x272	; 0x272 <writeChar>
 }
     33c:	df 91       	pop	r29
     33e:	cf 91       	pop	r28
     340:	ff 90       	pop	r15
     342:	ef 90       	pop	r14
     344:	df 90       	pop	r13
     346:	cf 90       	pop	r12
     348:	bf 90       	pop	r11
     34a:	af 90       	pop	r10
     34c:	9f 90       	pop	r9
     34e:	8f 90       	pop	r8
     350:	08 95       	ret

00000352 <main>:
	long n = 0;
	n++;
	printAt(n, pos);
}*/

int main() {
     352:	cf 93       	push	r28
     354:	df 93       	push	r29
     356:	00 d0       	rcall	.+0      	; 0x358 <main+0x6>
     358:	00 d0       	rcall	.+0      	; 0x35a <main+0x8>
     35a:	00 d0       	rcall	.+0      	; 0x35c <main+0xa>
     35c:	cd b7       	in	r28, 0x3d	; 61
     35e:	de b7       	in	r29, 0x3e	; 62
	Init();
     360:	0e 94 7f 00 	call	0xfe	; 0xfe <Init>
	Lcd display = initLcd(0);
	Generators gen1 = initGenerator(0);
     364:	ce 01       	movw	r24, r28
     366:	01 96       	adiw	r24, 0x01	; 1
     368:	26 e0       	ldi	r18, 0x06	; 6
     36a:	fc 01       	movw	r30, r24
     36c:	11 92       	st	Z+, r1
     36e:	2a 95       	dec	r18
     370:	e9 f7       	brne	.-6      	; 0x36c <main+0x1a>
	INSTALL(&gen1, test, IRQ_PCINT1);
     372:	42 e0       	ldi	r20, 0x02	; 2
     374:	6d e4       	ldi	r22, 0x4D	; 77
     376:	70 e0       	ldi	r23, 0x00	; 0
     378:	0e 94 03 0e 	call	0x1c06	; 0x1c06 <install>
	return tinytimber(NULL,NULL,NULL);
     37c:	40 e0       	ldi	r20, 0x00	; 0
     37e:	50 e0       	ldi	r21, 0x00	; 0
     380:	60 e0       	ldi	r22, 0x00	; 0
     382:	70 e0       	ldi	r23, 0x00	; 0
     384:	80 e0       	ldi	r24, 0x00	; 0
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <tinytimber>

		
}
     38c:	26 96       	adiw	r28, 0x06	; 6
     38e:	0f b6       	in	r0, 0x3f	; 63
     390:	f8 94       	cli
     392:	de bf       	out	0x3e, r29	; 62
     394:	0f be       	out	0x3f, r0	; 63
     396:	cd bf       	out	0x3d, r28	; 61
     398:	df 91       	pop	r29
     39a:	cf 91       	pop	r28
     39c:	08 95       	ret

0000039e <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     39e:	cf 93       	push	r28
     3a0:	df 93       	push	r29
     3a2:	00 d0       	rcall	.+0      	; 0x3a4 <initialize+0x6>
     3a4:	00 d0       	rcall	.+0      	; 0x3a6 <initialize+0x8>
     3a6:	cd b7       	in	r28, 0x3d	; 61
     3a8:	de b7       	in	r29, 0x3e	; 62
     3aa:	80 e0       	ldi	r24, 0x00	; 0
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	18 c0       	rjmp	.+48     	; 0x3e0 <initialize+0x42>
     3b0:	ac 01       	movw	r20, r24
     3b2:	4f 5f       	subi	r20, 0xFF	; 255
     3b4:	5f 4f       	sbci	r21, 0xFF	; 255
     3b6:	9a 01       	movw	r18, r20
     3b8:	22 95       	swap	r18
     3ba:	32 95       	swap	r19
     3bc:	30 7f       	andi	r19, 0xF0	; 240
     3be:	32 27       	eor	r19, r18
     3c0:	20 7f       	andi	r18, 0xF0	; 240
     3c2:	32 27       	eor	r19, r18
     3c4:	25 5e       	subi	r18, 0xE5	; 229
     3c6:	3d 4f       	sbci	r19, 0xFD	; 253
     3c8:	82 95       	swap	r24
     3ca:	92 95       	swap	r25
     3cc:	90 7f       	andi	r25, 0xF0	; 240
     3ce:	98 27       	eor	r25, r24
     3d0:	80 7f       	andi	r24, 0xF0	; 240
     3d2:	98 27       	eor	r25, r24
     3d4:	fc 01       	movw	r30, r24
     3d6:	e5 5e       	subi	r30, 0xE5	; 229
     3d8:	fd 4f       	sbci	r31, 0xFD	; 253
     3da:	31 83       	std	Z+1, r19	; 0x01
     3dc:	20 83       	st	Z, r18
     3de:	ca 01       	movw	r24, r20
     3e0:	8e 30       	cpi	r24, 0x0E	; 14
     3e2:	91 05       	cpc	r25, r1
     3e4:	2c f3       	brlt	.-54     	; 0x3b0 <initialize+0x12>
     3e6:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <messages+0xe1>
     3ea:	10 92 fb 02 	sts	0x02FB, r1	; 0x8002fb <messages+0xe0>
     3ee:	80 e0       	ldi	r24, 0x00	; 0
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	15 c0       	rjmp	.+42     	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
     3f4:	ac 01       	movw	r20, r24
     3f6:	4f 5f       	subi	r20, 0xFF	; 255
     3f8:	5f 4f       	sbci	r21, 0xFF	; 255
     3fa:	6d e1       	ldi	r22, 0x1D	; 29
     3fc:	64 9f       	mul	r22, r20
     3fe:	90 01       	movw	r18, r0
     400:	65 9f       	mul	r22, r21
     402:	30 0d       	add	r19, r0
     404:	11 24       	eor	r1, r1
     406:	2a 59       	subi	r18, 0x9A	; 154
     408:	3e 4f       	sbci	r19, 0xFE	; 254
     40a:	68 9f       	mul	r22, r24
     40c:	f0 01       	movw	r30, r0
     40e:	69 9f       	mul	r22, r25
     410:	f0 0d       	add	r31, r0
     412:	11 24       	eor	r1, r1
     414:	ea 59       	subi	r30, 0x9A	; 154
     416:	fe 4f       	sbci	r31, 0xFE	; 254
     418:	31 83       	std	Z+1, r19	; 0x01
     41a:	20 83       	st	Z, r18
     41c:	ca 01       	movw	r24, r20
     41e:	83 30       	cpi	r24, 0x03	; 3
     420:	91 05       	cpc	r25, r1
     422:	44 f3       	brlt	.-48     	; 0x3f4 <initialize+0x56>
     424:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <threads+0x58>
     428:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <threads+0x57>
     42c:	1a 82       	std	Y+2, r1	; 0x02
     42e:	19 82       	std	Y+1, r1	; 0x01
     430:	32 c0       	rjmp	.+100    	; 0x496 <__DATA_REGION_LENGTH__+0x96>
     432:	2d e1       	ldi	r18, 0x1D	; 29
     434:	49 81       	ldd	r20, Y+1	; 0x01
     436:	5a 81       	ldd	r21, Y+2	; 0x02
     438:	24 9f       	mul	r18, r20
     43a:	c0 01       	movw	r24, r0
     43c:	25 9f       	mul	r18, r21
     43e:	90 0d       	add	r25, r0
     440:	11 24       	eor	r1, r1
     442:	fc 01       	movw	r30, r24
     444:	e4 59       	subi	r30, 0x94	; 148
     446:	fe 4f       	sbci	r31, 0xFE	; 254
     448:	fc 83       	std	Y+4, r31	; 0x04
     44a:	eb 83       	std	Y+3, r30	; 0x03
     44c:	cf 01       	movw	r24, r30
     44e:	0e 94 76 0e 	call	0x1cec	; 0x1cec <setjmp>
     452:	20 e6       	ldi	r18, 0x60	; 96
     454:	49 81       	ldd	r20, Y+1	; 0x01
     456:	5a 81       	ldd	r21, Y+2	; 0x02
     458:	24 9f       	mul	r18, r20
     45a:	c0 01       	movw	r24, r0
     45c:	25 9f       	mul	r18, r21
     45e:	90 0d       	add	r25, r0
     460:	11 24       	eor	r1, r1
     462:	89 59       	subi	r24, 0x99	; 153
     464:	9c 4f       	sbci	r25, 0xFC	; 252
     466:	eb 81       	ldd	r30, Y+3	; 0x03
     468:	fc 81       	ldd	r31, Y+4	; 0x04
     46a:	91 8b       	std	Z+17, r25	; 0x11
     46c:	80 8b       	std	Z+16, r24	; 0x10
     46e:	93 8b       	std	Z+19, r25	; 0x13
     470:	82 8b       	std	Z+18, r24	; 0x12
     472:	8b ea       	ldi	r24, 0xAB	; 171
     474:	9d e0       	ldi	r25, 0x0D	; 13
     476:	96 8b       	std	Z+22, r25	; 0x16
     478:	85 8b       	std	Z+21, r24	; 0x15
     47a:	8d e1       	ldi	r24, 0x1D	; 29
     47c:	84 9f       	mul	r24, r20
     47e:	f0 01       	movw	r30, r0
     480:	85 9f       	mul	r24, r21
     482:	f0 0d       	add	r31, r0
     484:	11 24       	eor	r1, r1
     486:	ea 59       	subi	r30, 0x9A	; 154
     488:	fe 4f       	sbci	r31, 0xFE	; 254
     48a:	15 82       	std	Z+5, r1	; 0x05
     48c:	14 82       	std	Z+4, r1	; 0x04
     48e:	4f 5f       	subi	r20, 0xFF	; 255
     490:	5f 4f       	sbci	r21, 0xFF	; 255
     492:	5a 83       	std	Y+2, r21	; 0x02
     494:	49 83       	std	Y+1, r20	; 0x01
     496:	29 81       	ldd	r18, Y+1	; 0x01
     498:	3a 81       	ldd	r19, Y+2	; 0x02
     49a:	24 30       	cpi	r18, 0x04	; 4
     49c:	31 05       	cpc	r19, r1
     49e:	4c f2       	brlt	.-110    	; 0x432 <__DATA_REGION_LENGTH__+0x32>
     4a0:	ee ef       	ldi	r30, 0xFE	; 254
     4a2:	f1 e0       	ldi	r31, 0x01	; 1
     4a4:	11 82       	std	Z+1, r1	; 0x01
     4a6:	10 82       	st	Z, r1
     4a8:	15 82       	std	Z+5, r1	; 0x05
     4aa:	14 82       	std	Z+4, r1	; 0x04
     4ac:	13 82       	std	Z+3, r1	; 0x03
     4ae:	12 82       	std	Z+2, r1	; 0x02
     4b0:	e1 e6       	ldi	r30, 0x61	; 97
     4b2:	f0 e0       	ldi	r31, 0x00	; 0
     4b4:	80 e8       	ldi	r24, 0x80	; 128
     4b6:	80 83       	st	Z, r24
     4b8:	10 82       	st	Z, r1
     4ba:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     4be:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     4c2:	84 e0       	ldi	r24, 0x04	; 4
     4c4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     4c8:	81 e0       	ldi	r24, 0x01	; 1
     4ca:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     4ce:	0f 90       	pop	r0
     4d0:	0f 90       	pop	r0
     4d2:	0f 90       	pop	r0
     4d4:	0f 90       	pop	r0
     4d6:	df 91       	pop	r29
     4d8:	cf 91       	pop	r28
     4da:	08 95       	ret

000004dc <dispatch>:
     4dc:	cf 93       	push	r28
     4de:	df 93       	push	r29
     4e0:	00 d0       	rcall	.+0      	; 0x4e2 <dispatch+0x6>
     4e2:	cd b7       	in	r28, 0x3d	; 61
     4e4:	de b7       	in	r29, 0x3e	; 62
     4e6:	9a 83       	std	Y+2, r25	; 0x02
     4e8:	89 83       	std	Y+1, r24	; 0x01
     4ea:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4ee:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     4f2:	06 96       	adiw	r24, 0x06	; 6
     4f4:	0e 94 76 0e 	call	0x1cec	; 0x1cec <setjmp>
     4f8:	89 2b       	or	r24, r25
     4fa:	59 f4       	brne	.+22     	; 0x512 <__stack+0x13>
     4fc:	89 81       	ldd	r24, Y+1	; 0x01
     4fe:	9a 81       	ldd	r25, Y+2	; 0x02
     500:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     504:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     508:	61 e0       	ldi	r22, 0x01	; 1
     50a:	70 e0       	ldi	r23, 0x00	; 0
     50c:	06 96       	adiw	r24, 0x06	; 6
     50e:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <longjmp>
     512:	0f 90       	pop	r0
     514:	0f 90       	pop	r0
     516:	df 91       	pop	r29
     518:	cf 91       	pop	r28
     51a:	08 95       	ret

0000051c <enqueueByDeadline>:
     51c:	0f 93       	push	r16
     51e:	1f 93       	push	r17
     520:	cf 93       	push	r28
     522:	df 93       	push	r29
     524:	dc 01       	movw	r26, r24
     526:	cb 01       	movw	r24, r22
     528:	eb 01       	movw	r28, r22
     52a:	e8 81       	ld	r30, Y
     52c:	f9 81       	ldd	r31, Y+1	; 0x01
     52e:	c0 e0       	ldi	r28, 0x00	; 0
     530:	d0 e0       	ldi	r29, 0x00	; 0
     532:	04 c0       	rjmp	.+8      	; 0x53c <enqueueByDeadline+0x20>
     534:	ef 01       	movw	r28, r30
     536:	01 90       	ld	r0, Z+
     538:	f0 81       	ld	r31, Z
     53a:	e0 2d       	mov	r30, r0
     53c:	30 97       	sbiw	r30, 0x00	; 0
     53e:	79 f0       	breq	.+30     	; 0x55e <enqueueByDeadline+0x42>
     540:	06 81       	ldd	r16, Z+6	; 0x06
     542:	17 81       	ldd	r17, Z+7	; 0x07
     544:	20 85       	ldd	r18, Z+8	; 0x08
     546:	31 85       	ldd	r19, Z+9	; 0x09
     548:	16 96       	adiw	r26, 0x06	; 6
     54a:	4d 91       	ld	r20, X+
     54c:	5d 91       	ld	r21, X+
     54e:	6d 91       	ld	r22, X+
     550:	7c 91       	ld	r23, X
     552:	19 97       	sbiw	r26, 0x09	; 9
     554:	40 17       	cp	r20, r16
     556:	51 07       	cpc	r21, r17
     558:	62 07       	cpc	r22, r18
     55a:	73 07       	cpc	r23, r19
     55c:	5c f7       	brge	.-42     	; 0x534 <enqueueByDeadline+0x18>
     55e:	11 96       	adiw	r26, 0x01	; 1
     560:	fc 93       	st	X, r31
     562:	ee 93       	st	-X, r30
     564:	20 97       	sbiw	r28, 0x00	; 0
     566:	21 f4       	brne	.+8      	; 0x570 <enqueueByDeadline+0x54>
     568:	fc 01       	movw	r30, r24
     56a:	b1 83       	std	Z+1, r27	; 0x01
     56c:	a0 83       	st	Z, r26
     56e:	02 c0       	rjmp	.+4      	; 0x574 <enqueueByDeadline+0x58>
     570:	b9 83       	std	Y+1, r27	; 0x01
     572:	a8 83       	st	Y, r26
     574:	df 91       	pop	r29
     576:	cf 91       	pop	r28
     578:	1f 91       	pop	r17
     57a:	0f 91       	pop	r16
     57c:	08 95       	ret

0000057e <enqueueByBaseline>:
     57e:	0f 93       	push	r16
     580:	1f 93       	push	r17
     582:	cf 93       	push	r28
     584:	df 93       	push	r29
     586:	dc 01       	movw	r26, r24
     588:	cb 01       	movw	r24, r22
     58a:	eb 01       	movw	r28, r22
     58c:	e8 81       	ld	r30, Y
     58e:	f9 81       	ldd	r31, Y+1	; 0x01
     590:	c0 e0       	ldi	r28, 0x00	; 0
     592:	d0 e0       	ldi	r29, 0x00	; 0
     594:	04 c0       	rjmp	.+8      	; 0x59e <enqueueByBaseline+0x20>
     596:	ef 01       	movw	r28, r30
     598:	01 90       	ld	r0, Z+
     59a:	f0 81       	ld	r31, Z
     59c:	e0 2d       	mov	r30, r0
     59e:	30 97       	sbiw	r30, 0x00	; 0
     5a0:	79 f0       	breq	.+30     	; 0x5c0 <enqueueByBaseline+0x42>
     5a2:	02 81       	ldd	r16, Z+2	; 0x02
     5a4:	13 81       	ldd	r17, Z+3	; 0x03
     5a6:	24 81       	ldd	r18, Z+4	; 0x04
     5a8:	35 81       	ldd	r19, Z+5	; 0x05
     5aa:	12 96       	adiw	r26, 0x02	; 2
     5ac:	4d 91       	ld	r20, X+
     5ae:	5d 91       	ld	r21, X+
     5b0:	6d 91       	ld	r22, X+
     5b2:	7c 91       	ld	r23, X
     5b4:	15 97       	sbiw	r26, 0x05	; 5
     5b6:	40 17       	cp	r20, r16
     5b8:	51 07       	cpc	r21, r17
     5ba:	62 07       	cpc	r22, r18
     5bc:	73 07       	cpc	r23, r19
     5be:	5c f7       	brge	.-42     	; 0x596 <enqueueByBaseline+0x18>
     5c0:	11 96       	adiw	r26, 0x01	; 1
     5c2:	fc 93       	st	X, r31
     5c4:	ee 93       	st	-X, r30
     5c6:	20 97       	sbiw	r28, 0x00	; 0
     5c8:	21 f4       	brne	.+8      	; 0x5d2 <enqueueByBaseline+0x54>
     5ca:	fc 01       	movw	r30, r24
     5cc:	b1 83       	std	Z+1, r27	; 0x01
     5ce:	a0 83       	st	Z, r26
     5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <enqueueByBaseline+0x58>
     5d2:	b9 83       	std	Y+1, r27	; 0x01
     5d4:	a8 83       	st	Y, r26
     5d6:	df 91       	pop	r29
     5d8:	cf 91       	pop	r28
     5da:	1f 91       	pop	r17
     5dc:	0f 91       	pop	r16
     5de:	08 95       	ret

000005e0 <dequeue>:
     5e0:	dc 01       	movw	r26, r24
     5e2:	ed 91       	ld	r30, X+
     5e4:	fc 91       	ld	r31, X
     5e6:	11 97       	sbiw	r26, 0x01	; 1
     5e8:	30 97       	sbiw	r30, 0x00	; 0
     5ea:	59 f4       	brne	.+22     	; 0x602 <dequeue+0x22>
     5ec:	8f ef       	ldi	r24, 0xFF	; 255
     5ee:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     5f2:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     5f6:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     5fa:	81 e0       	ldi	r24, 0x01	; 1
     5fc:	83 bf       	out	0x33, r24	; 51
     5fe:	88 95       	sleep
     600:	fc cf       	rjmp	.-8      	; 0x5fa <dequeue+0x1a>
     602:	20 81       	ld	r18, Z
     604:	31 81       	ldd	r19, Z+1	; 0x01
     606:	2d 93       	st	X+, r18
     608:	3c 93       	st	X, r19
     60a:	cf 01       	movw	r24, r30
     60c:	08 95       	ret

0000060e <insert>:
     60e:	fb 01       	movw	r30, r22
     610:	20 81       	ld	r18, Z
     612:	31 81       	ldd	r19, Z+1	; 0x01
     614:	fc 01       	movw	r30, r24
     616:	31 83       	std	Z+1, r19	; 0x01
     618:	20 83       	st	Z, r18
     61a:	fb 01       	movw	r30, r22
     61c:	91 83       	std	Z+1, r25	; 0x01
     61e:	80 83       	st	Z, r24
     620:	08 95       	ret

00000622 <push>:
     622:	fb 01       	movw	r30, r22
     624:	20 81       	ld	r18, Z
     626:	31 81       	ldd	r19, Z+1	; 0x01
     628:	fc 01       	movw	r30, r24
     62a:	31 83       	std	Z+1, r19	; 0x01
     62c:	20 83       	st	Z, r18
     62e:	fb 01       	movw	r30, r22
     630:	91 83       	std	Z+1, r25	; 0x01
     632:	80 83       	st	Z, r24
     634:	08 95       	ret

00000636 <pop>:
     636:	dc 01       	movw	r26, r24
     638:	ed 91       	ld	r30, X+
     63a:	fc 91       	ld	r31, X
     63c:	11 97       	sbiw	r26, 0x01	; 1
     63e:	20 81       	ld	r18, Z
     640:	31 81       	ldd	r19, Z+1	; 0x01
     642:	2d 93       	st	X+, r18
     644:	3c 93       	st	X, r19
     646:	cf 01       	movw	r24, r30
     648:	08 95       	ret

0000064a <schedule>:
     64a:	cf 93       	push	r28
     64c:	df 93       	push	r29
     64e:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     652:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     656:	c2 81       	ldd	r28, Z+2	; 0x02
     658:	d3 81       	ldd	r29, Z+3	; 0x03
     65a:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <msgQ>
     65e:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <msgQ+0x1>
     662:	30 97       	sbiw	r30, 0x00	; 0
     664:	19 f1       	breq	.+70     	; 0x6ac <schedule+0x62>
     666:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     66a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     66e:	89 2b       	or	r24, r25
     670:	e9 f0       	breq	.+58     	; 0x6ac <schedule+0x62>
     672:	20 97       	sbiw	r28, 0x00	; 0
     674:	69 f0       	breq	.+26     	; 0x690 <schedule+0x46>
     676:	86 81       	ldd	r24, Z+6	; 0x06
     678:	97 81       	ldd	r25, Z+7	; 0x07
     67a:	a0 85       	ldd	r26, Z+8	; 0x08
     67c:	b1 85       	ldd	r27, Z+9	; 0x09
     67e:	4e 81       	ldd	r20, Y+6	; 0x06
     680:	5f 81       	ldd	r21, Y+7	; 0x07
     682:	68 85       	ldd	r22, Y+8	; 0x08
     684:	79 85       	ldd	r23, Y+9	; 0x09
     686:	84 1b       	sub	r24, r20
     688:	95 0b       	sbc	r25, r21
     68a:	a6 0b       	sbc	r26, r22
     68c:	b7 0b       	sbc	r27, r23
     68e:	72 f4       	brpl	.+28     	; 0x6ac <schedule+0x62>
     690:	84 e0       	ldi	r24, 0x04	; 4
     692:	91 e0       	ldi	r25, 0x01	; 1
     694:	0e 94 1b 03 	call	0x636	; 0x636 <pop>
     698:	62 e0       	ldi	r22, 0x02	; 2
     69a:	71 e0       	ldi	r23, 0x01	; 1
     69c:	0e 94 11 03 	call	0x622	; 0x622 <push>
     6a0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     6a4:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     6a8:	0e 94 6e 02 	call	0x4dc	; 0x4dc <dispatch>
     6ac:	df 91       	pop	r29
     6ae:	cf 91       	pop	r28
     6b0:	08 95       	ret

000006b2 <__vector_1>:
     6b2:	1f 92       	push	r1
     6b4:	0f 92       	push	r0
     6b6:	0f b6       	in	r0, 0x3f	; 63
     6b8:	0f 92       	push	r0
     6ba:	11 24       	eor	r1, r1
     6bc:	0f 93       	push	r16
     6be:	1f 93       	push	r17
     6c0:	2f 93       	push	r18
     6c2:	3f 93       	push	r19
     6c4:	4f 93       	push	r20
     6c6:	5f 93       	push	r21
     6c8:	6f 93       	push	r22
     6ca:	7f 93       	push	r23
     6cc:	8f 93       	push	r24
     6ce:	9f 93       	push	r25
     6d0:	af 93       	push	r26
     6d2:	bf 93       	push	r27
     6d4:	ef 93       	push	r30
     6d6:	ff 93       	push	r31
     6d8:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
     6dc:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
     6e0:	ac 01       	movw	r20, r24
     6e2:	09 2e       	mov	r0, r25
     6e4:	00 0c       	add	r0, r0
     6e6:	66 0b       	sbc	r22, r22
     6e8:	77 0b       	sbc	r23, r23
     6ea:	9a 01       	movw	r18, r20
     6ec:	11 27       	eor	r17, r17
     6ee:	00 27       	eor	r16, r16
     6f0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     6f4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	40 2b       	or	r20, r16
     6fe:	51 2b       	or	r21, r17
     700:	62 2b       	or	r22, r18
     702:	73 2b       	or	r23, r19
     704:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     708:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     70c:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     710:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     714:	b0 9b       	sbis	0x16, 0	; 22
     716:	1a c0       	rjmp	.+52     	; 0x74c <__vector_1+0x9a>
     718:	01 96       	adiw	r24, 0x01	; 1
     71a:	09 2e       	mov	r0, r25
     71c:	00 0c       	add	r0, r0
     71e:	aa 0b       	sbc	r26, r26
     720:	bb 0b       	sbc	r27, r27
     722:	bc 01       	movw	r22, r24
     724:	55 27       	eor	r21, r21
     726:	44 27       	eor	r20, r20
     728:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     72c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     730:	a0 e0       	ldi	r26, 0x00	; 0
     732:	b0 e0       	ldi	r27, 0x00	; 0
     734:	84 2b       	or	r24, r20
     736:	95 2b       	or	r25, r21
     738:	a6 2b       	or	r26, r22
     73a:	b7 2b       	or	r27, r23
     73c:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     740:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     744:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     748:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     74c:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable>
     750:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1>
     754:	30 97       	sbiw	r30, 0x00	; 0
     756:	39 f0       	breq	.+14     	; 0x766 <__vector_1+0xb4>
     758:	60 e0       	ldi	r22, 0x00	; 0
     75a:	70 e0       	ldi	r23, 0x00	; 0
     75c:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable>
     760:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1>
     764:	09 95       	icall
     766:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
     76a:	ff 91       	pop	r31
     76c:	ef 91       	pop	r30
     76e:	bf 91       	pop	r27
     770:	af 91       	pop	r26
     772:	9f 91       	pop	r25
     774:	8f 91       	pop	r24
     776:	7f 91       	pop	r23
     778:	6f 91       	pop	r22
     77a:	5f 91       	pop	r21
     77c:	4f 91       	pop	r20
     77e:	3f 91       	pop	r19
     780:	2f 91       	pop	r18
     782:	1f 91       	pop	r17
     784:	0f 91       	pop	r16
     786:	0f 90       	pop	r0
     788:	0f be       	out	0x3f, r0	; 63
     78a:	0f 90       	pop	r0
     78c:	1f 90       	pop	r1
     78e:	18 95       	reti

00000790 <__vector_2>:
     790:	1f 92       	push	r1
     792:	0f 92       	push	r0
     794:	0f b6       	in	r0, 0x3f	; 63
     796:	0f 92       	push	r0
     798:	11 24       	eor	r1, r1
     79a:	0f 93       	push	r16
     79c:	1f 93       	push	r17
     79e:	2f 93       	push	r18
     7a0:	3f 93       	push	r19
     7a2:	4f 93       	push	r20
     7a4:	5f 93       	push	r21
     7a6:	6f 93       	push	r22
     7a8:	7f 93       	push	r23
     7aa:	8f 93       	push	r24
     7ac:	9f 93       	push	r25
     7ae:	af 93       	push	r26
     7b0:	bf 93       	push	r27
     7b2:	ef 93       	push	r30
     7b4:	ff 93       	push	r31
     7b6:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
     7ba:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
     7be:	ac 01       	movw	r20, r24
     7c0:	09 2e       	mov	r0, r25
     7c2:	00 0c       	add	r0, r0
     7c4:	66 0b       	sbc	r22, r22
     7c6:	77 0b       	sbc	r23, r23
     7c8:	9a 01       	movw	r18, r20
     7ca:	11 27       	eor	r17, r17
     7cc:	00 27       	eor	r16, r16
     7ce:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     7d2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     7d6:	60 e0       	ldi	r22, 0x00	; 0
     7d8:	70 e0       	ldi	r23, 0x00	; 0
     7da:	40 2b       	or	r20, r16
     7dc:	51 2b       	or	r21, r17
     7de:	62 2b       	or	r22, r18
     7e0:	73 2b       	or	r23, r19
     7e2:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     7e6:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     7ea:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     7ee:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     7f2:	b0 9b       	sbis	0x16, 0	; 22
     7f4:	1a c0       	rjmp	.+52     	; 0x82a <__vector_2+0x9a>
     7f6:	01 96       	adiw	r24, 0x01	; 1
     7f8:	09 2e       	mov	r0, r25
     7fa:	00 0c       	add	r0, r0
     7fc:	aa 0b       	sbc	r26, r26
     7fe:	bb 0b       	sbc	r27, r27
     800:	bc 01       	movw	r22, r24
     802:	55 27       	eor	r21, r21
     804:	44 27       	eor	r20, r20
     806:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     80a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     80e:	a0 e0       	ldi	r26, 0x00	; 0
     810:	b0 e0       	ldi	r27, 0x00	; 0
     812:	84 2b       	or	r24, r20
     814:	95 2b       	or	r25, r21
     816:	a6 2b       	or	r26, r22
     818:	b7 2b       	or	r27, r23
     81a:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     81e:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     822:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     826:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     82a:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x2>
     82e:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x3>
     832:	30 97       	sbiw	r30, 0x00	; 0
     834:	39 f0       	breq	.+14     	; 0x844 <__vector_2+0xb4>
     836:	61 e0       	ldi	r22, 0x01	; 1
     838:	70 e0       	ldi	r23, 0x00	; 0
     83a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x2>
     83e:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x3>
     842:	09 95       	icall
     844:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
     848:	ff 91       	pop	r31
     84a:	ef 91       	pop	r30
     84c:	bf 91       	pop	r27
     84e:	af 91       	pop	r26
     850:	9f 91       	pop	r25
     852:	8f 91       	pop	r24
     854:	7f 91       	pop	r23
     856:	6f 91       	pop	r22
     858:	5f 91       	pop	r21
     85a:	4f 91       	pop	r20
     85c:	3f 91       	pop	r19
     85e:	2f 91       	pop	r18
     860:	1f 91       	pop	r17
     862:	0f 91       	pop	r16
     864:	0f 90       	pop	r0
     866:	0f be       	out	0x3f, r0	; 63
     868:	0f 90       	pop	r0
     86a:	1f 90       	pop	r1
     86c:	18 95       	reti

0000086e <__vector_3>:
     86e:	1f 92       	push	r1
     870:	0f 92       	push	r0
     872:	0f b6       	in	r0, 0x3f	; 63
     874:	0f 92       	push	r0
     876:	11 24       	eor	r1, r1
     878:	0f 93       	push	r16
     87a:	1f 93       	push	r17
     87c:	2f 93       	push	r18
     87e:	3f 93       	push	r19
     880:	4f 93       	push	r20
     882:	5f 93       	push	r21
     884:	6f 93       	push	r22
     886:	7f 93       	push	r23
     888:	8f 93       	push	r24
     88a:	9f 93       	push	r25
     88c:	af 93       	push	r26
     88e:	bf 93       	push	r27
     890:	ef 93       	push	r30
     892:	ff 93       	push	r31
     894:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
     898:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
     89c:	ac 01       	movw	r20, r24
     89e:	09 2e       	mov	r0, r25
     8a0:	00 0c       	add	r0, r0
     8a2:	66 0b       	sbc	r22, r22
     8a4:	77 0b       	sbc	r23, r23
     8a6:	9a 01       	movw	r18, r20
     8a8:	11 27       	eor	r17, r17
     8aa:	00 27       	eor	r16, r16
     8ac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8b0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8b4:	60 e0       	ldi	r22, 0x00	; 0
     8b6:	70 e0       	ldi	r23, 0x00	; 0
     8b8:	40 2b       	or	r20, r16
     8ba:	51 2b       	or	r21, r17
     8bc:	62 2b       	or	r22, r18
     8be:	73 2b       	or	r23, r19
     8c0:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     8c4:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     8c8:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     8cc:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     8d0:	b0 9b       	sbis	0x16, 0	; 22
     8d2:	1a c0       	rjmp	.+52     	; 0x908 <__vector_3+0x9a>
     8d4:	01 96       	adiw	r24, 0x01	; 1
     8d6:	09 2e       	mov	r0, r25
     8d8:	00 0c       	add	r0, r0
     8da:	aa 0b       	sbc	r26, r26
     8dc:	bb 0b       	sbc	r27, r27
     8de:	bc 01       	movw	r22, r24
     8e0:	55 27       	eor	r21, r21
     8e2:	44 27       	eor	r20, r20
     8e4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8e8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8ec:	a0 e0       	ldi	r26, 0x00	; 0
     8ee:	b0 e0       	ldi	r27, 0x00	; 0
     8f0:	84 2b       	or	r24, r20
     8f2:	95 2b       	or	r25, r21
     8f4:	a6 2b       	or	r26, r22
     8f6:	b7 2b       	or	r27, r23
     8f8:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     8fc:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     900:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     904:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     908:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x4>
     90c:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x5>
     910:	30 97       	sbiw	r30, 0x00	; 0
     912:	39 f0       	breq	.+14     	; 0x922 <__vector_3+0xb4>
     914:	62 e0       	ldi	r22, 0x02	; 2
     916:	70 e0       	ldi	r23, 0x00	; 0
     918:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x4>
     91c:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x5>
     920:	09 95       	icall
     922:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
     926:	ff 91       	pop	r31
     928:	ef 91       	pop	r30
     92a:	bf 91       	pop	r27
     92c:	af 91       	pop	r26
     92e:	9f 91       	pop	r25
     930:	8f 91       	pop	r24
     932:	7f 91       	pop	r23
     934:	6f 91       	pop	r22
     936:	5f 91       	pop	r21
     938:	4f 91       	pop	r20
     93a:	3f 91       	pop	r19
     93c:	2f 91       	pop	r18
     93e:	1f 91       	pop	r17
     940:	0f 91       	pop	r16
     942:	0f 90       	pop	r0
     944:	0f be       	out	0x3f, r0	; 63
     946:	0f 90       	pop	r0
     948:	1f 90       	pop	r1
     94a:	18 95       	reti

0000094c <__vector_4>:
     94c:	1f 92       	push	r1
     94e:	0f 92       	push	r0
     950:	0f b6       	in	r0, 0x3f	; 63
     952:	0f 92       	push	r0
     954:	11 24       	eor	r1, r1
     956:	0f 93       	push	r16
     958:	1f 93       	push	r17
     95a:	2f 93       	push	r18
     95c:	3f 93       	push	r19
     95e:	4f 93       	push	r20
     960:	5f 93       	push	r21
     962:	6f 93       	push	r22
     964:	7f 93       	push	r23
     966:	8f 93       	push	r24
     968:	9f 93       	push	r25
     96a:	af 93       	push	r26
     96c:	bf 93       	push	r27
     96e:	ef 93       	push	r30
     970:	ff 93       	push	r31
     972:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
     976:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
     97a:	ac 01       	movw	r20, r24
     97c:	09 2e       	mov	r0, r25
     97e:	00 0c       	add	r0, r0
     980:	66 0b       	sbc	r22, r22
     982:	77 0b       	sbc	r23, r23
     984:	9a 01       	movw	r18, r20
     986:	11 27       	eor	r17, r17
     988:	00 27       	eor	r16, r16
     98a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     98e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     992:	60 e0       	ldi	r22, 0x00	; 0
     994:	70 e0       	ldi	r23, 0x00	; 0
     996:	40 2b       	or	r20, r16
     998:	51 2b       	or	r21, r17
     99a:	62 2b       	or	r22, r18
     99c:	73 2b       	or	r23, r19
     99e:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     9a2:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     9a6:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     9aa:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     9ae:	b0 9b       	sbis	0x16, 0	; 22
     9b0:	1a c0       	rjmp	.+52     	; 0x9e6 <__vector_4+0x9a>
     9b2:	01 96       	adiw	r24, 0x01	; 1
     9b4:	09 2e       	mov	r0, r25
     9b6:	00 0c       	add	r0, r0
     9b8:	aa 0b       	sbc	r26, r26
     9ba:	bb 0b       	sbc	r27, r27
     9bc:	bc 01       	movw	r22, r24
     9be:	55 27       	eor	r21, r21
     9c0:	44 27       	eor	r20, r20
     9c2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9c6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9ca:	a0 e0       	ldi	r26, 0x00	; 0
     9cc:	b0 e0       	ldi	r27, 0x00	; 0
     9ce:	84 2b       	or	r24, r20
     9d0:	95 2b       	or	r25, r21
     9d2:	a6 2b       	or	r26, r22
     9d4:	b7 2b       	or	r27, r23
     9d6:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     9da:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     9de:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     9e2:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     9e6:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x6>
     9ea:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x7>
     9ee:	30 97       	sbiw	r30, 0x00	; 0
     9f0:	39 f0       	breq	.+14     	; 0xa00 <__vector_4+0xb4>
     9f2:	63 e0       	ldi	r22, 0x03	; 3
     9f4:	70 e0       	ldi	r23, 0x00	; 0
     9f6:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x6>
     9fa:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x7>
     9fe:	09 95       	icall
     a00:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
     a04:	ff 91       	pop	r31
     a06:	ef 91       	pop	r30
     a08:	bf 91       	pop	r27
     a0a:	af 91       	pop	r26
     a0c:	9f 91       	pop	r25
     a0e:	8f 91       	pop	r24
     a10:	7f 91       	pop	r23
     a12:	6f 91       	pop	r22
     a14:	5f 91       	pop	r21
     a16:	4f 91       	pop	r20
     a18:	3f 91       	pop	r19
     a1a:	2f 91       	pop	r18
     a1c:	1f 91       	pop	r17
     a1e:	0f 91       	pop	r16
     a20:	0f 90       	pop	r0
     a22:	0f be       	out	0x3f, r0	; 63
     a24:	0f 90       	pop	r0
     a26:	1f 90       	pop	r1
     a28:	18 95       	reti

00000a2a <__vector_5>:
     a2a:	1f 92       	push	r1
     a2c:	0f 92       	push	r0
     a2e:	0f b6       	in	r0, 0x3f	; 63
     a30:	0f 92       	push	r0
     a32:	11 24       	eor	r1, r1
     a34:	0f 93       	push	r16
     a36:	1f 93       	push	r17
     a38:	2f 93       	push	r18
     a3a:	3f 93       	push	r19
     a3c:	4f 93       	push	r20
     a3e:	5f 93       	push	r21
     a40:	6f 93       	push	r22
     a42:	7f 93       	push	r23
     a44:	8f 93       	push	r24
     a46:	9f 93       	push	r25
     a48:	af 93       	push	r26
     a4a:	bf 93       	push	r27
     a4c:	ef 93       	push	r30
     a4e:	ff 93       	push	r31
     a50:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
     a54:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
     a58:	ac 01       	movw	r20, r24
     a5a:	09 2e       	mov	r0, r25
     a5c:	00 0c       	add	r0, r0
     a5e:	66 0b       	sbc	r22, r22
     a60:	77 0b       	sbc	r23, r23
     a62:	9a 01       	movw	r18, r20
     a64:	11 27       	eor	r17, r17
     a66:	00 27       	eor	r16, r16
     a68:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a6c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a70:	60 e0       	ldi	r22, 0x00	; 0
     a72:	70 e0       	ldi	r23, 0x00	; 0
     a74:	40 2b       	or	r20, r16
     a76:	51 2b       	or	r21, r17
     a78:	62 2b       	or	r22, r18
     a7a:	73 2b       	or	r23, r19
     a7c:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     a80:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     a84:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     a88:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     a8c:	b0 9b       	sbis	0x16, 0	; 22
     a8e:	1a c0       	rjmp	.+52     	; 0xac4 <__vector_5+0x9a>
     a90:	01 96       	adiw	r24, 0x01	; 1
     a92:	09 2e       	mov	r0, r25
     a94:	00 0c       	add	r0, r0
     a96:	aa 0b       	sbc	r26, r26
     a98:	bb 0b       	sbc	r27, r27
     a9a:	bc 01       	movw	r22, r24
     a9c:	55 27       	eor	r21, r21
     a9e:	44 27       	eor	r20, r20
     aa0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     aa4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     aa8:	a0 e0       	ldi	r26, 0x00	; 0
     aaa:	b0 e0       	ldi	r27, 0x00	; 0
     aac:	84 2b       	or	r24, r20
     aae:	95 2b       	or	r25, r21
     ab0:	a6 2b       	or	r26, r22
     ab2:	b7 2b       	or	r27, r23
     ab4:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     ab8:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     abc:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     ac0:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     ac4:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x8>
     ac8:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x9>
     acc:	30 97       	sbiw	r30, 0x00	; 0
     ace:	39 f0       	breq	.+14     	; 0xade <__vector_5+0xb4>
     ad0:	64 e0       	ldi	r22, 0x04	; 4
     ad2:	70 e0       	ldi	r23, 0x00	; 0
     ad4:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x8>
     ad8:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x9>
     adc:	09 95       	icall
     ade:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
     ae2:	ff 91       	pop	r31
     ae4:	ef 91       	pop	r30
     ae6:	bf 91       	pop	r27
     ae8:	af 91       	pop	r26
     aea:	9f 91       	pop	r25
     aec:	8f 91       	pop	r24
     aee:	7f 91       	pop	r23
     af0:	6f 91       	pop	r22
     af2:	5f 91       	pop	r21
     af4:	4f 91       	pop	r20
     af6:	3f 91       	pop	r19
     af8:	2f 91       	pop	r18
     afa:	1f 91       	pop	r17
     afc:	0f 91       	pop	r16
     afe:	0f 90       	pop	r0
     b00:	0f be       	out	0x3f, r0	; 63
     b02:	0f 90       	pop	r0
     b04:	1f 90       	pop	r1
     b06:	18 95       	reti

00000b08 <__vector_10>:
     b08:	1f 92       	push	r1
     b0a:	0f 92       	push	r0
     b0c:	0f b6       	in	r0, 0x3f	; 63
     b0e:	0f 92       	push	r0
     b10:	11 24       	eor	r1, r1
     b12:	0f 93       	push	r16
     b14:	1f 93       	push	r17
     b16:	2f 93       	push	r18
     b18:	3f 93       	push	r19
     b1a:	4f 93       	push	r20
     b1c:	5f 93       	push	r21
     b1e:	6f 93       	push	r22
     b20:	7f 93       	push	r23
     b22:	8f 93       	push	r24
     b24:	9f 93       	push	r25
     b26:	af 93       	push	r26
     b28:	bf 93       	push	r27
     b2a:	ef 93       	push	r30
     b2c:	ff 93       	push	r31
     b2e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
     b32:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
     b36:	ac 01       	movw	r20, r24
     b38:	09 2e       	mov	r0, r25
     b3a:	00 0c       	add	r0, r0
     b3c:	66 0b       	sbc	r22, r22
     b3e:	77 0b       	sbc	r23, r23
     b40:	9a 01       	movw	r18, r20
     b42:	11 27       	eor	r17, r17
     b44:	00 27       	eor	r16, r16
     b46:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b4a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b4e:	60 e0       	ldi	r22, 0x00	; 0
     b50:	70 e0       	ldi	r23, 0x00	; 0
     b52:	40 2b       	or	r20, r16
     b54:	51 2b       	or	r21, r17
     b56:	62 2b       	or	r22, r18
     b58:	73 2b       	or	r23, r19
     b5a:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     b5e:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     b62:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     b66:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     b6a:	b0 9b       	sbis	0x16, 0	; 22
     b6c:	1a c0       	rjmp	.+52     	; 0xba2 <__vector_10+0x9a>
     b6e:	01 96       	adiw	r24, 0x01	; 1
     b70:	09 2e       	mov	r0, r25
     b72:	00 0c       	add	r0, r0
     b74:	aa 0b       	sbc	r26, r26
     b76:	bb 0b       	sbc	r27, r27
     b78:	bc 01       	movw	r22, r24
     b7a:	55 27       	eor	r21, r21
     b7c:	44 27       	eor	r20, r20
     b7e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b82:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b86:	a0 e0       	ldi	r26, 0x00	; 0
     b88:	b0 e0       	ldi	r27, 0x00	; 0
     b8a:	84 2b       	or	r24, r20
     b8c:	95 2b       	or	r25, r21
     b8e:	a6 2b       	or	r26, r22
     b90:	b7 2b       	or	r27, r23
     b92:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     b96:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     b9a:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     b9e:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     ba2:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0xa>
     ba6:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0xb>
     baa:	30 97       	sbiw	r30, 0x00	; 0
     bac:	39 f0       	breq	.+14     	; 0xbbc <__vector_10+0xb4>
     bae:	65 e0       	ldi	r22, 0x05	; 5
     bb0:	70 e0       	ldi	r23, 0x00	; 0
     bb2:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0xa>
     bb6:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0xb>
     bba:	09 95       	icall
     bbc:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
     bc0:	ff 91       	pop	r31
     bc2:	ef 91       	pop	r30
     bc4:	bf 91       	pop	r27
     bc6:	af 91       	pop	r26
     bc8:	9f 91       	pop	r25
     bca:	8f 91       	pop	r24
     bcc:	7f 91       	pop	r23
     bce:	6f 91       	pop	r22
     bd0:	5f 91       	pop	r21
     bd2:	4f 91       	pop	r20
     bd4:	3f 91       	pop	r19
     bd6:	2f 91       	pop	r18
     bd8:	1f 91       	pop	r17
     bda:	0f 91       	pop	r16
     bdc:	0f 90       	pop	r0
     bde:	0f be       	out	0x3f, r0	; 63
     be0:	0f 90       	pop	r0
     be2:	1f 90       	pop	r1
     be4:	18 95       	reti

00000be6 <__vector_11>:
     be6:	1f 92       	push	r1
     be8:	0f 92       	push	r0
     bea:	0f b6       	in	r0, 0x3f	; 63
     bec:	0f 92       	push	r0
     bee:	11 24       	eor	r1, r1
     bf0:	0f 93       	push	r16
     bf2:	1f 93       	push	r17
     bf4:	2f 93       	push	r18
     bf6:	3f 93       	push	r19
     bf8:	4f 93       	push	r20
     bfa:	5f 93       	push	r21
     bfc:	6f 93       	push	r22
     bfe:	7f 93       	push	r23
     c00:	8f 93       	push	r24
     c02:	9f 93       	push	r25
     c04:	af 93       	push	r26
     c06:	bf 93       	push	r27
     c08:	ef 93       	push	r30
     c0a:	ff 93       	push	r31
     c0c:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
     c10:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
     c14:	ac 01       	movw	r20, r24
     c16:	09 2e       	mov	r0, r25
     c18:	00 0c       	add	r0, r0
     c1a:	66 0b       	sbc	r22, r22
     c1c:	77 0b       	sbc	r23, r23
     c1e:	9a 01       	movw	r18, r20
     c20:	11 27       	eor	r17, r17
     c22:	00 27       	eor	r16, r16
     c24:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c28:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c2c:	60 e0       	ldi	r22, 0x00	; 0
     c2e:	70 e0       	ldi	r23, 0x00	; 0
     c30:	40 2b       	or	r20, r16
     c32:	51 2b       	or	r21, r17
     c34:	62 2b       	or	r22, r18
     c36:	73 2b       	or	r23, r19
     c38:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     c3c:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     c40:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     c44:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     c48:	b0 9b       	sbis	0x16, 0	; 22
     c4a:	1a c0       	rjmp	.+52     	; 0xc80 <__vector_11+0x9a>
     c4c:	01 96       	adiw	r24, 0x01	; 1
     c4e:	09 2e       	mov	r0, r25
     c50:	00 0c       	add	r0, r0
     c52:	aa 0b       	sbc	r26, r26
     c54:	bb 0b       	sbc	r27, r27
     c56:	bc 01       	movw	r22, r24
     c58:	55 27       	eor	r21, r21
     c5a:	44 27       	eor	r20, r20
     c5c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c60:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c64:	a0 e0       	ldi	r26, 0x00	; 0
     c66:	b0 e0       	ldi	r27, 0x00	; 0
     c68:	84 2b       	or	r24, r20
     c6a:	95 2b       	or	r25, r21
     c6c:	a6 2b       	or	r26, r22
     c6e:	b7 2b       	or	r27, r23
     c70:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     c74:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     c78:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     c7c:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     c80:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0xc>
     c84:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0xd>
     c88:	30 97       	sbiw	r30, 0x00	; 0
     c8a:	39 f0       	breq	.+14     	; 0xc9a <__vector_11+0xb4>
     c8c:	66 e0       	ldi	r22, 0x06	; 6
     c8e:	70 e0       	ldi	r23, 0x00	; 0
     c90:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0xc>
     c94:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0xd>
     c98:	09 95       	icall
     c9a:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
     c9e:	ff 91       	pop	r31
     ca0:	ef 91       	pop	r30
     ca2:	bf 91       	pop	r27
     ca4:	af 91       	pop	r26
     ca6:	9f 91       	pop	r25
     ca8:	8f 91       	pop	r24
     caa:	7f 91       	pop	r23
     cac:	6f 91       	pop	r22
     cae:	5f 91       	pop	r21
     cb0:	4f 91       	pop	r20
     cb2:	3f 91       	pop	r19
     cb4:	2f 91       	pop	r18
     cb6:	1f 91       	pop	r17
     cb8:	0f 91       	pop	r16
     cba:	0f 90       	pop	r0
     cbc:	0f be       	out	0x3f, r0	; 63
     cbe:	0f 90       	pop	r0
     cc0:	1f 90       	pop	r1
     cc2:	18 95       	reti

00000cc4 <__vector_12>:
     cc4:	1f 92       	push	r1
     cc6:	0f 92       	push	r0
     cc8:	0f b6       	in	r0, 0x3f	; 63
     cca:	0f 92       	push	r0
     ccc:	11 24       	eor	r1, r1
     cce:	0f 93       	push	r16
     cd0:	1f 93       	push	r17
     cd2:	2f 93       	push	r18
     cd4:	3f 93       	push	r19
     cd6:	4f 93       	push	r20
     cd8:	5f 93       	push	r21
     cda:	6f 93       	push	r22
     cdc:	7f 93       	push	r23
     cde:	8f 93       	push	r24
     ce0:	9f 93       	push	r25
     ce2:	af 93       	push	r26
     ce4:	bf 93       	push	r27
     ce6:	ef 93       	push	r30
     ce8:	ff 93       	push	r31
     cea:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
     cee:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
     cf2:	ac 01       	movw	r20, r24
     cf4:	09 2e       	mov	r0, r25
     cf6:	00 0c       	add	r0, r0
     cf8:	66 0b       	sbc	r22, r22
     cfa:	77 0b       	sbc	r23, r23
     cfc:	9a 01       	movw	r18, r20
     cfe:	11 27       	eor	r17, r17
     d00:	00 27       	eor	r16, r16
     d02:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d06:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d0a:	60 e0       	ldi	r22, 0x00	; 0
     d0c:	70 e0       	ldi	r23, 0x00	; 0
     d0e:	40 2b       	or	r20, r16
     d10:	51 2b       	or	r21, r17
     d12:	62 2b       	or	r22, r18
     d14:	73 2b       	or	r23, r19
     d16:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     d1a:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     d1e:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     d22:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     d26:	b0 9b       	sbis	0x16, 0	; 22
     d28:	1a c0       	rjmp	.+52     	; 0xd5e <__vector_12+0x9a>
     d2a:	01 96       	adiw	r24, 0x01	; 1
     d2c:	09 2e       	mov	r0, r25
     d2e:	00 0c       	add	r0, r0
     d30:	aa 0b       	sbc	r26, r26
     d32:	bb 0b       	sbc	r27, r27
     d34:	bc 01       	movw	r22, r24
     d36:	55 27       	eor	r21, r21
     d38:	44 27       	eor	r20, r20
     d3a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d3e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d42:	a0 e0       	ldi	r26, 0x00	; 0
     d44:	b0 e0       	ldi	r27, 0x00	; 0
     d46:	84 2b       	or	r24, r20
     d48:	95 2b       	or	r25, r21
     d4a:	a6 2b       	or	r26, r22
     d4c:	b7 2b       	or	r27, r23
     d4e:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     d52:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     d56:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     d5a:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     d5e:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0xe>
     d62:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0xf>
     d66:	30 97       	sbiw	r30, 0x00	; 0
     d68:	39 f0       	breq	.+14     	; 0xd78 <__vector_12+0xb4>
     d6a:	67 e0       	ldi	r22, 0x07	; 7
     d6c:	70 e0       	ldi	r23, 0x00	; 0
     d6e:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0xe>
     d72:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0xf>
     d76:	09 95       	icall
     d78:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
     d7c:	ff 91       	pop	r31
     d7e:	ef 91       	pop	r30
     d80:	bf 91       	pop	r27
     d82:	af 91       	pop	r26
     d84:	9f 91       	pop	r25
     d86:	8f 91       	pop	r24
     d88:	7f 91       	pop	r23
     d8a:	6f 91       	pop	r22
     d8c:	5f 91       	pop	r21
     d8e:	4f 91       	pop	r20
     d90:	3f 91       	pop	r19
     d92:	2f 91       	pop	r18
     d94:	1f 91       	pop	r17
     d96:	0f 91       	pop	r16
     d98:	0f 90       	pop	r0
     d9a:	0f be       	out	0x3f, r0	; 63
     d9c:	0f 90       	pop	r0
     d9e:	1f 90       	pop	r1
     da0:	18 95       	reti

00000da2 <__vector_13>:
     da2:	1f 92       	push	r1
     da4:	0f 92       	push	r0
     da6:	0f b6       	in	r0, 0x3f	; 63
     da8:	0f 92       	push	r0
     daa:	11 24       	eor	r1, r1
     dac:	0f 93       	push	r16
     dae:	1f 93       	push	r17
     db0:	2f 93       	push	r18
     db2:	3f 93       	push	r19
     db4:	4f 93       	push	r20
     db6:	5f 93       	push	r21
     db8:	6f 93       	push	r22
     dba:	7f 93       	push	r23
     dbc:	8f 93       	push	r24
     dbe:	9f 93       	push	r25
     dc0:	af 93       	push	r26
     dc2:	bf 93       	push	r27
     dc4:	ef 93       	push	r30
     dc6:	ff 93       	push	r31
     dc8:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
     dcc:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
     dd0:	ac 01       	movw	r20, r24
     dd2:	09 2e       	mov	r0, r25
     dd4:	00 0c       	add	r0, r0
     dd6:	66 0b       	sbc	r22, r22
     dd8:	77 0b       	sbc	r23, r23
     dda:	9a 01       	movw	r18, r20
     ddc:	11 27       	eor	r17, r17
     dde:	00 27       	eor	r16, r16
     de0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     de4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     de8:	60 e0       	ldi	r22, 0x00	; 0
     dea:	70 e0       	ldi	r23, 0x00	; 0
     dec:	40 2b       	or	r20, r16
     dee:	51 2b       	or	r21, r17
     df0:	62 2b       	or	r22, r18
     df2:	73 2b       	or	r23, r19
     df4:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     df8:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     dfc:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     e00:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     e04:	b0 9b       	sbis	0x16, 0	; 22
     e06:	1a c0       	rjmp	.+52     	; 0xe3c <__vector_13+0x9a>
     e08:	01 96       	adiw	r24, 0x01	; 1
     e0a:	09 2e       	mov	r0, r25
     e0c:	00 0c       	add	r0, r0
     e0e:	aa 0b       	sbc	r26, r26
     e10:	bb 0b       	sbc	r27, r27
     e12:	bc 01       	movw	r22, r24
     e14:	55 27       	eor	r21, r21
     e16:	44 27       	eor	r20, r20
     e18:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e1c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e20:	a0 e0       	ldi	r26, 0x00	; 0
     e22:	b0 e0       	ldi	r27, 0x00	; 0
     e24:	84 2b       	or	r24, r20
     e26:	95 2b       	or	r25, r21
     e28:	a6 2b       	or	r26, r22
     e2a:	b7 2b       	or	r27, r23
     e2c:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     e30:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     e34:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     e38:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     e3c:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0x10>
     e40:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0x11>
     e44:	30 97       	sbiw	r30, 0x00	; 0
     e46:	39 f0       	breq	.+14     	; 0xe56 <__vector_13+0xb4>
     e48:	68 e0       	ldi	r22, 0x08	; 8
     e4a:	70 e0       	ldi	r23, 0x00	; 0
     e4c:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0x10>
     e50:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0x11>
     e54:	09 95       	icall
     e56:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
     e5a:	ff 91       	pop	r31
     e5c:	ef 91       	pop	r30
     e5e:	bf 91       	pop	r27
     e60:	af 91       	pop	r26
     e62:	9f 91       	pop	r25
     e64:	8f 91       	pop	r24
     e66:	7f 91       	pop	r23
     e68:	6f 91       	pop	r22
     e6a:	5f 91       	pop	r21
     e6c:	4f 91       	pop	r20
     e6e:	3f 91       	pop	r19
     e70:	2f 91       	pop	r18
     e72:	1f 91       	pop	r17
     e74:	0f 91       	pop	r16
     e76:	0f 90       	pop	r0
     e78:	0f be       	out	0x3f, r0	; 63
     e7a:	0f 90       	pop	r0
     e7c:	1f 90       	pop	r1
     e7e:	18 95       	reti

00000e80 <__vector_14>:
     e80:	1f 92       	push	r1
     e82:	0f 92       	push	r0
     e84:	0f b6       	in	r0, 0x3f	; 63
     e86:	0f 92       	push	r0
     e88:	11 24       	eor	r1, r1
     e8a:	0f 93       	push	r16
     e8c:	1f 93       	push	r17
     e8e:	2f 93       	push	r18
     e90:	3f 93       	push	r19
     e92:	4f 93       	push	r20
     e94:	5f 93       	push	r21
     e96:	6f 93       	push	r22
     e98:	7f 93       	push	r23
     e9a:	8f 93       	push	r24
     e9c:	9f 93       	push	r25
     e9e:	af 93       	push	r26
     ea0:	bf 93       	push	r27
     ea2:	ef 93       	push	r30
     ea4:	ff 93       	push	r31
     ea6:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
     eaa:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
     eae:	ac 01       	movw	r20, r24
     eb0:	09 2e       	mov	r0, r25
     eb2:	00 0c       	add	r0, r0
     eb4:	66 0b       	sbc	r22, r22
     eb6:	77 0b       	sbc	r23, r23
     eb8:	9a 01       	movw	r18, r20
     eba:	11 27       	eor	r17, r17
     ebc:	00 27       	eor	r16, r16
     ebe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ec2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ec6:	60 e0       	ldi	r22, 0x00	; 0
     ec8:	70 e0       	ldi	r23, 0x00	; 0
     eca:	40 2b       	or	r20, r16
     ecc:	51 2b       	or	r21, r17
     ece:	62 2b       	or	r22, r18
     ed0:	73 2b       	or	r23, r19
     ed2:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     ed6:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     eda:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     ede:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     ee2:	b0 9b       	sbis	0x16, 0	; 22
     ee4:	1a c0       	rjmp	.+52     	; 0xf1a <__vector_14+0x9a>
     ee6:	01 96       	adiw	r24, 0x01	; 1
     ee8:	09 2e       	mov	r0, r25
     eea:	00 0c       	add	r0, r0
     eec:	aa 0b       	sbc	r26, r26
     eee:	bb 0b       	sbc	r27, r27
     ef0:	bc 01       	movw	r22, r24
     ef2:	55 27       	eor	r21, r21
     ef4:	44 27       	eor	r20, r20
     ef6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     efa:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     efe:	a0 e0       	ldi	r26, 0x00	; 0
     f00:	b0 e0       	ldi	r27, 0x00	; 0
     f02:	84 2b       	or	r24, r20
     f04:	95 2b       	or	r25, r21
     f06:	a6 2b       	or	r26, r22
     f08:	b7 2b       	or	r27, r23
     f0a:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     f0e:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     f12:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     f16:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     f1a:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x12>
     f1e:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x13>
     f22:	30 97       	sbiw	r30, 0x00	; 0
     f24:	39 f0       	breq	.+14     	; 0xf34 <__vector_14+0xb4>
     f26:	69 e0       	ldi	r22, 0x09	; 9
     f28:	70 e0       	ldi	r23, 0x00	; 0
     f2a:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x12>
     f2e:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x13>
     f32:	09 95       	icall
     f34:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
     f38:	ff 91       	pop	r31
     f3a:	ef 91       	pop	r30
     f3c:	bf 91       	pop	r27
     f3e:	af 91       	pop	r26
     f40:	9f 91       	pop	r25
     f42:	8f 91       	pop	r24
     f44:	7f 91       	pop	r23
     f46:	6f 91       	pop	r22
     f48:	5f 91       	pop	r21
     f4a:	4f 91       	pop	r20
     f4c:	3f 91       	pop	r19
     f4e:	2f 91       	pop	r18
     f50:	1f 91       	pop	r17
     f52:	0f 91       	pop	r16
     f54:	0f 90       	pop	r0
     f56:	0f be       	out	0x3f, r0	; 63
     f58:	0f 90       	pop	r0
     f5a:	1f 90       	pop	r1
     f5c:	18 95       	reti

00000f5e <__vector_15>:
     f5e:	1f 92       	push	r1
     f60:	0f 92       	push	r0
     f62:	0f b6       	in	r0, 0x3f	; 63
     f64:	0f 92       	push	r0
     f66:	11 24       	eor	r1, r1
     f68:	0f 93       	push	r16
     f6a:	1f 93       	push	r17
     f6c:	2f 93       	push	r18
     f6e:	3f 93       	push	r19
     f70:	4f 93       	push	r20
     f72:	5f 93       	push	r21
     f74:	6f 93       	push	r22
     f76:	7f 93       	push	r23
     f78:	8f 93       	push	r24
     f7a:	9f 93       	push	r25
     f7c:	af 93       	push	r26
     f7e:	bf 93       	push	r27
     f80:	ef 93       	push	r30
     f82:	ff 93       	push	r31
     f84:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
     f88:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
     f8c:	ac 01       	movw	r20, r24
     f8e:	09 2e       	mov	r0, r25
     f90:	00 0c       	add	r0, r0
     f92:	66 0b       	sbc	r22, r22
     f94:	77 0b       	sbc	r23, r23
     f96:	9a 01       	movw	r18, r20
     f98:	11 27       	eor	r17, r17
     f9a:	00 27       	eor	r16, r16
     f9c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fa0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fa4:	60 e0       	ldi	r22, 0x00	; 0
     fa6:	70 e0       	ldi	r23, 0x00	; 0
     fa8:	40 2b       	or	r20, r16
     faa:	51 2b       	or	r21, r17
     fac:	62 2b       	or	r22, r18
     fae:	73 2b       	or	r23, r19
     fb0:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
     fb4:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
     fb8:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
     fbc:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
     fc0:	b0 9b       	sbis	0x16, 0	; 22
     fc2:	1a c0       	rjmp	.+52     	; 0xff8 <__vector_15+0x9a>
     fc4:	01 96       	adiw	r24, 0x01	; 1
     fc6:	09 2e       	mov	r0, r25
     fc8:	00 0c       	add	r0, r0
     fca:	aa 0b       	sbc	r26, r26
     fcc:	bb 0b       	sbc	r27, r27
     fce:	bc 01       	movw	r22, r24
     fd0:	55 27       	eor	r21, r21
     fd2:	44 27       	eor	r20, r20
     fd4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fd8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fdc:	a0 e0       	ldi	r26, 0x00	; 0
     fde:	b0 e0       	ldi	r27, 0x00	; 0
     fe0:	84 2b       	or	r24, r20
     fe2:	95 2b       	or	r25, r21
     fe4:	a6 2b       	or	r26, r22
     fe6:	b7 2b       	or	r27, r23
     fe8:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
     fec:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
     ff0:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
     ff4:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
     ff8:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x14>
     ffc:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x15>
    1000:	30 97       	sbiw	r30, 0x00	; 0
    1002:	39 f0       	breq	.+14     	; 0x1012 <__vector_15+0xb4>
    1004:	6a e0       	ldi	r22, 0x0A	; 10
    1006:	70 e0       	ldi	r23, 0x00	; 0
    1008:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x14>
    100c:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x15>
    1010:	09 95       	icall
    1012:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
    1016:	ff 91       	pop	r31
    1018:	ef 91       	pop	r30
    101a:	bf 91       	pop	r27
    101c:	af 91       	pop	r26
    101e:	9f 91       	pop	r25
    1020:	8f 91       	pop	r24
    1022:	7f 91       	pop	r23
    1024:	6f 91       	pop	r22
    1026:	5f 91       	pop	r21
    1028:	4f 91       	pop	r20
    102a:	3f 91       	pop	r19
    102c:	2f 91       	pop	r18
    102e:	1f 91       	pop	r17
    1030:	0f 91       	pop	r16
    1032:	0f 90       	pop	r0
    1034:	0f be       	out	0x3f, r0	; 63
    1036:	0f 90       	pop	r0
    1038:	1f 90       	pop	r1
    103a:	18 95       	reti

0000103c <__vector_16>:
    103c:	1f 92       	push	r1
    103e:	0f 92       	push	r0
    1040:	0f b6       	in	r0, 0x3f	; 63
    1042:	0f 92       	push	r0
    1044:	11 24       	eor	r1, r1
    1046:	0f 93       	push	r16
    1048:	1f 93       	push	r17
    104a:	2f 93       	push	r18
    104c:	3f 93       	push	r19
    104e:	4f 93       	push	r20
    1050:	5f 93       	push	r21
    1052:	6f 93       	push	r22
    1054:	7f 93       	push	r23
    1056:	8f 93       	push	r24
    1058:	9f 93       	push	r25
    105a:	af 93       	push	r26
    105c:	bf 93       	push	r27
    105e:	ef 93       	push	r30
    1060:	ff 93       	push	r31
    1062:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
    1066:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
    106a:	ac 01       	movw	r20, r24
    106c:	09 2e       	mov	r0, r25
    106e:	00 0c       	add	r0, r0
    1070:	66 0b       	sbc	r22, r22
    1072:	77 0b       	sbc	r23, r23
    1074:	9a 01       	movw	r18, r20
    1076:	11 27       	eor	r17, r17
    1078:	00 27       	eor	r16, r16
    107a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    107e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1082:	60 e0       	ldi	r22, 0x00	; 0
    1084:	70 e0       	ldi	r23, 0x00	; 0
    1086:	40 2b       	or	r20, r16
    1088:	51 2b       	or	r21, r17
    108a:	62 2b       	or	r22, r18
    108c:	73 2b       	or	r23, r19
    108e:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1092:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1096:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    109a:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    109e:	b0 9b       	sbis	0x16, 0	; 22
    10a0:	1a c0       	rjmp	.+52     	; 0x10d6 <__vector_16+0x9a>
    10a2:	01 96       	adiw	r24, 0x01	; 1
    10a4:	09 2e       	mov	r0, r25
    10a6:	00 0c       	add	r0, r0
    10a8:	aa 0b       	sbc	r26, r26
    10aa:	bb 0b       	sbc	r27, r27
    10ac:	bc 01       	movw	r22, r24
    10ae:	55 27       	eor	r21, r21
    10b0:	44 27       	eor	r20, r20
    10b2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10b6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10ba:	a0 e0       	ldi	r26, 0x00	; 0
    10bc:	b0 e0       	ldi	r27, 0x00	; 0
    10be:	84 2b       	or	r24, r20
    10c0:	95 2b       	or	r25, r21
    10c2:	a6 2b       	or	r26, r22
    10c4:	b7 2b       	or	r27, r23
    10c6:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    10ca:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    10ce:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    10d2:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    10d6:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x16>
    10da:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x17>
    10de:	30 97       	sbiw	r30, 0x00	; 0
    10e0:	39 f0       	breq	.+14     	; 0x10f0 <__vector_16+0xb4>
    10e2:	6b e0       	ldi	r22, 0x0B	; 11
    10e4:	70 e0       	ldi	r23, 0x00	; 0
    10e6:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x16>
    10ea:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x17>
    10ee:	09 95       	icall
    10f0:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
    10f4:	ff 91       	pop	r31
    10f6:	ef 91       	pop	r30
    10f8:	bf 91       	pop	r27
    10fa:	af 91       	pop	r26
    10fc:	9f 91       	pop	r25
    10fe:	8f 91       	pop	r24
    1100:	7f 91       	pop	r23
    1102:	6f 91       	pop	r22
    1104:	5f 91       	pop	r21
    1106:	4f 91       	pop	r20
    1108:	3f 91       	pop	r19
    110a:	2f 91       	pop	r18
    110c:	1f 91       	pop	r17
    110e:	0f 91       	pop	r16
    1110:	0f 90       	pop	r0
    1112:	0f be       	out	0x3f, r0	; 63
    1114:	0f 90       	pop	r0
    1116:	1f 90       	pop	r1
    1118:	18 95       	reti

0000111a <__vector_17>:
    111a:	1f 92       	push	r1
    111c:	0f 92       	push	r0
    111e:	0f b6       	in	r0, 0x3f	; 63
    1120:	0f 92       	push	r0
    1122:	11 24       	eor	r1, r1
    1124:	0f 93       	push	r16
    1126:	1f 93       	push	r17
    1128:	2f 93       	push	r18
    112a:	3f 93       	push	r19
    112c:	4f 93       	push	r20
    112e:	5f 93       	push	r21
    1130:	6f 93       	push	r22
    1132:	7f 93       	push	r23
    1134:	8f 93       	push	r24
    1136:	9f 93       	push	r25
    1138:	af 93       	push	r26
    113a:	bf 93       	push	r27
    113c:	ef 93       	push	r30
    113e:	ff 93       	push	r31
    1140:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
    1144:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
    1148:	ac 01       	movw	r20, r24
    114a:	09 2e       	mov	r0, r25
    114c:	00 0c       	add	r0, r0
    114e:	66 0b       	sbc	r22, r22
    1150:	77 0b       	sbc	r23, r23
    1152:	9a 01       	movw	r18, r20
    1154:	11 27       	eor	r17, r17
    1156:	00 27       	eor	r16, r16
    1158:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    115c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1160:	60 e0       	ldi	r22, 0x00	; 0
    1162:	70 e0       	ldi	r23, 0x00	; 0
    1164:	40 2b       	or	r20, r16
    1166:	51 2b       	or	r21, r17
    1168:	62 2b       	or	r22, r18
    116a:	73 2b       	or	r23, r19
    116c:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    1170:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1174:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1178:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    117c:	b0 9b       	sbis	0x16, 0	; 22
    117e:	1a c0       	rjmp	.+52     	; 0x11b4 <__vector_17+0x9a>
    1180:	01 96       	adiw	r24, 0x01	; 1
    1182:	09 2e       	mov	r0, r25
    1184:	00 0c       	add	r0, r0
    1186:	aa 0b       	sbc	r26, r26
    1188:	bb 0b       	sbc	r27, r27
    118a:	bc 01       	movw	r22, r24
    118c:	55 27       	eor	r21, r21
    118e:	44 27       	eor	r20, r20
    1190:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1194:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1198:	a0 e0       	ldi	r26, 0x00	; 0
    119a:	b0 e0       	ldi	r27, 0x00	; 0
    119c:	84 2b       	or	r24, r20
    119e:	95 2b       	or	r25, r21
    11a0:	a6 2b       	or	r26, r22
    11a2:	b7 2b       	or	r27, r23
    11a4:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    11a8:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    11ac:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    11b0:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    11b4:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x18>
    11b8:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x19>
    11bc:	30 97       	sbiw	r30, 0x00	; 0
    11be:	39 f0       	breq	.+14     	; 0x11ce <__vector_17+0xb4>
    11c0:	6c e0       	ldi	r22, 0x0C	; 12
    11c2:	70 e0       	ldi	r23, 0x00	; 0
    11c4:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x18>
    11c8:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x19>
    11cc:	09 95       	icall
    11ce:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
    11d2:	ff 91       	pop	r31
    11d4:	ef 91       	pop	r30
    11d6:	bf 91       	pop	r27
    11d8:	af 91       	pop	r26
    11da:	9f 91       	pop	r25
    11dc:	8f 91       	pop	r24
    11de:	7f 91       	pop	r23
    11e0:	6f 91       	pop	r22
    11e2:	5f 91       	pop	r21
    11e4:	4f 91       	pop	r20
    11e6:	3f 91       	pop	r19
    11e8:	2f 91       	pop	r18
    11ea:	1f 91       	pop	r17
    11ec:	0f 91       	pop	r16
    11ee:	0f 90       	pop	r0
    11f0:	0f be       	out	0x3f, r0	; 63
    11f2:	0f 90       	pop	r0
    11f4:	1f 90       	pop	r1
    11f6:	18 95       	reti

000011f8 <__vector_18>:
    11f8:	1f 92       	push	r1
    11fa:	0f 92       	push	r0
    11fc:	0f b6       	in	r0, 0x3f	; 63
    11fe:	0f 92       	push	r0
    1200:	11 24       	eor	r1, r1
    1202:	0f 93       	push	r16
    1204:	1f 93       	push	r17
    1206:	2f 93       	push	r18
    1208:	3f 93       	push	r19
    120a:	4f 93       	push	r20
    120c:	5f 93       	push	r21
    120e:	6f 93       	push	r22
    1210:	7f 93       	push	r23
    1212:	8f 93       	push	r24
    1214:	9f 93       	push	r25
    1216:	af 93       	push	r26
    1218:	bf 93       	push	r27
    121a:	ef 93       	push	r30
    121c:	ff 93       	push	r31
    121e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
    1222:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
    1226:	ac 01       	movw	r20, r24
    1228:	09 2e       	mov	r0, r25
    122a:	00 0c       	add	r0, r0
    122c:	66 0b       	sbc	r22, r22
    122e:	77 0b       	sbc	r23, r23
    1230:	9a 01       	movw	r18, r20
    1232:	11 27       	eor	r17, r17
    1234:	00 27       	eor	r16, r16
    1236:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    123a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    123e:	60 e0       	ldi	r22, 0x00	; 0
    1240:	70 e0       	ldi	r23, 0x00	; 0
    1242:	40 2b       	or	r20, r16
    1244:	51 2b       	or	r21, r17
    1246:	62 2b       	or	r22, r18
    1248:	73 2b       	or	r23, r19
    124a:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    124e:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1252:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1256:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    125a:	b0 9b       	sbis	0x16, 0	; 22
    125c:	1a c0       	rjmp	.+52     	; 0x1292 <__vector_18+0x9a>
    125e:	01 96       	adiw	r24, 0x01	; 1
    1260:	09 2e       	mov	r0, r25
    1262:	00 0c       	add	r0, r0
    1264:	aa 0b       	sbc	r26, r26
    1266:	bb 0b       	sbc	r27, r27
    1268:	bc 01       	movw	r22, r24
    126a:	55 27       	eor	r21, r21
    126c:	44 27       	eor	r20, r20
    126e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1272:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1276:	a0 e0       	ldi	r26, 0x00	; 0
    1278:	b0 e0       	ldi	r27, 0x00	; 0
    127a:	84 2b       	or	r24, r20
    127c:	95 2b       	or	r25, r21
    127e:	a6 2b       	or	r26, r22
    1280:	b7 2b       	or	r27, r23
    1282:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1286:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    128a:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    128e:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1292:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x1a>
    1296:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x1b>
    129a:	30 97       	sbiw	r30, 0x00	; 0
    129c:	39 f0       	breq	.+14     	; 0x12ac <__vector_18+0xb4>
    129e:	6d e0       	ldi	r22, 0x0D	; 13
    12a0:	70 e0       	ldi	r23, 0x00	; 0
    12a2:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x1a>
    12a6:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x1b>
    12aa:	09 95       	icall
    12ac:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
    12b0:	ff 91       	pop	r31
    12b2:	ef 91       	pop	r30
    12b4:	bf 91       	pop	r27
    12b6:	af 91       	pop	r26
    12b8:	9f 91       	pop	r25
    12ba:	8f 91       	pop	r24
    12bc:	7f 91       	pop	r23
    12be:	6f 91       	pop	r22
    12c0:	5f 91       	pop	r21
    12c2:	4f 91       	pop	r20
    12c4:	3f 91       	pop	r19
    12c6:	2f 91       	pop	r18
    12c8:	1f 91       	pop	r17
    12ca:	0f 91       	pop	r16
    12cc:	0f 90       	pop	r0
    12ce:	0f be       	out	0x3f, r0	; 63
    12d0:	0f 90       	pop	r0
    12d2:	1f 90       	pop	r1
    12d4:	18 95       	reti

000012d6 <__vector_19>:
    12d6:	1f 92       	push	r1
    12d8:	0f 92       	push	r0
    12da:	0f b6       	in	r0, 0x3f	; 63
    12dc:	0f 92       	push	r0
    12de:	11 24       	eor	r1, r1
    12e0:	0f 93       	push	r16
    12e2:	1f 93       	push	r17
    12e4:	2f 93       	push	r18
    12e6:	3f 93       	push	r19
    12e8:	4f 93       	push	r20
    12ea:	5f 93       	push	r21
    12ec:	6f 93       	push	r22
    12ee:	7f 93       	push	r23
    12f0:	8f 93       	push	r24
    12f2:	9f 93       	push	r25
    12f4:	af 93       	push	r26
    12f6:	bf 93       	push	r27
    12f8:	ef 93       	push	r30
    12fa:	ff 93       	push	r31
    12fc:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
    1300:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
    1304:	ac 01       	movw	r20, r24
    1306:	09 2e       	mov	r0, r25
    1308:	00 0c       	add	r0, r0
    130a:	66 0b       	sbc	r22, r22
    130c:	77 0b       	sbc	r23, r23
    130e:	9a 01       	movw	r18, r20
    1310:	11 27       	eor	r17, r17
    1312:	00 27       	eor	r16, r16
    1314:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1318:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    131c:	60 e0       	ldi	r22, 0x00	; 0
    131e:	70 e0       	ldi	r23, 0x00	; 0
    1320:	40 2b       	or	r20, r16
    1322:	51 2b       	or	r21, r17
    1324:	62 2b       	or	r22, r18
    1326:	73 2b       	or	r23, r19
    1328:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    132c:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    1330:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1334:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1338:	b0 9b       	sbis	0x16, 0	; 22
    133a:	1a c0       	rjmp	.+52     	; 0x1370 <__vector_19+0x9a>
    133c:	01 96       	adiw	r24, 0x01	; 1
    133e:	09 2e       	mov	r0, r25
    1340:	00 0c       	add	r0, r0
    1342:	aa 0b       	sbc	r26, r26
    1344:	bb 0b       	sbc	r27, r27
    1346:	bc 01       	movw	r22, r24
    1348:	55 27       	eor	r21, r21
    134a:	44 27       	eor	r20, r20
    134c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1350:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1354:	a0 e0       	ldi	r26, 0x00	; 0
    1356:	b0 e0       	ldi	r27, 0x00	; 0
    1358:	84 2b       	or	r24, r20
    135a:	95 2b       	or	r25, r21
    135c:	a6 2b       	or	r26, r22
    135e:	b7 2b       	or	r27, r23
    1360:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1364:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1368:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    136c:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    1370:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x1c>
    1374:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x1d>
    1378:	30 97       	sbiw	r30, 0x00	; 0
    137a:	39 f0       	breq	.+14     	; 0x138a <__vector_19+0xb4>
    137c:	6e e0       	ldi	r22, 0x0E	; 14
    137e:	70 e0       	ldi	r23, 0x00	; 0
    1380:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x1c>
    1384:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x1d>
    1388:	09 95       	icall
    138a:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
    138e:	ff 91       	pop	r31
    1390:	ef 91       	pop	r30
    1392:	bf 91       	pop	r27
    1394:	af 91       	pop	r26
    1396:	9f 91       	pop	r25
    1398:	8f 91       	pop	r24
    139a:	7f 91       	pop	r23
    139c:	6f 91       	pop	r22
    139e:	5f 91       	pop	r21
    13a0:	4f 91       	pop	r20
    13a2:	3f 91       	pop	r19
    13a4:	2f 91       	pop	r18
    13a6:	1f 91       	pop	r17
    13a8:	0f 91       	pop	r16
    13aa:	0f 90       	pop	r0
    13ac:	0f be       	out	0x3f, r0	; 63
    13ae:	0f 90       	pop	r0
    13b0:	1f 90       	pop	r1
    13b2:	18 95       	reti

000013b4 <__vector_20>:
    13b4:	1f 92       	push	r1
    13b6:	0f 92       	push	r0
    13b8:	0f b6       	in	r0, 0x3f	; 63
    13ba:	0f 92       	push	r0
    13bc:	11 24       	eor	r1, r1
    13be:	0f 93       	push	r16
    13c0:	1f 93       	push	r17
    13c2:	2f 93       	push	r18
    13c4:	3f 93       	push	r19
    13c6:	4f 93       	push	r20
    13c8:	5f 93       	push	r21
    13ca:	6f 93       	push	r22
    13cc:	7f 93       	push	r23
    13ce:	8f 93       	push	r24
    13d0:	9f 93       	push	r25
    13d2:	af 93       	push	r26
    13d4:	bf 93       	push	r27
    13d6:	ef 93       	push	r30
    13d8:	ff 93       	push	r31
    13da:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
    13de:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
    13e2:	ac 01       	movw	r20, r24
    13e4:	09 2e       	mov	r0, r25
    13e6:	00 0c       	add	r0, r0
    13e8:	66 0b       	sbc	r22, r22
    13ea:	77 0b       	sbc	r23, r23
    13ec:	9a 01       	movw	r18, r20
    13ee:	11 27       	eor	r17, r17
    13f0:	00 27       	eor	r16, r16
    13f2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13f6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13fa:	60 e0       	ldi	r22, 0x00	; 0
    13fc:	70 e0       	ldi	r23, 0x00	; 0
    13fe:	40 2b       	or	r20, r16
    1400:	51 2b       	or	r21, r17
    1402:	62 2b       	or	r22, r18
    1404:	73 2b       	or	r23, r19
    1406:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    140a:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    140e:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    1412:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    1416:	b0 9b       	sbis	0x16, 0	; 22
    1418:	1a c0       	rjmp	.+52     	; 0x144e <__vector_20+0x9a>
    141a:	01 96       	adiw	r24, 0x01	; 1
    141c:	09 2e       	mov	r0, r25
    141e:	00 0c       	add	r0, r0
    1420:	aa 0b       	sbc	r26, r26
    1422:	bb 0b       	sbc	r27, r27
    1424:	bc 01       	movw	r22, r24
    1426:	55 27       	eor	r21, r21
    1428:	44 27       	eor	r20, r20
    142a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    142e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1432:	a0 e0       	ldi	r26, 0x00	; 0
    1434:	b0 e0       	ldi	r27, 0x00	; 0
    1436:	84 2b       	or	r24, r20
    1438:	95 2b       	or	r25, r21
    143a:	a6 2b       	or	r26, r22
    143c:	b7 2b       	or	r27, r23
    143e:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1442:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1446:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    144a:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    144e:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x1e>
    1452:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x1f>
    1456:	30 97       	sbiw	r30, 0x00	; 0
    1458:	39 f0       	breq	.+14     	; 0x1468 <__vector_20+0xb4>
    145a:	6f e0       	ldi	r22, 0x0F	; 15
    145c:	70 e0       	ldi	r23, 0x00	; 0
    145e:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x1e>
    1462:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x1f>
    1466:	09 95       	icall
    1468:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
    146c:	ff 91       	pop	r31
    146e:	ef 91       	pop	r30
    1470:	bf 91       	pop	r27
    1472:	af 91       	pop	r26
    1474:	9f 91       	pop	r25
    1476:	8f 91       	pop	r24
    1478:	7f 91       	pop	r23
    147a:	6f 91       	pop	r22
    147c:	5f 91       	pop	r21
    147e:	4f 91       	pop	r20
    1480:	3f 91       	pop	r19
    1482:	2f 91       	pop	r18
    1484:	1f 91       	pop	r17
    1486:	0f 91       	pop	r16
    1488:	0f 90       	pop	r0
    148a:	0f be       	out	0x3f, r0	; 63
    148c:	0f 90       	pop	r0
    148e:	1f 90       	pop	r1
    1490:	18 95       	reti

00001492 <__vector_21>:
    1492:	1f 92       	push	r1
    1494:	0f 92       	push	r0
    1496:	0f b6       	in	r0, 0x3f	; 63
    1498:	0f 92       	push	r0
    149a:	11 24       	eor	r1, r1
    149c:	0f 93       	push	r16
    149e:	1f 93       	push	r17
    14a0:	2f 93       	push	r18
    14a2:	3f 93       	push	r19
    14a4:	4f 93       	push	r20
    14a6:	5f 93       	push	r21
    14a8:	6f 93       	push	r22
    14aa:	7f 93       	push	r23
    14ac:	8f 93       	push	r24
    14ae:	9f 93       	push	r25
    14b0:	af 93       	push	r26
    14b2:	bf 93       	push	r27
    14b4:	ef 93       	push	r30
    14b6:	ff 93       	push	r31
    14b8:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
    14bc:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
    14c0:	ac 01       	movw	r20, r24
    14c2:	09 2e       	mov	r0, r25
    14c4:	00 0c       	add	r0, r0
    14c6:	66 0b       	sbc	r22, r22
    14c8:	77 0b       	sbc	r23, r23
    14ca:	9a 01       	movw	r18, r20
    14cc:	11 27       	eor	r17, r17
    14ce:	00 27       	eor	r16, r16
    14d0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14d4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14d8:	60 e0       	ldi	r22, 0x00	; 0
    14da:	70 e0       	ldi	r23, 0x00	; 0
    14dc:	40 2b       	or	r20, r16
    14de:	51 2b       	or	r21, r17
    14e0:	62 2b       	or	r22, r18
    14e2:	73 2b       	or	r23, r19
    14e4:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    14e8:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    14ec:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    14f0:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    14f4:	b0 9b       	sbis	0x16, 0	; 22
    14f6:	1a c0       	rjmp	.+52     	; 0x152c <__vector_21+0x9a>
    14f8:	01 96       	adiw	r24, 0x01	; 1
    14fa:	09 2e       	mov	r0, r25
    14fc:	00 0c       	add	r0, r0
    14fe:	aa 0b       	sbc	r26, r26
    1500:	bb 0b       	sbc	r27, r27
    1502:	bc 01       	movw	r22, r24
    1504:	55 27       	eor	r21, r21
    1506:	44 27       	eor	r20, r20
    1508:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    150c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1510:	a0 e0       	ldi	r26, 0x00	; 0
    1512:	b0 e0       	ldi	r27, 0x00	; 0
    1514:	84 2b       	or	r24, r20
    1516:	95 2b       	or	r25, r21
    1518:	a6 2b       	or	r26, r22
    151a:	b7 2b       	or	r27, r23
    151c:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    1520:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1524:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1528:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    152c:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x20>
    1530:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x21>
    1534:	30 97       	sbiw	r30, 0x00	; 0
    1536:	39 f0       	breq	.+14     	; 0x1546 <__vector_21+0xb4>
    1538:	60 e1       	ldi	r22, 0x10	; 16
    153a:	70 e0       	ldi	r23, 0x00	; 0
    153c:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x20>
    1540:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x21>
    1544:	09 95       	icall
    1546:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
    154a:	ff 91       	pop	r31
    154c:	ef 91       	pop	r30
    154e:	bf 91       	pop	r27
    1550:	af 91       	pop	r26
    1552:	9f 91       	pop	r25
    1554:	8f 91       	pop	r24
    1556:	7f 91       	pop	r23
    1558:	6f 91       	pop	r22
    155a:	5f 91       	pop	r21
    155c:	4f 91       	pop	r20
    155e:	3f 91       	pop	r19
    1560:	2f 91       	pop	r18
    1562:	1f 91       	pop	r17
    1564:	0f 91       	pop	r16
    1566:	0f 90       	pop	r0
    1568:	0f be       	out	0x3f, r0	; 63
    156a:	0f 90       	pop	r0
    156c:	1f 90       	pop	r1
    156e:	18 95       	reti

00001570 <__vector_22>:
    1570:	1f 92       	push	r1
    1572:	0f 92       	push	r0
    1574:	0f b6       	in	r0, 0x3f	; 63
    1576:	0f 92       	push	r0
    1578:	11 24       	eor	r1, r1
    157a:	0f 93       	push	r16
    157c:	1f 93       	push	r17
    157e:	2f 93       	push	r18
    1580:	3f 93       	push	r19
    1582:	4f 93       	push	r20
    1584:	5f 93       	push	r21
    1586:	6f 93       	push	r22
    1588:	7f 93       	push	r23
    158a:	8f 93       	push	r24
    158c:	9f 93       	push	r25
    158e:	af 93       	push	r26
    1590:	bf 93       	push	r27
    1592:	ef 93       	push	r30
    1594:	ff 93       	push	r31
    1596:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
    159a:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
    159e:	ac 01       	movw	r20, r24
    15a0:	09 2e       	mov	r0, r25
    15a2:	00 0c       	add	r0, r0
    15a4:	66 0b       	sbc	r22, r22
    15a6:	77 0b       	sbc	r23, r23
    15a8:	9a 01       	movw	r18, r20
    15aa:	11 27       	eor	r17, r17
    15ac:	00 27       	eor	r16, r16
    15ae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15b2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15b6:	60 e0       	ldi	r22, 0x00	; 0
    15b8:	70 e0       	ldi	r23, 0x00	; 0
    15ba:	40 2b       	or	r20, r16
    15bc:	51 2b       	or	r21, r17
    15be:	62 2b       	or	r22, r18
    15c0:	73 2b       	or	r23, r19
    15c2:	40 93 3a 01 	sts	0x013A, r20	; 0x80013a <timestamp>
    15c6:	50 93 3b 01 	sts	0x013B, r21	; 0x80013b <timestamp+0x1>
    15ca:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <timestamp+0x2>
    15ce:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <timestamp+0x3>
    15d2:	b0 9b       	sbis	0x16, 0	; 22
    15d4:	1a c0       	rjmp	.+52     	; 0x160a <__vector_22+0x9a>
    15d6:	01 96       	adiw	r24, 0x01	; 1
    15d8:	09 2e       	mov	r0, r25
    15da:	00 0c       	add	r0, r0
    15dc:	aa 0b       	sbc	r26, r26
    15de:	bb 0b       	sbc	r27, r27
    15e0:	bc 01       	movw	r22, r24
    15e2:	55 27       	eor	r21, r21
    15e4:	44 27       	eor	r20, r20
    15e6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15ea:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15ee:	a0 e0       	ldi	r26, 0x00	; 0
    15f0:	b0 e0       	ldi	r27, 0x00	; 0
    15f2:	84 2b       	or	r24, r20
    15f4:	95 2b       	or	r25, r21
    15f6:	a6 2b       	or	r26, r22
    15f8:	b7 2b       	or	r27, r23
    15fa:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <timestamp>
    15fe:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <timestamp+0x1>
    1602:	a0 93 3c 01 	sts	0x013C, r26	; 0x80013c <timestamp+0x2>
    1606:	b0 93 3d 01 	sts	0x013D, r27	; 0x80013d <timestamp+0x3>
    160a:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x22>
    160e:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x23>
    1612:	30 97       	sbiw	r30, 0x00	; 0
    1614:	39 f0       	breq	.+14     	; 0x1624 <__vector_22+0xb4>
    1616:	61 e1       	ldi	r22, 0x11	; 17
    1618:	70 e0       	ldi	r23, 0x00	; 0
    161a:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x22>
    161e:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x23>
    1622:	09 95       	icall
    1624:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
    1628:	ff 91       	pop	r31
    162a:	ef 91       	pop	r30
    162c:	bf 91       	pop	r27
    162e:	af 91       	pop	r26
    1630:	9f 91       	pop	r25
    1632:	8f 91       	pop	r24
    1634:	7f 91       	pop	r23
    1636:	6f 91       	pop	r22
    1638:	5f 91       	pop	r21
    163a:	4f 91       	pop	r20
    163c:	3f 91       	pop	r19
    163e:	2f 91       	pop	r18
    1640:	1f 91       	pop	r17
    1642:	0f 91       	pop	r16
    1644:	0f 90       	pop	r0
    1646:	0f be       	out	0x3f, r0	; 63
    1648:	0f 90       	pop	r0
    164a:	1f 90       	pop	r1
    164c:	18 95       	reti

0000164e <idle>:
    164e:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
    1652:	78 94       	sei
    1654:	81 e0       	ldi	r24, 0x01	; 1
    1656:	83 bf       	out	0x33, r24	; 51
    1658:	88 95       	sleep
    165a:	fc cf       	rjmp	.-8      	; 0x1654 <idle+0x6>

0000165c <__vector_9>:
    165c:	1f 92       	push	r1
    165e:	0f 92       	push	r0
    1660:	0f b6       	in	r0, 0x3f	; 63
    1662:	0f 92       	push	r0
    1664:	11 24       	eor	r1, r1
    1666:	2f 93       	push	r18
    1668:	3f 93       	push	r19
    166a:	4f 93       	push	r20
    166c:	5f 93       	push	r21
    166e:	6f 93       	push	r22
    1670:	7f 93       	push	r23
    1672:	8f 93       	push	r24
    1674:	9f 93       	push	r25
    1676:	ef 93       	push	r30
    1678:	ff 93       	push	r31
    167a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
    167e:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
    1682:	01 96       	adiw	r24, 0x01	; 1
    1684:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <overflows+0x1>
    1688:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <overflows>
    168c:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <timerQ>
    1690:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <timerQ+0x1>
    1694:	30 97       	sbiw	r30, 0x00	; 0
    1696:	01 f1       	breq	.+64     	; 0x16d8 <__vector_9+0x7c>
    1698:	42 81       	ldd	r20, Z+2	; 0x02
    169a:	53 81       	ldd	r21, Z+3	; 0x03
    169c:	64 81       	ldd	r22, Z+4	; 0x04
    169e:	75 81       	ldd	r23, Z+5	; 0x05
    16a0:	86 17       	cp	r24, r22
    16a2:	97 07       	cpc	r25, r23
    16a4:	c9 f4       	brne	.+50     	; 0x16d8 <__vector_9+0x7c>
    16a6:	ca 01       	movw	r24, r20
    16a8:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16ac:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16b0:	42 1b       	sub	r20, r18
    16b2:	53 0b       	sbc	r21, r19
    16b4:	41 30       	cpi	r20, 0x01	; 1
    16b6:	51 05       	cpc	r21, r1
    16b8:	29 f4       	brne	.+10     	; 0x16c4 <__vector_9+0x68>
    16ba:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16be:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16c2:	01 96       	adiw	r24, 0x01	; 1
    16c4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    16c8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    16cc:	ef e6       	ldi	r30, 0x6F	; 111
    16ce:	f0 e0       	ldi	r31, 0x00	; 0
    16d0:	80 81       	ld	r24, Z
    16d2:	82 60       	ori	r24, 0x02	; 2
    16d4:	80 83       	st	Z, r24
    16d6:	05 c0       	rjmp	.+10     	; 0x16e2 <__vector_9+0x86>
    16d8:	ef e6       	ldi	r30, 0x6F	; 111
    16da:	f0 e0       	ldi	r31, 0x00	; 0
    16dc:	80 81       	ld	r24, Z
    16de:	8d 7f       	andi	r24, 0xFD	; 253
    16e0:	80 83       	st	Z, r24
    16e2:	ff 91       	pop	r31
    16e4:	ef 91       	pop	r30
    16e6:	9f 91       	pop	r25
    16e8:	8f 91       	pop	r24
    16ea:	7f 91       	pop	r23
    16ec:	6f 91       	pop	r22
    16ee:	5f 91       	pop	r21
    16f0:	4f 91       	pop	r20
    16f2:	3f 91       	pop	r19
    16f4:	2f 91       	pop	r18
    16f6:	0f 90       	pop	r0
    16f8:	0f be       	out	0x3f, r0	; 63
    16fa:	0f 90       	pop	r0
    16fc:	1f 90       	pop	r1
    16fe:	18 95       	reti

00001700 <__vector_7>:
    1700:	1f 92       	push	r1
    1702:	0f 92       	push	r0
    1704:	0f b6       	in	r0, 0x3f	; 63
    1706:	0f 92       	push	r0
    1708:	11 24       	eor	r1, r1
    170a:	cf 92       	push	r12
    170c:	df 92       	push	r13
    170e:	ef 92       	push	r14
    1710:	ff 92       	push	r15
    1712:	2f 93       	push	r18
    1714:	3f 93       	push	r19
    1716:	4f 93       	push	r20
    1718:	5f 93       	push	r21
    171a:	6f 93       	push	r22
    171c:	7f 93       	push	r23
    171e:	8f 93       	push	r24
    1720:	9f 93       	push	r25
    1722:	af 93       	push	r26
    1724:	bf 93       	push	r27
    1726:	ef 93       	push	r30
    1728:	ff 93       	push	r31
    172a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <overflows>
    172e:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <overflows+0x1>
    1732:	6c 01       	movw	r12, r24
    1734:	09 2e       	mov	r0, r25
    1736:	00 0c       	add	r0, r0
    1738:	ee 08       	sbc	r14, r14
    173a:	ff 08       	sbc	r15, r15
    173c:	76 01       	movw	r14, r12
    173e:	dd 24       	eor	r13, r13
    1740:	cc 24       	eor	r12, r12
    1742:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1746:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    174a:	60 e0       	ldi	r22, 0x00	; 0
    174c:	70 e0       	ldi	r23, 0x00	; 0
    174e:	c4 2a       	or	r12, r20
    1750:	d5 2a       	or	r13, r21
    1752:	e6 2a       	or	r14, r22
    1754:	f7 2a       	or	r15, r23
    1756:	b0 9b       	sbis	0x16, 0	; 22
    1758:	1e c0       	rjmp	.+60     	; 0x1796 <__vector_7+0x96>
    175a:	6c 01       	movw	r12, r24
    175c:	2f ef       	ldi	r18, 0xFF	; 255
    175e:	c2 1a       	sub	r12, r18
    1760:	d2 0a       	sbc	r13, r18
    1762:	0d 2c       	mov	r0, r13
    1764:	00 0c       	add	r0, r0
    1766:	ee 08       	sbc	r14, r14
    1768:	ff 08       	sbc	r15, r15
    176a:	d6 01       	movw	r26, r12
    176c:	99 27       	eor	r25, r25
    176e:	88 27       	eor	r24, r24
    1770:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1774:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1778:	e1 2c       	mov	r14, r1
    177a:	f1 2c       	mov	r15, r1
    177c:	c8 2a       	or	r12, r24
    177e:	d9 2a       	or	r13, r25
    1780:	ea 2a       	or	r14, r26
    1782:	fb 2a       	or	r15, r27
    1784:	08 c0       	rjmp	.+16     	; 0x1796 <__vector_7+0x96>
    1786:	8e e3       	ldi	r24, 0x3E	; 62
    1788:	91 e0       	ldi	r25, 0x01	; 1
    178a:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <dequeue>
    178e:	60 e4       	ldi	r22, 0x40	; 64
    1790:	71 e0       	ldi	r23, 0x01	; 1
    1792:	0e 94 8e 02 	call	0x51c	; 0x51c <enqueueByDeadline>
    1796:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <timerQ>
    179a:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <timerQ+0x1>
    179e:	30 97       	sbiw	r30, 0x00	; 0
    17a0:	69 f0       	breq	.+26     	; 0x17bc <__vector_7+0xbc>
    17a2:	82 81       	ldd	r24, Z+2	; 0x02
    17a4:	93 81       	ldd	r25, Z+3	; 0x03
    17a6:	a4 81       	ldd	r26, Z+4	; 0x04
    17a8:	b5 81       	ldd	r27, Z+5	; 0x05
    17aa:	8c 19       	sub	r24, r12
    17ac:	9d 09       	sbc	r25, r13
    17ae:	ae 09       	sbc	r26, r14
    17b0:	bf 09       	sbc	r27, r15
    17b2:	18 16       	cp	r1, r24
    17b4:	19 06       	cpc	r1, r25
    17b6:	1a 06       	cpc	r1, r26
    17b8:	1b 06       	cpc	r1, r27
    17ba:	2c f7       	brge	.-54     	; 0x1786 <__vector_7+0x86>
    17bc:	30 97       	sbiw	r30, 0x00	; 0
    17be:	21 f1       	breq	.+72     	; 0x1808 <__vector_7+0x108>
    17c0:	82 81       	ldd	r24, Z+2	; 0x02
    17c2:	93 81       	ldd	r25, Z+3	; 0x03
    17c4:	a4 81       	ldd	r26, Z+4	; 0x04
    17c6:	b5 81       	ldd	r27, Z+5	; 0x05
    17c8:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <overflows>
    17cc:	30 91 39 01 	lds	r19, 0x0139	; 0x800139 <overflows+0x1>
    17d0:	2a 17       	cp	r18, r26
    17d2:	3b 07       	cpc	r19, r27
    17d4:	c9 f4       	brne	.+50     	; 0x1808 <__vector_7+0x108>
    17d6:	9c 01       	movw	r18, r24
    17d8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17dc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17e0:	84 1b       	sub	r24, r20
    17e2:	95 0b       	sbc	r25, r21
    17e4:	01 97       	sbiw	r24, 0x01	; 1
    17e6:	31 f4       	brne	.+12     	; 0x17f4 <__vector_7+0xf4>
    17e8:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17ec:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17f0:	2f 5f       	subi	r18, 0xFF	; 255
    17f2:	3f 4f       	sbci	r19, 0xFF	; 255
    17f4:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    17f8:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    17fc:	ef e6       	ldi	r30, 0x6F	; 111
    17fe:	f0 e0       	ldi	r31, 0x00	; 0
    1800:	80 81       	ld	r24, Z
    1802:	82 60       	ori	r24, 0x02	; 2
    1804:	80 83       	st	Z, r24
    1806:	05 c0       	rjmp	.+10     	; 0x1812 <__vector_7+0x112>
    1808:	ef e6       	ldi	r30, 0x6F	; 111
    180a:	f0 e0       	ldi	r31, 0x00	; 0
    180c:	80 81       	ld	r24, Z
    180e:	8d 7f       	andi	r24, 0xFD	; 253
    1810:	80 83       	st	Z, r24
    1812:	0e 94 25 03 	call	0x64a	; 0x64a <schedule>
    1816:	ff 91       	pop	r31
    1818:	ef 91       	pop	r30
    181a:	bf 91       	pop	r27
    181c:	af 91       	pop	r26
    181e:	9f 91       	pop	r25
    1820:	8f 91       	pop	r24
    1822:	7f 91       	pop	r23
    1824:	6f 91       	pop	r22
    1826:	5f 91       	pop	r21
    1828:	4f 91       	pop	r20
    182a:	3f 91       	pop	r19
    182c:	2f 91       	pop	r18
    182e:	ff 90       	pop	r15
    1830:	ef 90       	pop	r14
    1832:	df 90       	pop	r13
    1834:	cf 90       	pop	r12
    1836:	0f 90       	pop	r0
    1838:	0f be       	out	0x3f, r0	; 63
    183a:	0f 90       	pop	r0
    183c:	1f 90       	pop	r1
    183e:	18 95       	reti

00001840 <async>:
    1840:	3f 92       	push	r3
    1842:	4f 92       	push	r4
    1844:	5f 92       	push	r5
    1846:	6f 92       	push	r6
    1848:	7f 92       	push	r7
    184a:	8f 92       	push	r8
    184c:	9f 92       	push	r9
    184e:	af 92       	push	r10
    1850:	bf 92       	push	r11
    1852:	cf 92       	push	r12
    1854:	df 92       	push	r13
    1856:	ef 92       	push	r14
    1858:	ff 92       	push	r15
    185a:	0f 93       	push	r16
    185c:	1f 93       	push	r17
    185e:	cf 93       	push	r28
    1860:	df 93       	push	r29
    1862:	2b 01       	movw	r4, r22
    1864:	3c 01       	movw	r6, r24
    1866:	49 01       	movw	r8, r18
    1868:	5a 01       	movw	r10, r20
    186a:	8f b7       	in	r24, 0x3f	; 63
    186c:	80 78       	andi	r24, 0x80	; 128
    186e:	38 2e       	mov	r3, r24
    1870:	f8 94       	cli
    1872:	86 e0       	ldi	r24, 0x06	; 6
    1874:	91 e0       	ldi	r25, 0x01	; 1
    1876:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <dequeue>
    187a:	ec 01       	movw	r28, r24
    187c:	1b 87       	std	Y+11, r17	; 0x0b
    187e:	0a 87       	std	Y+10, r16	; 0x0a
    1880:	fd 86       	std	Y+13, r15	; 0x0d
    1882:	ec 86       	std	Y+12, r14	; 0x0c
    1884:	df 86       	std	Y+15, r13	; 0x0f
    1886:	ce 86       	std	Y+14, r12	; 0x0e
    1888:	33 20       	and	r3, r3
    188a:	61 f0       	breq	.+24     	; 0x18a4 <async+0x64>
    188c:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1890:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1894:	02 80       	ldd	r0, Z+2	; 0x02
    1896:	f3 81       	ldd	r31, Z+3	; 0x03
    1898:	e0 2d       	mov	r30, r0
    189a:	82 81       	ldd	r24, Z+2	; 0x02
    189c:	93 81       	ldd	r25, Z+3	; 0x03
    189e:	a4 81       	ldd	r26, Z+4	; 0x04
    18a0:	b5 81       	ldd	r27, Z+5	; 0x05
    18a2:	08 c0       	rjmp	.+16     	; 0x18b4 <async+0x74>
    18a4:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <timestamp>
    18a8:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <timestamp+0x1>
    18ac:	a0 91 3c 01 	lds	r26, 0x013C	; 0x80013c <timestamp+0x2>
    18b0:	b0 91 3d 01 	lds	r27, 0x013D	; 0x80013d <timestamp+0x3>
    18b4:	48 0e       	add	r4, r24
    18b6:	59 1e       	adc	r5, r25
    18b8:	6a 1e       	adc	r6, r26
    18ba:	7b 1e       	adc	r7, r27
    18bc:	4a 82       	std	Y+2, r4	; 0x02
    18be:	5b 82       	std	Y+3, r5	; 0x03
    18c0:	6c 82       	std	Y+4, r6	; 0x04
    18c2:	7d 82       	std	Y+5, r7	; 0x05
    18c4:	18 14       	cp	r1, r8
    18c6:	19 04       	cpc	r1, r9
    18c8:	1a 04       	cpc	r1, r10
    18ca:	1b 04       	cpc	r1, r11
    18cc:	44 f0       	brlt	.+16     	; 0x18de <async+0x9e>
    18ce:	0f 2e       	mov	r0, r31
    18d0:	88 24       	eor	r8, r8
    18d2:	8a 94       	dec	r8
    18d4:	98 2c       	mov	r9, r8
    18d6:	a8 2c       	mov	r10, r8
    18d8:	ff e7       	ldi	r31, 0x7F	; 127
    18da:	bf 2e       	mov	r11, r31
    18dc:	f0 2d       	mov	r31, r0
    18de:	84 0c       	add	r8, r4
    18e0:	95 1c       	adc	r9, r5
    18e2:	a6 1c       	adc	r10, r6
    18e4:	b7 1c       	adc	r11, r7
    18e6:	8e 82       	std	Y+6, r8	; 0x06
    18e8:	9f 82       	std	Y+7, r9	; 0x07
    18ea:	a8 86       	std	Y+8, r10	; 0x08
    18ec:	b9 86       	std	Y+9, r11	; 0x09
    18ee:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <overflows>
    18f2:	30 91 39 01 	lds	r19, 0x0139	; 0x800139 <overflows+0x1>
    18f6:	c9 01       	movw	r24, r18
    18f8:	03 2e       	mov	r0, r19
    18fa:	00 0c       	add	r0, r0
    18fc:	aa 0b       	sbc	r26, r26
    18fe:	bb 0b       	sbc	r27, r27
    1900:	dc 01       	movw	r26, r24
    1902:	99 27       	eor	r25, r25
    1904:	88 27       	eor	r24, r24
    1906:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    190a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    190e:	60 e0       	ldi	r22, 0x00	; 0
    1910:	70 e0       	ldi	r23, 0x00	; 0
    1912:	84 2b       	or	r24, r20
    1914:	95 2b       	or	r25, r21
    1916:	a6 2b       	or	r26, r22
    1918:	b7 2b       	or	r27, r23
    191a:	b0 9b       	sbis	0x16, 0	; 22
    191c:	13 c0       	rjmp	.+38     	; 0x1944 <async+0x104>
    191e:	c9 01       	movw	r24, r18
    1920:	01 96       	adiw	r24, 0x01	; 1
    1922:	09 2e       	mov	r0, r25
    1924:	00 0c       	add	r0, r0
    1926:	aa 0b       	sbc	r26, r26
    1928:	bb 0b       	sbc	r27, r27
    192a:	dc 01       	movw	r26, r24
    192c:	99 27       	eor	r25, r25
    192e:	88 27       	eor	r24, r24
    1930:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1934:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1938:	60 e0       	ldi	r22, 0x00	; 0
    193a:	70 e0       	ldi	r23, 0x00	; 0
    193c:	84 2b       	or	r24, r20
    193e:	95 2b       	or	r25, r21
    1940:	a6 2b       	or	r26, r22
    1942:	b7 2b       	or	r27, r23
    1944:	48 1a       	sub	r4, r24
    1946:	59 0a       	sbc	r5, r25
    1948:	6a 0a       	sbc	r6, r26
    194a:	7b 0a       	sbc	r7, r27
    194c:	14 14       	cp	r1, r4
    194e:	15 04       	cpc	r1, r5
    1950:	16 04       	cpc	r1, r6
    1952:	17 04       	cpc	r1, r7
    1954:	ac f5       	brge	.+106    	; 0x19c0 <async+0x180>
    1956:	6e e3       	ldi	r22, 0x3E	; 62
    1958:	71 e0       	ldi	r23, 0x01	; 1
    195a:	ce 01       	movw	r24, r28
    195c:	0e 94 bf 02 	call	0x57e	; 0x57e <enqueueByBaseline>
    1960:	e0 91 3e 01 	lds	r30, 0x013E	; 0x80013e <timerQ>
    1964:	f0 91 3f 01 	lds	r31, 0x013F	; 0x80013f <timerQ+0x1>
    1968:	30 97       	sbiw	r30, 0x00	; 0
    196a:	21 f1       	breq	.+72     	; 0x19b4 <async+0x174>
    196c:	82 81       	ldd	r24, Z+2	; 0x02
    196e:	93 81       	ldd	r25, Z+3	; 0x03
    1970:	a4 81       	ldd	r26, Z+4	; 0x04
    1972:	b5 81       	ldd	r27, Z+5	; 0x05
    1974:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <overflows>
    1978:	30 91 39 01 	lds	r19, 0x0139	; 0x800139 <overflows+0x1>
    197c:	2a 17       	cp	r18, r26
    197e:	3b 07       	cpc	r19, r27
    1980:	c9 f4       	brne	.+50     	; 0x19b4 <async+0x174>
    1982:	9c 01       	movw	r18, r24
    1984:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1988:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    198c:	84 1b       	sub	r24, r20
    198e:	95 0b       	sbc	r25, r21
    1990:	01 97       	sbiw	r24, 0x01	; 1
    1992:	31 f4       	brne	.+12     	; 0x19a0 <async+0x160>
    1994:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1998:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    199c:	2f 5f       	subi	r18, 0xFF	; 255
    199e:	3f 4f       	sbci	r19, 0xFF	; 255
    19a0:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    19a4:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    19a8:	ef e6       	ldi	r30, 0x6F	; 111
    19aa:	f0 e0       	ldi	r31, 0x00	; 0
    19ac:	80 81       	ld	r24, Z
    19ae:	82 60       	ori	r24, 0x02	; 2
    19b0:	80 83       	st	Z, r24
    19b2:	39 c0       	rjmp	.+114    	; 0x1a26 <async+0x1e6>
    19b4:	ef e6       	ldi	r30, 0x6F	; 111
    19b6:	f0 e0       	ldi	r31, 0x00	; 0
    19b8:	80 81       	ld	r24, Z
    19ba:	8d 7f       	andi	r24, 0xFD	; 253
    19bc:	80 83       	st	Z, r24
    19be:	33 c0       	rjmp	.+102    	; 0x1a26 <async+0x1e6>
    19c0:	60 e4       	ldi	r22, 0x40	; 64
    19c2:	71 e0       	ldi	r23, 0x01	; 1
    19c4:	ce 01       	movw	r24, r28
    19c6:	0e 94 8e 02 	call	0x51c	; 0x51c <enqueueByDeadline>
    19ca:	33 20       	and	r3, r3
    19cc:	61 f1       	breq	.+88     	; 0x1a26 <async+0x1e6>
    19ce:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    19d2:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    19d6:	89 2b       	or	r24, r25
    19d8:	31 f1       	breq	.+76     	; 0x1a26 <async+0x1e6>
    19da:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <msgQ>
    19de:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <msgQ+0x1>
    19e2:	86 81       	ldd	r24, Z+6	; 0x06
    19e4:	97 81       	ldd	r25, Z+7	; 0x07
    19e6:	a0 85       	ldd	r26, Z+8	; 0x08
    19e8:	b1 85       	ldd	r27, Z+9	; 0x09
    19ea:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    19ee:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    19f2:	02 80       	ldd	r0, Z+2	; 0x02
    19f4:	f3 81       	ldd	r31, Z+3	; 0x03
    19f6:	e0 2d       	mov	r30, r0
    19f8:	46 81       	ldd	r20, Z+6	; 0x06
    19fa:	57 81       	ldd	r21, Z+7	; 0x07
    19fc:	60 85       	ldd	r22, Z+8	; 0x08
    19fe:	71 85       	ldd	r23, Z+9	; 0x09
    1a00:	84 1b       	sub	r24, r20
    1a02:	95 0b       	sbc	r25, r21
    1a04:	a6 0b       	sbc	r26, r22
    1a06:	b7 0b       	sbc	r27, r23
    1a08:	72 f4       	brpl	.+28     	; 0x1a26 <async+0x1e6>
    1a0a:	84 e0       	ldi	r24, 0x04	; 4
    1a0c:	91 e0       	ldi	r25, 0x01	; 1
    1a0e:	0e 94 1b 03 	call	0x636	; 0x636 <pop>
    1a12:	62 e0       	ldi	r22, 0x02	; 2
    1a14:	71 e0       	ldi	r23, 0x01	; 1
    1a16:	0e 94 11 03 	call	0x622	; 0x622 <push>
    1a1a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
    1a1e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
    1a22:	0e 94 6e 02 	call	0x4dc	; 0x4dc <dispatch>
    1a26:	33 20       	and	r3, r3
    1a28:	09 f0       	breq	.+2      	; 0x1a2c <async+0x1ec>
    1a2a:	78 94       	sei
    1a2c:	ce 01       	movw	r24, r28
    1a2e:	df 91       	pop	r29
    1a30:	cf 91       	pop	r28
    1a32:	1f 91       	pop	r17
    1a34:	0f 91       	pop	r16
    1a36:	ff 90       	pop	r15
    1a38:	ef 90       	pop	r14
    1a3a:	df 90       	pop	r13
    1a3c:	cf 90       	pop	r12
    1a3e:	bf 90       	pop	r11
    1a40:	af 90       	pop	r10
    1a42:	9f 90       	pop	r9
    1a44:	8f 90       	pop	r8
    1a46:	7f 90       	pop	r7
    1a48:	6f 90       	pop	r6
    1a4a:	5f 90       	pop	r5
    1a4c:	4f 90       	pop	r4
    1a4e:	3f 90       	pop	r3
    1a50:	08 95       	ret

00001a52 <sync>:
    1a52:	cf 92       	push	r12
    1a54:	df 92       	push	r13
    1a56:	ef 92       	push	r14
    1a58:	ff 92       	push	r15
    1a5a:	0f 93       	push	r16
    1a5c:	1f 93       	push	r17
    1a5e:	cf 93       	push	r28
    1a60:	df 93       	push	r29
    1a62:	ec 01       	movw	r28, r24
    1a64:	7b 01       	movw	r14, r22
    1a66:	6a 01       	movw	r12, r20
    1a68:	1f b7       	in	r17, 0x3f	; 63
    1a6a:	10 78       	andi	r17, 0x80	; 128
    1a6c:	f8 94       	cli
    1a6e:	a8 81       	ld	r26, Y
    1a70:	b9 81       	ldd	r27, Y+1	; 0x01
    1a72:	10 97       	sbiw	r26, 0x00	; 0
    1a74:	19 f4       	brne	.+6      	; 0x1a7c <sync+0x2a>
    1a76:	35 c0       	rjmp	.+106    	; 0x1ae2 <sync+0x90>
    1a78:	a0 81       	ld	r26, Z
    1a7a:	b1 81       	ldd	r27, Z+1	; 0x01
    1a7c:	14 96       	adiw	r26, 0x04	; 4
    1a7e:	ed 91       	ld	r30, X+
    1a80:	fc 91       	ld	r31, X
    1a82:	15 97       	sbiw	r26, 0x05	; 5
    1a84:	30 97       	sbiw	r30, 0x00	; 0
    1a86:	c1 f7       	brne	.-16     	; 0x1a78 <sync+0x26>
    1a88:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1a8c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1a90:	a2 17       	cp	r26, r18
    1a92:	b3 07       	cpc	r27, r19
    1a94:	11 f0       	breq	.+4      	; 0x1a9a <sync+0x48>
    1a96:	11 11       	cpse	r17, r1
    1a98:	07 c0       	rjmp	.+14     	; 0x1aa8 <sync+0x56>
    1a9a:	11 23       	and	r17, r17
    1a9c:	09 f4       	brne	.+2      	; 0x1aa0 <sync+0x4e>
    1a9e:	4a c0       	rjmp	.+148    	; 0x1b34 <sync+0xe2>
    1aa0:	78 94       	sei
    1aa2:	8f ef       	ldi	r24, 0xFF	; 255
    1aa4:	9f ef       	ldi	r25, 0xFF	; 255
    1aa6:	4e c0       	rjmp	.+156    	; 0x1b44 <sync+0xf2>
    1aa8:	8a 81       	ldd	r24, Y+2	; 0x02
    1aaa:	9b 81       	ldd	r25, Y+3	; 0x03
    1aac:	00 97       	sbiw	r24, 0x00	; 0
    1aae:	19 f0       	breq	.+6      	; 0x1ab6 <sync+0x64>
    1ab0:	fc 01       	movw	r30, r24
    1ab2:	15 82       	std	Z+5, r1	; 0x05
    1ab4:	14 82       	std	Z+4, r1	; 0x04
    1ab6:	3b 83       	std	Y+3, r19	; 0x03
    1ab8:	2a 83       	std	Y+2, r18	; 0x02
    1aba:	f9 01       	movw	r30, r18
    1abc:	d5 83       	std	Z+5, r29	; 0x05
    1abe:	c4 83       	std	Z+4, r28	; 0x04
    1ac0:	cd 01       	movw	r24, r26
    1ac2:	0e 94 6e 02 	call	0x4dc	; 0x4dc <dispatch>
    1ac6:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1aca:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1ace:	82 81       	ldd	r24, Z+2	; 0x02
    1ad0:	93 81       	ldd	r25, Z+3	; 0x03
    1ad2:	89 2b       	or	r24, r25
    1ad4:	31 f4       	brne	.+12     	; 0x1ae2 <sync+0x90>
    1ad6:	11 23       	and	r17, r17
    1ad8:	81 f1       	breq	.+96     	; 0x1b3a <sync+0xe8>
    1ada:	78 94       	sei
    1adc:	80 e0       	ldi	r24, 0x00	; 0
    1ade:	90 e0       	ldi	r25, 0x00	; 0
    1ae0:	31 c0       	rjmp	.+98     	; 0x1b44 <sync+0xf2>
    1ae2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1ae6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1aea:	99 83       	std	Y+1, r25	; 0x01
    1aec:	88 83       	st	Y, r24
    1aee:	11 23       	and	r17, r17
    1af0:	29 f0       	breq	.+10     	; 0x1afc <sync+0xaa>
    1af2:	8a 81       	ldd	r24, Y+2	; 0x02
    1af4:	9b 81       	ldd	r25, Y+3	; 0x03
    1af6:	01 97       	sbiw	r24, 0x01	; 1
    1af8:	09 f0       	breq	.+2      	; 0x1afc <sync+0xaa>
    1afa:	78 94       	sei
    1afc:	b6 01       	movw	r22, r12
    1afe:	ce 01       	movw	r24, r28
    1b00:	f7 01       	movw	r30, r14
    1b02:	09 95       	icall
    1b04:	f8 2e       	mov	r15, r24
    1b06:	09 2f       	mov	r16, r25
    1b08:	8f b7       	in	r24, 0x3f	; 63
    1b0a:	f8 94       	cli
    1b0c:	19 82       	std	Y+1, r1	; 0x01
    1b0e:	18 82       	st	Y, r1
    1b10:	8a 81       	ldd	r24, Y+2	; 0x02
    1b12:	9b 81       	ldd	r25, Y+3	; 0x03
    1b14:	82 30       	cpi	r24, 0x02	; 2
    1b16:	91 05       	cpc	r25, r1
    1b18:	38 f0       	brcs	.+14     	; 0x1b28 <sync+0xd6>
    1b1a:	1b 82       	std	Y+3, r1	; 0x03
    1b1c:	1a 82       	std	Y+2, r1	; 0x02
    1b1e:	fc 01       	movw	r30, r24
    1b20:	15 82       	std	Z+5, r1	; 0x05
    1b22:	14 82       	std	Z+4, r1	; 0x04
    1b24:	0e 94 6e 02 	call	0x4dc	; 0x4dc <dispatch>
    1b28:	11 23       	and	r17, r17
    1b2a:	51 f0       	breq	.+20     	; 0x1b40 <sync+0xee>
    1b2c:	78 94       	sei
    1b2e:	8f 2d       	mov	r24, r15
    1b30:	90 2f       	mov	r25, r16
    1b32:	08 c0       	rjmp	.+16     	; 0x1b44 <sync+0xf2>
    1b34:	8f ef       	ldi	r24, 0xFF	; 255
    1b36:	9f ef       	ldi	r25, 0xFF	; 255
    1b38:	05 c0       	rjmp	.+10     	; 0x1b44 <sync+0xf2>
    1b3a:	80 e0       	ldi	r24, 0x00	; 0
    1b3c:	90 e0       	ldi	r25, 0x00	; 0
    1b3e:	02 c0       	rjmp	.+4      	; 0x1b44 <sync+0xf2>
    1b40:	8f 2d       	mov	r24, r15
    1b42:	90 2f       	mov	r25, r16
    1b44:	df 91       	pop	r29
    1b46:	cf 91       	pop	r28
    1b48:	1f 91       	pop	r17
    1b4a:	0f 91       	pop	r16
    1b4c:	ff 90       	pop	r15
    1b4e:	ef 90       	pop	r14
    1b50:	df 90       	pop	r13
    1b52:	cf 90       	pop	r12
    1b54:	08 95       	ret

00001b56 <run>:
    1b56:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1b5a:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1b5e:	80 e4       	ldi	r24, 0x40	; 64
    1b60:	91 e0       	ldi	r25, 0x01	; 1
    1b62:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <dequeue>
    1b66:	ec 01       	movw	r28, r24
    1b68:	f8 01       	movw	r30, r16
    1b6a:	93 83       	std	Z+3, r25	; 0x03
    1b6c:	82 83       	std	Z+2, r24	; 0x02
    1b6e:	78 94       	sei
    1b70:	6c 85       	ldd	r22, Y+12	; 0x0c
    1b72:	7d 85       	ldd	r23, Y+13	; 0x0d
    1b74:	4e 85       	ldd	r20, Y+14	; 0x0e
    1b76:	5f 85       	ldd	r21, Y+15	; 0x0f
    1b78:	8a 85       	ldd	r24, Y+10	; 0x0a
    1b7a:	9b 85       	ldd	r25, Y+11	; 0x0b
    1b7c:	0e 94 29 0d 	call	0x1a52	; 0x1a52 <sync>
    1b80:	8f b7       	in	r24, 0x3f	; 63
    1b82:	f8 94       	cli
    1b84:	66 e0       	ldi	r22, 0x06	; 6
    1b86:	71 e0       	ldi	r23, 0x01	; 1
    1b88:	ce 01       	movw	r24, r28
    1b8a:	0e 94 07 03 	call	0x60e	; 0x60e <insert>
    1b8e:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1b92:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1b96:	01 90       	ld	r0, Z+
    1b98:	f0 81       	ld	r31, Z
    1b9a:	e0 2d       	mov	r30, r0
    1b9c:	c2 81       	ldd	r28, Z+2	; 0x02
    1b9e:	d3 81       	ldd	r29, Z+3	; 0x03
    1ba0:	e0 91 40 01 	lds	r30, 0x0140	; 0x800140 <msgQ>
    1ba4:	f0 91 41 01 	lds	r31, 0x0141	; 0x800141 <msgQ+0x1>
    1ba8:	30 97       	sbiw	r30, 0x00	; 0
    1baa:	a1 f0       	breq	.+40     	; 0x1bd4 <run+0x7e>
    1bac:	20 97       	sbiw	r28, 0x00	; 0
    1bae:	99 f2       	breq	.-90     	; 0x1b56 <run>
    1bb0:	86 81       	ldd	r24, Z+6	; 0x06
    1bb2:	97 81       	ldd	r25, Z+7	; 0x07
    1bb4:	a0 85       	ldd	r26, Z+8	; 0x08
    1bb6:	b1 85       	ldd	r27, Z+9	; 0x09
    1bb8:	4e 81       	ldd	r20, Y+6	; 0x06
    1bba:	5f 81       	ldd	r21, Y+7	; 0x07
    1bbc:	68 85       	ldd	r22, Y+8	; 0x08
    1bbe:	79 85       	ldd	r23, Y+9	; 0x09
    1bc0:	84 1b       	sub	r24, r20
    1bc2:	95 0b       	sbc	r25, r21
    1bc4:	a6 0b       	sbc	r26, r22
    1bc6:	b7 0b       	sbc	r27, r23
    1bc8:	18 16       	cp	r1, r24
    1bca:	19 06       	cpc	r1, r25
    1bcc:	1a 06       	cpc	r1, r26
    1bce:	1b 06       	cpc	r1, r27
    1bd0:	0c f0       	brlt	.+2      	; 0x1bd4 <run+0x7e>
    1bd2:	c1 cf       	rjmp	.-126    	; 0x1b56 <run>
    1bd4:	82 e0       	ldi	r24, 0x02	; 2
    1bd6:	91 e0       	ldi	r25, 0x01	; 1
    1bd8:	0e 94 1b 03 	call	0x636	; 0x636 <pop>
    1bdc:	64 e0       	ldi	r22, 0x04	; 4
    1bde:	71 e0       	ldi	r23, 0x01	; 1
    1be0:	0e 94 11 03 	call	0x622	; 0x622 <push>
    1be4:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <activeStack>
    1be8:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <activeStack+0x1>
    1bec:	02 c0       	rjmp	.+4      	; 0x1bf2 <run+0x9c>
    1bee:	a0 81       	ld	r26, Z
    1bf0:	b1 81       	ldd	r27, Z+1	; 0x01
    1bf2:	14 96       	adiw	r26, 0x04	; 4
    1bf4:	ed 91       	ld	r30, X+
    1bf6:	fc 91       	ld	r31, X
    1bf8:	15 97       	sbiw	r26, 0x05	; 5
    1bfa:	30 97       	sbiw	r30, 0x00	; 0
    1bfc:	c1 f7       	brne	.-16     	; 0x1bee <run+0x98>
    1bfe:	cd 01       	movw	r24, r26
    1c00:	0e 94 6e 02 	call	0x4dc	; 0x4dc <dispatch>
    1c04:	a8 cf       	rjmp	.-176    	; 0x1b56 <run>

00001c06 <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    1c06:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    1c08:	42 31       	cpi	r20, 0x12	; 18
    1c0a:	b8 f4       	brcc	.+46     	; 0x1c3a <install+0x34>
        char status;
        DISABLE(status);
    1c0c:	9f b7       	in	r25, 0x3f	; 63
    1c0e:	90 78       	andi	r25, 0x80	; 128
    1c10:	f8 94       	cli
        otable[i] = obj;
    1c12:	50 e0       	ldi	r21, 0x00	; 0
    1c14:	44 0f       	add	r20, r20
    1c16:	55 1f       	adc	r21, r21
    1c18:	da 01       	movw	r26, r20
    1c1a:	ae 5b       	subi	r26, 0xBE	; 190
    1c1c:	be 4f       	sbci	r27, 0xFE	; 254
    1c1e:	ed 93       	st	X+, r30
    1c20:	fc 93       	st	X, r31
        mtable[i] = m;
    1c22:	da 01       	movw	r26, r20
    1c24:	a6 52       	subi	r26, 0x26	; 38
    1c26:	be 4f       	sbci	r27, 0xFE	; 254
    1c28:	6d 93       	st	X+, r22
    1c2a:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1c2c:	21 e0       	ldi	r18, 0x01	; 1
    1c2e:	30 e0       	ldi	r19, 0x00	; 0
    1c30:	33 83       	std	Z+3, r19	; 0x03
    1c32:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    1c34:	99 23       	and	r25, r25
    1c36:	09 f0       	breq	.+2      	; 0x1c3a <install+0x34>
    1c38:	78 94       	sei
    1c3a:	08 95       	ret

00001c3c <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1c3c:	8c 01       	movw	r16, r24
    1c3e:	7b 01       	movw	r14, r22
    1c40:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1c42:	8f b7       	in	r24, 0x3f	; 63
    1c44:	f8 94       	cli
    initialize();
    1c46:	0e 94 cf 01 	call	0x39e	; 0x39e <initialize>
    ENABLE(1);
    1c4a:	78 94       	sei
    if (m != NULL)
    1c4c:	e1 14       	cp	r14, r1
    1c4e:	f1 04       	cpc	r15, r1
    1c50:	41 f0       	breq	.+16     	; 0x1c62 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1c52:	20 e0       	ldi	r18, 0x00	; 0
    1c54:	30 e0       	ldi	r19, 0x00	; 0
    1c56:	a9 01       	movw	r20, r18
    1c58:	60 e0       	ldi	r22, 0x00	; 0
    1c5a:	70 e0       	ldi	r23, 0x00	; 0
    1c5c:	cb 01       	movw	r24, r22
    1c5e:	0e 94 20 0c 	call	0x1840	; 0x1840 <async>
    DISABLE(status);
    1c62:	8f b7       	in	r24, 0x3f	; 63
    1c64:	f8 94       	cli
    idle();
    1c66:	0e 94 27 0b 	call	0x164e	; 0x164e <idle>

00001c6a <__divmodsi4>:
    1c6a:	05 2e       	mov	r0, r21
    1c6c:	97 fb       	bst	r25, 7
    1c6e:	1e f4       	brtc	.+6      	; 0x1c76 <__divmodsi4+0xc>
    1c70:	00 94       	com	r0
    1c72:	0e 94 4c 0e 	call	0x1c98	; 0x1c98 <__negsi2>
    1c76:	57 fd       	sbrc	r21, 7
    1c78:	07 d0       	rcall	.+14     	; 0x1c88 <__divmodsi4_neg2>
    1c7a:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__udivmodsi4>
    1c7e:	07 fc       	sbrc	r0, 7
    1c80:	03 d0       	rcall	.+6      	; 0x1c88 <__divmodsi4_neg2>
    1c82:	4e f4       	brtc	.+18     	; 0x1c96 <__divmodsi4_exit>
    1c84:	0c 94 4c 0e 	jmp	0x1c98	; 0x1c98 <__negsi2>

00001c88 <__divmodsi4_neg2>:
    1c88:	50 95       	com	r21
    1c8a:	40 95       	com	r20
    1c8c:	30 95       	com	r19
    1c8e:	21 95       	neg	r18
    1c90:	3f 4f       	sbci	r19, 0xFF	; 255
    1c92:	4f 4f       	sbci	r20, 0xFF	; 255
    1c94:	5f 4f       	sbci	r21, 0xFF	; 255

00001c96 <__divmodsi4_exit>:
    1c96:	08 95       	ret

00001c98 <__negsi2>:
    1c98:	90 95       	com	r25
    1c9a:	80 95       	com	r24
    1c9c:	70 95       	com	r23
    1c9e:	61 95       	neg	r22
    1ca0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ca2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ca4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ca6:	08 95       	ret

00001ca8 <__udivmodsi4>:
    1ca8:	a1 e2       	ldi	r26, 0x21	; 33
    1caa:	1a 2e       	mov	r1, r26
    1cac:	aa 1b       	sub	r26, r26
    1cae:	bb 1b       	sub	r27, r27
    1cb0:	fd 01       	movw	r30, r26
    1cb2:	0d c0       	rjmp	.+26     	; 0x1cce <__udivmodsi4_ep>

00001cb4 <__udivmodsi4_loop>:
    1cb4:	aa 1f       	adc	r26, r26
    1cb6:	bb 1f       	adc	r27, r27
    1cb8:	ee 1f       	adc	r30, r30
    1cba:	ff 1f       	adc	r31, r31
    1cbc:	a2 17       	cp	r26, r18
    1cbe:	b3 07       	cpc	r27, r19
    1cc0:	e4 07       	cpc	r30, r20
    1cc2:	f5 07       	cpc	r31, r21
    1cc4:	20 f0       	brcs	.+8      	; 0x1cce <__udivmodsi4_ep>
    1cc6:	a2 1b       	sub	r26, r18
    1cc8:	b3 0b       	sbc	r27, r19
    1cca:	e4 0b       	sbc	r30, r20
    1ccc:	f5 0b       	sbc	r31, r21

00001cce <__udivmodsi4_ep>:
    1cce:	66 1f       	adc	r22, r22
    1cd0:	77 1f       	adc	r23, r23
    1cd2:	88 1f       	adc	r24, r24
    1cd4:	99 1f       	adc	r25, r25
    1cd6:	1a 94       	dec	r1
    1cd8:	69 f7       	brne	.-38     	; 0x1cb4 <__udivmodsi4_loop>
    1cda:	60 95       	com	r22
    1cdc:	70 95       	com	r23
    1cde:	80 95       	com	r24
    1ce0:	90 95       	com	r25
    1ce2:	9b 01       	movw	r18, r22
    1ce4:	ac 01       	movw	r20, r24
    1ce6:	bd 01       	movw	r22, r26
    1ce8:	cf 01       	movw	r24, r30
    1cea:	08 95       	ret

00001cec <setjmp>:
    1cec:	dc 01       	movw	r26, r24
    1cee:	2d 92       	st	X+, r2
    1cf0:	3d 92       	st	X+, r3
    1cf2:	4d 92       	st	X+, r4
    1cf4:	5d 92       	st	X+, r5
    1cf6:	6d 92       	st	X+, r6
    1cf8:	7d 92       	st	X+, r7
    1cfa:	8d 92       	st	X+, r8
    1cfc:	9d 92       	st	X+, r9
    1cfe:	ad 92       	st	X+, r10
    1d00:	bd 92       	st	X+, r11
    1d02:	cd 92       	st	X+, r12
    1d04:	dd 92       	st	X+, r13
    1d06:	ed 92       	st	X+, r14
    1d08:	fd 92       	st	X+, r15
    1d0a:	0d 93       	st	X+, r16
    1d0c:	1d 93       	st	X+, r17
    1d0e:	cd 93       	st	X+, r28
    1d10:	dd 93       	st	X+, r29
    1d12:	ff 91       	pop	r31
    1d14:	ef 91       	pop	r30
    1d16:	8d b7       	in	r24, 0x3d	; 61
    1d18:	8d 93       	st	X+, r24
    1d1a:	8e b7       	in	r24, 0x3e	; 62
    1d1c:	8d 93       	st	X+, r24
    1d1e:	8f b7       	in	r24, 0x3f	; 63
    1d20:	8d 93       	st	X+, r24
    1d22:	ed 93       	st	X+, r30
    1d24:	fd 93       	st	X+, r31
    1d26:	88 27       	eor	r24, r24
    1d28:	99 27       	eor	r25, r25
    1d2a:	09 94       	ijmp

00001d2c <longjmp>:
    1d2c:	dc 01       	movw	r26, r24
    1d2e:	cb 01       	movw	r24, r22
    1d30:	81 30       	cpi	r24, 0x01	; 1
    1d32:	91 05       	cpc	r25, r1
    1d34:	81 1d       	adc	r24, r1
    1d36:	2d 90       	ld	r2, X+
    1d38:	3d 90       	ld	r3, X+
    1d3a:	4d 90       	ld	r4, X+
    1d3c:	5d 90       	ld	r5, X+
    1d3e:	6d 90       	ld	r6, X+
    1d40:	7d 90       	ld	r7, X+
    1d42:	8d 90       	ld	r8, X+
    1d44:	9d 90       	ld	r9, X+
    1d46:	ad 90       	ld	r10, X+
    1d48:	bd 90       	ld	r11, X+
    1d4a:	cd 90       	ld	r12, X+
    1d4c:	dd 90       	ld	r13, X+
    1d4e:	ed 90       	ld	r14, X+
    1d50:	fd 90       	ld	r15, X+
    1d52:	0d 91       	ld	r16, X+
    1d54:	1d 91       	ld	r17, X+
    1d56:	cd 91       	ld	r28, X+
    1d58:	dd 91       	ld	r29, X+
    1d5a:	ed 91       	ld	r30, X+
    1d5c:	fd 91       	ld	r31, X+
    1d5e:	0d 90       	ld	r0, X+
    1d60:	f8 94       	cli
    1d62:	fe bf       	out	0x3e, r31	; 62
    1d64:	0f be       	out	0x3f, r0	; 63
    1d66:	ed bf       	out	0x3d, r30	; 61
    1d68:	ed 91       	ld	r30, X+
    1d6a:	fd 91       	ld	r31, X+
    1d6c:	09 94       	ijmp

00001d6e <_exit>:
    1d6e:	f8 94       	cli

00001d70 <__stop_program>:
    1d70:	ff cf       	rjmp	.-2      	; 0x1d70 <__stop_program>
